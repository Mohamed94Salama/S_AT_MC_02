
TIMER_testcases.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000025ae  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000020  00800060  000025ae  00002642  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000026  00800080  00800080  00002662  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002662  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002694  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b0  00000000  00000000  000026d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c23  00000000  00000000  00002880  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000bff  00000000  00000000  000044a3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002848  00000000  00000000  000050a2  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004e8  00000000  00000000  000078ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a14  00000000  00000000  00007dd4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001284  00000000  00000000  000087e8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000180  00000000  00000000  00009a6c  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 6a 00 	jmp	0xd4	; 0xd4 <__ctors_end>
       4:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
       8:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
       c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
      10:	0c 94 e4 0e 	jmp	0x1dc8	; 0x1dc8 <__vector_4>
      14:	0c 94 6d 0e 	jmp	0x1cda	; 0x1cda <__vector_5>
      18:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
      1c:	0c 94 42 0e 	jmp	0x1c84	; 0x1c84 <__vector_7>
      20:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
      24:	0c 94 d1 0d 	jmp	0x1ba2	; 0x1ba2 <__vector_9>
      28:	0c 94 a7 0d 	jmp	0x1b4e	; 0x1b4e <__vector_10>
      2c:	0c 94 30 0d 	jmp	0x1a60	; 0x1a60 <__vector_11>
      30:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
      34:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
      38:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
      3c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
      40:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
      44:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
      48:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
      4c:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
      50:	0c 94 87 00 	jmp	0x10e	; 0x10e <__bad_interrupt>
      54:	ac 00       	.word	0x00ac	; ????
      56:	be 00       	.word	0x00be	; ????
      58:	d0 00       	.word	0x00d0	; ????
      5a:	e2 00       	.word	0x00e2	; ????
      5c:	f4 00       	.word	0x00f4	; ????
      5e:	06 01       	movw	r0, r12
      60:	18 01       	movw	r2, r16
      62:	2a 01       	movw	r4, r20
      64:	3c 01       	movw	r6, r24
      66:	4f 01       	movw	r8, r30
      68:	61 01       	movw	r12, r2
      6a:	73 01       	movw	r14, r6
      6c:	85 01       	movw	r16, r10
      6e:	97 01       	movw	r18, r14
      70:	a9 01       	movw	r20, r18
      72:	bb 01       	movw	r22, r22
      74:	cd 01       	movw	r24, r26
      76:	df 01       	movw	r26, r30
      78:	f1 01       	movw	r30, r2
      7a:	03 02       	muls	r16, r19
      7c:	15 02       	muls	r17, r21
      7e:	27 02       	muls	r18, r23
      80:	39 02       	muls	r19, r25
      82:	4b 02       	muls	r20, r27
      84:	50 02       	muls	r21, r16
      86:	62 02       	muls	r22, r18
      88:	74 02       	muls	r23, r20
      8a:	86 02       	muls	r24, r22
      8c:	98 02       	muls	r25, r24
      8e:	aa 02       	muls	r26, r26
      90:	bc 02       	muls	r27, r28
      92:	ce 02       	muls	r28, r30
      94:	98 03       	fmulsu	r17, r16
      96:	9e 03       	fmulsu	r17, r22
      98:	a4 03       	fmuls	r18, r20
      9a:	aa 03       	fmulsu	r18, r18
      9c:	b0 03       	fmuls	r19, r16
      9e:	b6 03       	fmuls	r19, r22
      a0:	bc 03       	fmulsu	r19, r20
      a2:	c2 03       	fmuls	r20, r18
      a4:	c7 03       	fmuls	r20, r23
      a6:	cd 03       	fmulsu	r20, r21
      a8:	d3 03       	fmuls	r21, r19
      aa:	d9 03       	fmulsu	r21, r17
      ac:	df 03       	fmulsu	r21, r23
      ae:	e5 03       	fmuls	r22, r21
      b0:	eb 03       	fmulsu	r22, r19
      b2:	f1 03       	fmuls	r23, r17
      b4:	f6 03       	fmuls	r23, r22
      b6:	fc 03       	fmulsu	r23, r20
      b8:	02 04       	cpc	r0, r2
      ba:	08 04       	cpc	r0, r8
      bc:	0e 04       	cpc	r0, r14
      be:	14 04       	cpc	r1, r4
      c0:	1a 04       	cpc	r1, r10
      c2:	20 04       	cpc	r2, r0
      c4:	25 04       	cpc	r2, r5
      c6:	2b 04       	cpc	r2, r11
      c8:	31 04       	cpc	r3, r1
      ca:	37 04       	cpc	r3, r7
      cc:	3d 04       	cpc	r3, r13
      ce:	43 04       	cpc	r4, r3
      d0:	49 04       	cpc	r4, r9
      d2:	4f 04       	cpc	r4, r15

000000d4 <__ctors_end>:
      d4:	11 24       	eor	r1, r1
      d6:	1f be       	out	0x3f, r1	; 63
      d8:	cf e5       	ldi	r28, 0x5F	; 95
      da:	d8 e0       	ldi	r29, 0x08	; 8
      dc:	de bf       	out	0x3e, r29	; 62
      de:	cd bf       	out	0x3d, r28	; 61

000000e0 <__do_copy_data>:
      e0:	10 e0       	ldi	r17, 0x00	; 0
      e2:	a0 e6       	ldi	r26, 0x60	; 96
      e4:	b0 e0       	ldi	r27, 0x00	; 0
      e6:	ee ea       	ldi	r30, 0xAE	; 174
      e8:	f5 e2       	ldi	r31, 0x25	; 37
      ea:	02 c0       	rjmp	.+4      	; 0xf0 <__do_copy_data+0x10>
      ec:	05 90       	lpm	r0, Z+
      ee:	0d 92       	st	X+, r0
      f0:	a0 38       	cpi	r26, 0x80	; 128
      f2:	b1 07       	cpc	r27, r17
      f4:	d9 f7       	brne	.-10     	; 0xec <__do_copy_data+0xc>

000000f6 <__do_clear_bss>:
      f6:	20 e0       	ldi	r18, 0x00	; 0
      f8:	a0 e8       	ldi	r26, 0x80	; 128
      fa:	b0 e0       	ldi	r27, 0x00	; 0
      fc:	01 c0       	rjmp	.+2      	; 0x100 <.do_clear_bss_start>

000000fe <.do_clear_bss_loop>:
      fe:	1d 92       	st	X+, r1

00000100 <.do_clear_bss_start>:
     100:	a6 3a       	cpi	r26, 0xA6	; 166
     102:	b2 07       	cpc	r27, r18
     104:	e1 f7       	brne	.-8      	; 0xfe <.do_clear_bss_loop>
     106:	0e 94 60 04 	call	0x8c0	; 0x8c0 <main>
     10a:	0c 94 d5 12 	jmp	0x25aa	; 0x25aa <_exit>

0000010e <__bad_interrupt>:
     10e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000112 <DIO_Init>:
				break;
			}
		}
	}
	return Error;
}
     112:	1f 93       	push	r17
     114:	cf 93       	push	r28
     116:	df 93       	push	r29
     118:	a0 e6       	ldi	r26, 0x60	; 96
     11a:	b0 e0       	ldi	r27, 0x00	; 0
     11c:	2c e6       	ldi	r18, 0x6C	; 108
     11e:	30 e0       	ldi	r19, 0x00	; 0
     120:	80 e0       	ldi	r24, 0x00	; 0
     122:	11 e0       	ldi	r17, 0x01	; 1
     124:	ed 01       	movw	r28, r26
     126:	ec 91       	ld	r30, X
     128:	e0 32       	cpi	r30, 0x20	; 32
     12a:	08 f0       	brcs	.+2      	; 0x12e <DIO_Init+0x1c>
     12c:	c8 c2       	rjmp	.+1424   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     12e:	11 96       	adiw	r26, 0x01	; 1
     130:	9c 91       	ld	r25, X
     132:	11 97       	sbiw	r26, 0x01	; 1
     134:	92 30       	cpi	r25, 0x02	; 2
     136:	08 f0       	brcs	.+2      	; 0x13a <DIO_Init+0x28>
     138:	c2 c2       	rjmp	.+1412   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     13a:	ca 81       	ldd	r28, Y+2	; 0x02
     13c:	c2 30       	cpi	r28, 0x02	; 2
     13e:	08 f0       	brcs	.+2      	; 0x142 <DIO_Init+0x30>
     140:	be c2       	rjmp	.+1404   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     142:	4e 2f       	mov	r20, r30
     144:	50 e0       	ldi	r21, 0x00	; 0
     146:	40 32       	cpi	r20, 0x20	; 32
     148:	51 05       	cpc	r21, r1
     14a:	08 f0       	brcs	.+2      	; 0x14e <DIO_Init+0x3c>
     14c:	39 c2       	rjmp	.+1138   	; 0x5c0 <__EEPROM_REGION_LENGTH__+0x1c0>
     14e:	fa 01       	movw	r30, r20
     150:	e6 5d       	subi	r30, 0xD6	; 214
     152:	ff 4f       	sbci	r31, 0xFF	; 255
     154:	0c 94 fd 11 	jmp	0x23fa	; 0x23fa <__tablejump2__>
     158:	91 30       	cpi	r25, 0x01	; 1
     15a:	19 f4       	brne	.+6      	; 0x162 <DIO_Init+0x50>
     15c:	d0 9a       	sbi	0x1a, 0	; 26
     15e:	81 2f       	mov	r24, r17
     160:	ae c2       	rjmp	.+1372   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     162:	91 11       	cpse	r25, r1
     164:	2f c2       	rjmp	.+1118   	; 0x5c4 <__EEPROM_REGION_LENGTH__+0x1c4>
     166:	c1 30       	cpi	r28, 0x01	; 1
     168:	21 f4       	brne	.+8      	; 0x172 <DIO_Init+0x60>
     16a:	d0 98       	cbi	0x1a, 0	; 26
     16c:	d8 9a       	sbi	0x1b, 0	; 27
     16e:	81 2f       	mov	r24, r17
     170:	a6 c2       	rjmp	.+1356   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     172:	c1 11       	cpse	r28, r1
     174:	29 c2       	rjmp	.+1106   	; 0x5c8 <__EEPROM_REGION_LENGTH__+0x1c8>
     176:	d0 98       	cbi	0x1a, 0	; 26
     178:	81 2f       	mov	r24, r17
     17a:	a1 c2       	rjmp	.+1346   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     17c:	91 30       	cpi	r25, 0x01	; 1
     17e:	19 f4       	brne	.+6      	; 0x186 <DIO_Init+0x74>
     180:	d1 9a       	sbi	0x1a, 1	; 26
     182:	81 2f       	mov	r24, r17
     184:	9c c2       	rjmp	.+1336   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     186:	91 11       	cpse	r25, r1
     188:	21 c2       	rjmp	.+1090   	; 0x5cc <__EEPROM_REGION_LENGTH__+0x1cc>
     18a:	c1 30       	cpi	r28, 0x01	; 1
     18c:	21 f4       	brne	.+8      	; 0x196 <DIO_Init+0x84>
     18e:	d1 98       	cbi	0x1a, 1	; 26
     190:	d9 9a       	sbi	0x1b, 1	; 27
     192:	81 2f       	mov	r24, r17
     194:	94 c2       	rjmp	.+1320   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     196:	c1 11       	cpse	r28, r1
     198:	1b c2       	rjmp	.+1078   	; 0x5d0 <__EEPROM_REGION_LENGTH__+0x1d0>
     19a:	d1 98       	cbi	0x1a, 1	; 26
     19c:	81 2f       	mov	r24, r17
     19e:	8f c2       	rjmp	.+1310   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     1a0:	91 30       	cpi	r25, 0x01	; 1
     1a2:	19 f4       	brne	.+6      	; 0x1aa <DIO_Init+0x98>
     1a4:	d2 9a       	sbi	0x1a, 2	; 26
     1a6:	81 2f       	mov	r24, r17
     1a8:	8a c2       	rjmp	.+1300   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     1aa:	91 11       	cpse	r25, r1
     1ac:	13 c2       	rjmp	.+1062   	; 0x5d4 <__EEPROM_REGION_LENGTH__+0x1d4>
     1ae:	c1 30       	cpi	r28, 0x01	; 1
     1b0:	21 f4       	brne	.+8      	; 0x1ba <DIO_Init+0xa8>
     1b2:	d2 98       	cbi	0x1a, 2	; 26
     1b4:	da 9a       	sbi	0x1b, 2	; 27
     1b6:	81 2f       	mov	r24, r17
     1b8:	82 c2       	rjmp	.+1284   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     1ba:	c1 11       	cpse	r28, r1
     1bc:	0d c2       	rjmp	.+1050   	; 0x5d8 <__EEPROM_REGION_LENGTH__+0x1d8>
     1be:	d2 98       	cbi	0x1a, 2	; 26
     1c0:	81 2f       	mov	r24, r17
     1c2:	7d c2       	rjmp	.+1274   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     1c4:	91 30       	cpi	r25, 0x01	; 1
     1c6:	19 f4       	brne	.+6      	; 0x1ce <DIO_Init+0xbc>
     1c8:	d3 9a       	sbi	0x1a, 3	; 26
     1ca:	81 2f       	mov	r24, r17
     1cc:	78 c2       	rjmp	.+1264   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     1ce:	91 11       	cpse	r25, r1
     1d0:	05 c2       	rjmp	.+1034   	; 0x5dc <__EEPROM_REGION_LENGTH__+0x1dc>
     1d2:	c1 30       	cpi	r28, 0x01	; 1
     1d4:	21 f4       	brne	.+8      	; 0x1de <DIO_Init+0xcc>
     1d6:	d3 98       	cbi	0x1a, 3	; 26
     1d8:	db 9a       	sbi	0x1b, 3	; 27
     1da:	81 2f       	mov	r24, r17
     1dc:	70 c2       	rjmp	.+1248   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     1de:	c1 11       	cpse	r28, r1
     1e0:	ff c1       	rjmp	.+1022   	; 0x5e0 <__EEPROM_REGION_LENGTH__+0x1e0>
     1e2:	d3 98       	cbi	0x1a, 3	; 26
     1e4:	81 2f       	mov	r24, r17
     1e6:	6b c2       	rjmp	.+1238   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     1e8:	91 30       	cpi	r25, 0x01	; 1
     1ea:	19 f4       	brne	.+6      	; 0x1f2 <DIO_Init+0xe0>
     1ec:	d4 9a       	sbi	0x1a, 4	; 26
     1ee:	81 2f       	mov	r24, r17
     1f0:	66 c2       	rjmp	.+1228   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     1f2:	91 11       	cpse	r25, r1
     1f4:	f7 c1       	rjmp	.+1006   	; 0x5e4 <__EEPROM_REGION_LENGTH__+0x1e4>
     1f6:	c1 30       	cpi	r28, 0x01	; 1
     1f8:	21 f4       	brne	.+8      	; 0x202 <DIO_Init+0xf0>
     1fa:	d4 98       	cbi	0x1a, 4	; 26
     1fc:	dc 9a       	sbi	0x1b, 4	; 27
     1fe:	81 2f       	mov	r24, r17
     200:	5e c2       	rjmp	.+1212   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     202:	c1 11       	cpse	r28, r1
     204:	f1 c1       	rjmp	.+994    	; 0x5e8 <__EEPROM_REGION_LENGTH__+0x1e8>
     206:	d4 98       	cbi	0x1a, 4	; 26
     208:	81 2f       	mov	r24, r17
     20a:	59 c2       	rjmp	.+1202   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     20c:	91 30       	cpi	r25, 0x01	; 1
     20e:	19 f4       	brne	.+6      	; 0x216 <DIO_Init+0x104>
     210:	d5 9a       	sbi	0x1a, 5	; 26
     212:	81 2f       	mov	r24, r17
     214:	54 c2       	rjmp	.+1192   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     216:	91 11       	cpse	r25, r1
     218:	e9 c1       	rjmp	.+978    	; 0x5ec <__EEPROM_REGION_LENGTH__+0x1ec>
     21a:	c1 30       	cpi	r28, 0x01	; 1
     21c:	21 f4       	brne	.+8      	; 0x226 <DIO_Init+0x114>
     21e:	d5 98       	cbi	0x1a, 5	; 26
     220:	dd 9a       	sbi	0x1b, 5	; 27
     222:	81 2f       	mov	r24, r17
     224:	4c c2       	rjmp	.+1176   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     226:	c1 11       	cpse	r28, r1
     228:	e3 c1       	rjmp	.+966    	; 0x5f0 <__EEPROM_REGION_LENGTH__+0x1f0>
     22a:	d5 98       	cbi	0x1a, 5	; 26
     22c:	81 2f       	mov	r24, r17
     22e:	47 c2       	rjmp	.+1166   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     230:	91 30       	cpi	r25, 0x01	; 1
     232:	19 f4       	brne	.+6      	; 0x23a <DIO_Init+0x128>
     234:	d6 9a       	sbi	0x1a, 6	; 26
     236:	81 2f       	mov	r24, r17
     238:	42 c2       	rjmp	.+1156   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     23a:	91 11       	cpse	r25, r1
     23c:	db c1       	rjmp	.+950    	; 0x5f4 <__EEPROM_REGION_LENGTH__+0x1f4>
     23e:	c1 30       	cpi	r28, 0x01	; 1
     240:	21 f4       	brne	.+8      	; 0x24a <DIO_Init+0x138>
     242:	d6 98       	cbi	0x1a, 6	; 26
     244:	de 9a       	sbi	0x1b, 6	; 27
     246:	81 2f       	mov	r24, r17
     248:	3a c2       	rjmp	.+1140   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     24a:	c1 11       	cpse	r28, r1
     24c:	d5 c1       	rjmp	.+938    	; 0x5f8 <__EEPROM_REGION_LENGTH__+0x1f8>
     24e:	d6 98       	cbi	0x1a, 6	; 26
     250:	81 2f       	mov	r24, r17
     252:	35 c2       	rjmp	.+1130   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     254:	91 30       	cpi	r25, 0x01	; 1
     256:	19 f4       	brne	.+6      	; 0x25e <DIO_Init+0x14c>
     258:	d7 9a       	sbi	0x1a, 7	; 26
     25a:	81 2f       	mov	r24, r17
     25c:	30 c2       	rjmp	.+1120   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     25e:	91 11       	cpse	r25, r1
     260:	cd c1       	rjmp	.+922    	; 0x5fc <__EEPROM_REGION_LENGTH__+0x1fc>
     262:	c1 30       	cpi	r28, 0x01	; 1
     264:	21 f4       	brne	.+8      	; 0x26e <DIO_Init+0x15c>
     266:	d7 98       	cbi	0x1a, 7	; 26
     268:	df 9a       	sbi	0x1b, 7	; 27
     26a:	81 2f       	mov	r24, r17
     26c:	28 c2       	rjmp	.+1104   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     26e:	c1 11       	cpse	r28, r1
     270:	c7 c1       	rjmp	.+910    	; 0x600 <__EEPROM_REGION_LENGTH__+0x200>
     272:	d7 98       	cbi	0x1a, 7	; 26
     274:	81 2f       	mov	r24, r17
     276:	23 c2       	rjmp	.+1094   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     278:	91 30       	cpi	r25, 0x01	; 1
     27a:	21 f4       	brne	.+8      	; 0x284 <DIO_Init+0x172>
     27c:	87 b3       	in	r24, 0x17	; 23
     27e:	87 bb       	out	0x17, r24	; 23
     280:	81 2f       	mov	r24, r17
     282:	1d c2       	rjmp	.+1082   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     284:	91 11       	cpse	r25, r1
     286:	be c1       	rjmp	.+892    	; 0x604 <__EEPROM_REGION_LENGTH__+0x204>
     288:	c1 30       	cpi	r28, 0x01	; 1
     28a:	21 f4       	brne	.+8      	; 0x294 <DIO_Init+0x182>
     28c:	b8 98       	cbi	0x17, 0	; 23
     28e:	c0 9a       	sbi	0x18, 0	; 24
     290:	81 2f       	mov	r24, r17
     292:	15 c2       	rjmp	.+1066   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     294:	c1 11       	cpse	r28, r1
     296:	b8 c1       	rjmp	.+880    	; 0x608 <__EEPROM_REGION_LENGTH__+0x208>
     298:	b8 98       	cbi	0x17, 0	; 23
     29a:	81 2f       	mov	r24, r17
     29c:	10 c2       	rjmp	.+1056   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     29e:	91 30       	cpi	r25, 0x01	; 1
     2a0:	19 f4       	brne	.+6      	; 0x2a8 <DIO_Init+0x196>
     2a2:	b9 9a       	sbi	0x17, 1	; 23
     2a4:	81 2f       	mov	r24, r17
     2a6:	0b c2       	rjmp	.+1046   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     2a8:	91 11       	cpse	r25, r1
     2aa:	b0 c1       	rjmp	.+864    	; 0x60c <__EEPROM_REGION_LENGTH__+0x20c>
     2ac:	c1 30       	cpi	r28, 0x01	; 1
     2ae:	21 f4       	brne	.+8      	; 0x2b8 <DIO_Init+0x1a6>
     2b0:	b9 98       	cbi	0x17, 1	; 23
     2b2:	c1 9a       	sbi	0x18, 1	; 24
     2b4:	81 2f       	mov	r24, r17
     2b6:	03 c2       	rjmp	.+1030   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     2b8:	c1 11       	cpse	r28, r1
     2ba:	aa c1       	rjmp	.+852    	; 0x610 <__EEPROM_REGION_LENGTH__+0x210>
     2bc:	b9 98       	cbi	0x17, 1	; 23
     2be:	81 2f       	mov	r24, r17
     2c0:	fe c1       	rjmp	.+1020   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     2c2:	91 30       	cpi	r25, 0x01	; 1
     2c4:	19 f4       	brne	.+6      	; 0x2cc <DIO_Init+0x1ba>
     2c6:	ba 9a       	sbi	0x17, 2	; 23
     2c8:	81 2f       	mov	r24, r17
     2ca:	f9 c1       	rjmp	.+1010   	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     2cc:	91 11       	cpse	r25, r1
     2ce:	a2 c1       	rjmp	.+836    	; 0x614 <__EEPROM_REGION_LENGTH__+0x214>
     2d0:	c1 30       	cpi	r28, 0x01	; 1
     2d2:	21 f4       	brne	.+8      	; 0x2dc <DIO_Init+0x1ca>
     2d4:	ba 98       	cbi	0x17, 2	; 23
     2d6:	c2 9a       	sbi	0x18, 2	; 24
     2d8:	81 2f       	mov	r24, r17
     2da:	f1 c1       	rjmp	.+994    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     2dc:	c1 11       	cpse	r28, r1
     2de:	9c c1       	rjmp	.+824    	; 0x618 <__EEPROM_REGION_LENGTH__+0x218>
     2e0:	ba 98       	cbi	0x17, 2	; 23
     2e2:	81 2f       	mov	r24, r17
     2e4:	ec c1       	rjmp	.+984    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     2e6:	91 30       	cpi	r25, 0x01	; 1
     2e8:	19 f4       	brne	.+6      	; 0x2f0 <DIO_Init+0x1de>
     2ea:	bb 9a       	sbi	0x17, 3	; 23
     2ec:	81 2f       	mov	r24, r17
     2ee:	e7 c1       	rjmp	.+974    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     2f0:	91 11       	cpse	r25, r1
     2f2:	94 c1       	rjmp	.+808    	; 0x61c <__EEPROM_REGION_LENGTH__+0x21c>
     2f4:	c1 30       	cpi	r28, 0x01	; 1
     2f6:	21 f4       	brne	.+8      	; 0x300 <DIO_Init+0x1ee>
     2f8:	bb 98       	cbi	0x17, 3	; 23
     2fa:	c3 9a       	sbi	0x18, 3	; 24
     2fc:	81 2f       	mov	r24, r17
     2fe:	df c1       	rjmp	.+958    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     300:	c1 11       	cpse	r28, r1
     302:	8e c1       	rjmp	.+796    	; 0x620 <__EEPROM_REGION_LENGTH__+0x220>
     304:	bb 98       	cbi	0x17, 3	; 23
     306:	81 2f       	mov	r24, r17
     308:	da c1       	rjmp	.+948    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     30a:	91 30       	cpi	r25, 0x01	; 1
     30c:	19 f4       	brne	.+6      	; 0x314 <DIO_Init+0x202>
     30e:	bc 9a       	sbi	0x17, 4	; 23
     310:	81 2f       	mov	r24, r17
     312:	d5 c1       	rjmp	.+938    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     314:	91 11       	cpse	r25, r1
     316:	86 c1       	rjmp	.+780    	; 0x624 <__EEPROM_REGION_LENGTH__+0x224>
     318:	c1 30       	cpi	r28, 0x01	; 1
     31a:	21 f4       	brne	.+8      	; 0x324 <DIO_Init+0x212>
     31c:	bc 98       	cbi	0x17, 4	; 23
     31e:	c4 9a       	sbi	0x18, 4	; 24
     320:	81 2f       	mov	r24, r17
     322:	cd c1       	rjmp	.+922    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     324:	c1 11       	cpse	r28, r1
     326:	80 c1       	rjmp	.+768    	; 0x628 <__EEPROM_REGION_LENGTH__+0x228>
     328:	bc 98       	cbi	0x17, 4	; 23
     32a:	81 2f       	mov	r24, r17
     32c:	c8 c1       	rjmp	.+912    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     32e:	91 30       	cpi	r25, 0x01	; 1
     330:	19 f4       	brne	.+6      	; 0x338 <DIO_Init+0x226>
     332:	bd 9a       	sbi	0x17, 5	; 23
     334:	81 2f       	mov	r24, r17
     336:	c3 c1       	rjmp	.+902    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     338:	91 11       	cpse	r25, r1
     33a:	78 c1       	rjmp	.+752    	; 0x62c <__EEPROM_REGION_LENGTH__+0x22c>
     33c:	c1 30       	cpi	r28, 0x01	; 1
     33e:	21 f4       	brne	.+8      	; 0x348 <DIO_Init+0x236>
     340:	bd 98       	cbi	0x17, 5	; 23
     342:	c5 9a       	sbi	0x18, 5	; 24
     344:	81 2f       	mov	r24, r17
     346:	bb c1       	rjmp	.+886    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     348:	c1 11       	cpse	r28, r1
     34a:	72 c1       	rjmp	.+740    	; 0x630 <__EEPROM_REGION_LENGTH__+0x230>
     34c:	bd 98       	cbi	0x17, 5	; 23
     34e:	81 2f       	mov	r24, r17
     350:	b6 c1       	rjmp	.+876    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     352:	91 30       	cpi	r25, 0x01	; 1
     354:	19 f4       	brne	.+6      	; 0x35c <DIO_Init+0x24a>
     356:	be 9a       	sbi	0x17, 6	; 23
     358:	81 2f       	mov	r24, r17
     35a:	b1 c1       	rjmp	.+866    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     35c:	91 11       	cpse	r25, r1
     35e:	6a c1       	rjmp	.+724    	; 0x634 <__EEPROM_REGION_LENGTH__+0x234>
     360:	c1 30       	cpi	r28, 0x01	; 1
     362:	21 f4       	brne	.+8      	; 0x36c <DIO_Init+0x25a>
     364:	be 98       	cbi	0x17, 6	; 23
     366:	c6 9a       	sbi	0x18, 6	; 24
     368:	81 2f       	mov	r24, r17
     36a:	a9 c1       	rjmp	.+850    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     36c:	c1 11       	cpse	r28, r1
     36e:	64 c1       	rjmp	.+712    	; 0x638 <__EEPROM_REGION_LENGTH__+0x238>
     370:	be 98       	cbi	0x17, 6	; 23
     372:	81 2f       	mov	r24, r17
     374:	a4 c1       	rjmp	.+840    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     376:	91 30       	cpi	r25, 0x01	; 1
     378:	19 f4       	brne	.+6      	; 0x380 <DIO_Init+0x26e>
     37a:	bf 9a       	sbi	0x17, 7	; 23
     37c:	81 2f       	mov	r24, r17
     37e:	9f c1       	rjmp	.+830    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     380:	91 11       	cpse	r25, r1
     382:	5c c1       	rjmp	.+696    	; 0x63c <__EEPROM_REGION_LENGTH__+0x23c>
     384:	c1 30       	cpi	r28, 0x01	; 1
     386:	21 f4       	brne	.+8      	; 0x390 <DIO_Init+0x27e>
     388:	bf 98       	cbi	0x17, 7	; 23
     38a:	c7 9a       	sbi	0x18, 7	; 24
     38c:	81 2f       	mov	r24, r17
     38e:	97 c1       	rjmp	.+814    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     390:	c1 11       	cpse	r28, r1
     392:	56 c1       	rjmp	.+684    	; 0x640 <__EEPROM_REGION_LENGTH__+0x240>
     394:	bf 98       	cbi	0x17, 7	; 23
     396:	81 2f       	mov	r24, r17
     398:	92 c1       	rjmp	.+804    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     39a:	91 30       	cpi	r25, 0x01	; 1
     39c:	19 f4       	brne	.+6      	; 0x3a4 <DIO_Init+0x292>
     39e:	a0 9a       	sbi	0x14, 0	; 20
     3a0:	81 2f       	mov	r24, r17
     3a2:	8d c1       	rjmp	.+794    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     3a4:	91 11       	cpse	r25, r1
     3a6:	4e c1       	rjmp	.+668    	; 0x644 <__EEPROM_REGION_LENGTH__+0x244>
     3a8:	c1 30       	cpi	r28, 0x01	; 1
     3aa:	21 f4       	brne	.+8      	; 0x3b4 <DIO_Init+0x2a2>
     3ac:	a0 98       	cbi	0x14, 0	; 20
     3ae:	a8 9a       	sbi	0x15, 0	; 21
     3b0:	81 2f       	mov	r24, r17
     3b2:	85 c1       	rjmp	.+778    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     3b4:	c1 11       	cpse	r28, r1
     3b6:	48 c1       	rjmp	.+656    	; 0x648 <__EEPROM_REGION_LENGTH__+0x248>
     3b8:	a0 98       	cbi	0x14, 0	; 20
     3ba:	81 2f       	mov	r24, r17
     3bc:	80 c1       	rjmp	.+768    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     3be:	91 30       	cpi	r25, 0x01	; 1
     3c0:	19 f4       	brne	.+6      	; 0x3c8 <DIO_Init+0x2b6>
     3c2:	a1 9a       	sbi	0x14, 1	; 20
     3c4:	81 2f       	mov	r24, r17
     3c6:	7b c1       	rjmp	.+758    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     3c8:	91 11       	cpse	r25, r1
     3ca:	40 c1       	rjmp	.+640    	; 0x64c <__EEPROM_REGION_LENGTH__+0x24c>
     3cc:	c1 30       	cpi	r28, 0x01	; 1
     3ce:	21 f4       	brne	.+8      	; 0x3d8 <DIO_Init+0x2c6>
     3d0:	a1 98       	cbi	0x14, 1	; 20
     3d2:	a9 9a       	sbi	0x15, 1	; 21
     3d4:	81 2f       	mov	r24, r17
     3d6:	73 c1       	rjmp	.+742    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     3d8:	c1 11       	cpse	r28, r1
     3da:	3a c1       	rjmp	.+628    	; 0x650 <__EEPROM_REGION_LENGTH__+0x250>
     3dc:	a1 98       	cbi	0x14, 1	; 20
     3de:	81 2f       	mov	r24, r17
     3e0:	6e c1       	rjmp	.+732    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     3e2:	91 30       	cpi	r25, 0x01	; 1
     3e4:	19 f4       	brne	.+6      	; 0x3ec <DIO_Init+0x2da>
     3e6:	a2 9a       	sbi	0x14, 2	; 20
     3e8:	81 2f       	mov	r24, r17
     3ea:	69 c1       	rjmp	.+722    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     3ec:	91 11       	cpse	r25, r1
     3ee:	32 c1       	rjmp	.+612    	; 0x654 <__EEPROM_REGION_LENGTH__+0x254>
     3f0:	c1 30       	cpi	r28, 0x01	; 1
     3f2:	21 f4       	brne	.+8      	; 0x3fc <DIO_Init+0x2ea>
     3f4:	a2 98       	cbi	0x14, 2	; 20
     3f6:	aa 9a       	sbi	0x15, 2	; 21
     3f8:	81 2f       	mov	r24, r17
     3fa:	61 c1       	rjmp	.+706    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     3fc:	c1 11       	cpse	r28, r1
     3fe:	2c c1       	rjmp	.+600    	; 0x658 <__EEPROM_REGION_LENGTH__+0x258>
     400:	a2 98       	cbi	0x14, 2	; 20
     402:	81 2f       	mov	r24, r17
     404:	5c c1       	rjmp	.+696    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     406:	91 30       	cpi	r25, 0x01	; 1
     408:	19 f4       	brne	.+6      	; 0x410 <__EEPROM_REGION_LENGTH__+0x10>
     40a:	a3 9a       	sbi	0x14, 3	; 20
     40c:	81 2f       	mov	r24, r17
     40e:	57 c1       	rjmp	.+686    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     410:	91 11       	cpse	r25, r1
     412:	24 c1       	rjmp	.+584    	; 0x65c <__EEPROM_REGION_LENGTH__+0x25c>
     414:	c1 30       	cpi	r28, 0x01	; 1
     416:	21 f4       	brne	.+8      	; 0x420 <__EEPROM_REGION_LENGTH__+0x20>
     418:	a3 98       	cbi	0x14, 3	; 20
     41a:	ab 9a       	sbi	0x15, 3	; 21
     41c:	81 2f       	mov	r24, r17
     41e:	4f c1       	rjmp	.+670    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     420:	c1 11       	cpse	r28, r1
     422:	1e c1       	rjmp	.+572    	; 0x660 <__EEPROM_REGION_LENGTH__+0x260>
     424:	a3 98       	cbi	0x14, 3	; 20
     426:	81 2f       	mov	r24, r17
     428:	4a c1       	rjmp	.+660    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     42a:	91 30       	cpi	r25, 0x01	; 1
     42c:	19 f4       	brne	.+6      	; 0x434 <__EEPROM_REGION_LENGTH__+0x34>
     42e:	a4 9a       	sbi	0x14, 4	; 20
     430:	81 2f       	mov	r24, r17
     432:	45 c1       	rjmp	.+650    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     434:	91 11       	cpse	r25, r1
     436:	16 c1       	rjmp	.+556    	; 0x664 <__EEPROM_REGION_LENGTH__+0x264>
     438:	c1 30       	cpi	r28, 0x01	; 1
     43a:	21 f4       	brne	.+8      	; 0x444 <__EEPROM_REGION_LENGTH__+0x44>
     43c:	a4 98       	cbi	0x14, 4	; 20
     43e:	ac 9a       	sbi	0x15, 4	; 21
     440:	81 2f       	mov	r24, r17
     442:	3d c1       	rjmp	.+634    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     444:	c1 11       	cpse	r28, r1
     446:	10 c1       	rjmp	.+544    	; 0x668 <__EEPROM_REGION_LENGTH__+0x268>
     448:	a4 98       	cbi	0x14, 4	; 20
     44a:	81 2f       	mov	r24, r17
     44c:	38 c1       	rjmp	.+624    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     44e:	91 30       	cpi	r25, 0x01	; 1
     450:	19 f4       	brne	.+6      	; 0x458 <__EEPROM_REGION_LENGTH__+0x58>
     452:	a5 9a       	sbi	0x14, 5	; 20
     454:	81 2f       	mov	r24, r17
     456:	33 c1       	rjmp	.+614    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     458:	91 11       	cpse	r25, r1
     45a:	08 c1       	rjmp	.+528    	; 0x66c <__EEPROM_REGION_LENGTH__+0x26c>
     45c:	c1 30       	cpi	r28, 0x01	; 1
     45e:	21 f4       	brne	.+8      	; 0x468 <__EEPROM_REGION_LENGTH__+0x68>
     460:	a5 98       	cbi	0x14, 5	; 20
     462:	ad 9a       	sbi	0x15, 5	; 21
     464:	81 2f       	mov	r24, r17
     466:	2b c1       	rjmp	.+598    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     468:	c1 11       	cpse	r28, r1
     46a:	02 c1       	rjmp	.+516    	; 0x670 <__EEPROM_REGION_LENGTH__+0x270>
     46c:	a5 98       	cbi	0x14, 5	; 20
     46e:	81 2f       	mov	r24, r17
     470:	26 c1       	rjmp	.+588    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     472:	91 30       	cpi	r25, 0x01	; 1
     474:	19 f4       	brne	.+6      	; 0x47c <__EEPROM_REGION_LENGTH__+0x7c>
     476:	a6 9a       	sbi	0x14, 6	; 20
     478:	81 2f       	mov	r24, r17
     47a:	21 c1       	rjmp	.+578    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     47c:	91 11       	cpse	r25, r1
     47e:	fa c0       	rjmp	.+500    	; 0x674 <__EEPROM_REGION_LENGTH__+0x274>
     480:	c1 30       	cpi	r28, 0x01	; 1
     482:	21 f4       	brne	.+8      	; 0x48c <__EEPROM_REGION_LENGTH__+0x8c>
     484:	a6 98       	cbi	0x14, 6	; 20
     486:	ae 9a       	sbi	0x15, 6	; 21
     488:	81 2f       	mov	r24, r17
     48a:	19 c1       	rjmp	.+562    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     48c:	c1 11       	cpse	r28, r1
     48e:	f4 c0       	rjmp	.+488    	; 0x678 <__EEPROM_REGION_LENGTH__+0x278>
     490:	a6 98       	cbi	0x14, 6	; 20
     492:	81 2f       	mov	r24, r17
     494:	14 c1       	rjmp	.+552    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     496:	91 11       	cpse	r25, r1
     498:	f1 c0       	rjmp	.+482    	; 0x67c <__EEPROM_REGION_LENGTH__+0x27c>
     49a:	a7 9a       	sbi	0x14, 7	; 20
     49c:	81 2f       	mov	r24, r17
     49e:	0f c1       	rjmp	.+542    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     4a0:	91 30       	cpi	r25, 0x01	; 1
     4a2:	19 f4       	brne	.+6      	; 0x4aa <__EEPROM_REGION_LENGTH__+0xaa>
     4a4:	88 9a       	sbi	0x11, 0	; 17
     4a6:	81 2f       	mov	r24, r17
     4a8:	0a c1       	rjmp	.+532    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     4aa:	91 11       	cpse	r25, r1
     4ac:	e9 c0       	rjmp	.+466    	; 0x680 <__EEPROM_REGION_LENGTH__+0x280>
     4ae:	c1 30       	cpi	r28, 0x01	; 1
     4b0:	21 f4       	brne	.+8      	; 0x4ba <__EEPROM_REGION_LENGTH__+0xba>
     4b2:	88 98       	cbi	0x11, 0	; 17
     4b4:	90 9a       	sbi	0x12, 0	; 18
     4b6:	81 2f       	mov	r24, r17
     4b8:	02 c1       	rjmp	.+516    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     4ba:	c1 11       	cpse	r28, r1
     4bc:	e3 c0       	rjmp	.+454    	; 0x684 <__EEPROM_REGION_LENGTH__+0x284>
     4be:	88 98       	cbi	0x11, 0	; 17
     4c0:	81 2f       	mov	r24, r17
     4c2:	fd c0       	rjmp	.+506    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     4c4:	91 30       	cpi	r25, 0x01	; 1
     4c6:	19 f4       	brne	.+6      	; 0x4ce <__EEPROM_REGION_LENGTH__+0xce>
     4c8:	89 9a       	sbi	0x11, 1	; 17
     4ca:	81 2f       	mov	r24, r17
     4cc:	f8 c0       	rjmp	.+496    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     4ce:	91 11       	cpse	r25, r1
     4d0:	db c0       	rjmp	.+438    	; 0x688 <__EEPROM_REGION_LENGTH__+0x288>
     4d2:	c1 30       	cpi	r28, 0x01	; 1
     4d4:	21 f4       	brne	.+8      	; 0x4de <__EEPROM_REGION_LENGTH__+0xde>
     4d6:	89 98       	cbi	0x11, 1	; 17
     4d8:	91 9a       	sbi	0x12, 1	; 18
     4da:	81 2f       	mov	r24, r17
     4dc:	f0 c0       	rjmp	.+480    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     4de:	c1 11       	cpse	r28, r1
     4e0:	d5 c0       	rjmp	.+426    	; 0x68c <__EEPROM_REGION_LENGTH__+0x28c>
     4e2:	89 98       	cbi	0x11, 1	; 17
     4e4:	81 2f       	mov	r24, r17
     4e6:	eb c0       	rjmp	.+470    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     4e8:	91 30       	cpi	r25, 0x01	; 1
     4ea:	19 f4       	brne	.+6      	; 0x4f2 <__EEPROM_REGION_LENGTH__+0xf2>
     4ec:	8a 9a       	sbi	0x11, 2	; 17
     4ee:	81 2f       	mov	r24, r17
     4f0:	e6 c0       	rjmp	.+460    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     4f2:	91 11       	cpse	r25, r1
     4f4:	cd c0       	rjmp	.+410    	; 0x690 <__EEPROM_REGION_LENGTH__+0x290>
     4f6:	c1 30       	cpi	r28, 0x01	; 1
     4f8:	21 f4       	brne	.+8      	; 0x502 <__EEPROM_REGION_LENGTH__+0x102>
     4fa:	8a 98       	cbi	0x11, 2	; 17
     4fc:	92 9a       	sbi	0x12, 2	; 18
     4fe:	81 2f       	mov	r24, r17
     500:	de c0       	rjmp	.+444    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     502:	c1 11       	cpse	r28, r1
     504:	c7 c0       	rjmp	.+398    	; 0x694 <__EEPROM_REGION_LENGTH__+0x294>
     506:	8a 98       	cbi	0x11, 2	; 17
     508:	81 2f       	mov	r24, r17
     50a:	d9 c0       	rjmp	.+434    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     50c:	91 30       	cpi	r25, 0x01	; 1
     50e:	19 f4       	brne	.+6      	; 0x516 <__EEPROM_REGION_LENGTH__+0x116>
     510:	8b 9a       	sbi	0x11, 3	; 17
     512:	81 2f       	mov	r24, r17
     514:	d4 c0       	rjmp	.+424    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     516:	91 11       	cpse	r25, r1
     518:	bf c0       	rjmp	.+382    	; 0x698 <__EEPROM_REGION_LENGTH__+0x298>
     51a:	c1 30       	cpi	r28, 0x01	; 1
     51c:	21 f4       	brne	.+8      	; 0x526 <__EEPROM_REGION_LENGTH__+0x126>
     51e:	8b 98       	cbi	0x11, 3	; 17
     520:	93 9a       	sbi	0x12, 3	; 18
     522:	81 2f       	mov	r24, r17
     524:	cc c0       	rjmp	.+408    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     526:	c1 11       	cpse	r28, r1
     528:	b9 c0       	rjmp	.+370    	; 0x69c <__EEPROM_REGION_LENGTH__+0x29c>
     52a:	8b 98       	cbi	0x11, 3	; 17
     52c:	81 2f       	mov	r24, r17
     52e:	c7 c0       	rjmp	.+398    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     530:	91 30       	cpi	r25, 0x01	; 1
     532:	19 f4       	brne	.+6      	; 0x53a <__EEPROM_REGION_LENGTH__+0x13a>
     534:	8c 9a       	sbi	0x11, 4	; 17
     536:	81 2f       	mov	r24, r17
     538:	c2 c0       	rjmp	.+388    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     53a:	91 11       	cpse	r25, r1
     53c:	b1 c0       	rjmp	.+354    	; 0x6a0 <__EEPROM_REGION_LENGTH__+0x2a0>
     53e:	c1 30       	cpi	r28, 0x01	; 1
     540:	21 f4       	brne	.+8      	; 0x54a <__EEPROM_REGION_LENGTH__+0x14a>
     542:	8c 98       	cbi	0x11, 4	; 17
     544:	94 9a       	sbi	0x12, 4	; 18
     546:	81 2f       	mov	r24, r17
     548:	ba c0       	rjmp	.+372    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     54a:	c1 11       	cpse	r28, r1
     54c:	ab c0       	rjmp	.+342    	; 0x6a4 <__EEPROM_REGION_LENGTH__+0x2a4>
     54e:	8c 98       	cbi	0x11, 4	; 17
     550:	81 2f       	mov	r24, r17
     552:	b5 c0       	rjmp	.+362    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     554:	91 30       	cpi	r25, 0x01	; 1
     556:	19 f4       	brne	.+6      	; 0x55e <__EEPROM_REGION_LENGTH__+0x15e>
     558:	8d 9a       	sbi	0x11, 5	; 17
     55a:	81 2f       	mov	r24, r17
     55c:	b0 c0       	rjmp	.+352    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     55e:	91 11       	cpse	r25, r1
     560:	a3 c0       	rjmp	.+326    	; 0x6a8 <__EEPROM_REGION_LENGTH__+0x2a8>
     562:	c1 30       	cpi	r28, 0x01	; 1
     564:	21 f4       	brne	.+8      	; 0x56e <__EEPROM_REGION_LENGTH__+0x16e>
     566:	8d 98       	cbi	0x11, 5	; 17
     568:	95 9a       	sbi	0x12, 5	; 18
     56a:	81 2f       	mov	r24, r17
     56c:	a8 c0       	rjmp	.+336    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     56e:	c1 11       	cpse	r28, r1
     570:	9d c0       	rjmp	.+314    	; 0x6ac <__EEPROM_REGION_LENGTH__+0x2ac>
     572:	8d 98       	cbi	0x11, 5	; 17
     574:	81 2f       	mov	r24, r17
     576:	a3 c0       	rjmp	.+326    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     578:	91 30       	cpi	r25, 0x01	; 1
     57a:	19 f4       	brne	.+6      	; 0x582 <__EEPROM_REGION_LENGTH__+0x182>
     57c:	8e 9a       	sbi	0x11, 6	; 17
     57e:	81 2f       	mov	r24, r17
     580:	9e c0       	rjmp	.+316    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     582:	91 11       	cpse	r25, r1
     584:	95 c0       	rjmp	.+298    	; 0x6b0 <__EEPROM_REGION_LENGTH__+0x2b0>
     586:	c1 30       	cpi	r28, 0x01	; 1
     588:	21 f4       	brne	.+8      	; 0x592 <__EEPROM_REGION_LENGTH__+0x192>
     58a:	8e 98       	cbi	0x11, 6	; 17
     58c:	96 9a       	sbi	0x12, 6	; 18
     58e:	81 2f       	mov	r24, r17
     590:	96 c0       	rjmp	.+300    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     592:	c1 11       	cpse	r28, r1
     594:	8f c0       	rjmp	.+286    	; 0x6b4 <__EEPROM_REGION_LENGTH__+0x2b4>
     596:	8e 98       	cbi	0x11, 6	; 17
     598:	81 2f       	mov	r24, r17
     59a:	91 c0       	rjmp	.+290    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     59c:	91 30       	cpi	r25, 0x01	; 1
     59e:	19 f4       	brne	.+6      	; 0x5a6 <__EEPROM_REGION_LENGTH__+0x1a6>
     5a0:	8f 9a       	sbi	0x11, 7	; 17
     5a2:	81 2f       	mov	r24, r17
     5a4:	8c c0       	rjmp	.+280    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     5a6:	91 11       	cpse	r25, r1
     5a8:	87 c0       	rjmp	.+270    	; 0x6b8 <__EEPROM_REGION_LENGTH__+0x2b8>
     5aa:	c1 30       	cpi	r28, 0x01	; 1
     5ac:	21 f4       	brne	.+8      	; 0x5b6 <__EEPROM_REGION_LENGTH__+0x1b6>
     5ae:	8f 98       	cbi	0x11, 7	; 17
     5b0:	97 9a       	sbi	0x12, 7	; 18
     5b2:	81 2f       	mov	r24, r17
     5b4:	84 c0       	rjmp	.+264    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     5b6:	c1 11       	cpse	r28, r1
     5b8:	81 c0       	rjmp	.+258    	; 0x6bc <__EEPROM_REGION_LENGTH__+0x2bc>
     5ba:	8f 98       	cbi	0x11, 7	; 17
     5bc:	81 2f       	mov	r24, r17
     5be:	7f c0       	rjmp	.+254    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     5c0:	81 2f       	mov	r24, r17
     5c2:	7d c0       	rjmp	.+250    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     5c4:	81 2f       	mov	r24, r17
     5c6:	7b c0       	rjmp	.+246    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     5c8:	81 2f       	mov	r24, r17
     5ca:	79 c0       	rjmp	.+242    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     5cc:	81 2f       	mov	r24, r17
     5ce:	77 c0       	rjmp	.+238    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     5d0:	81 2f       	mov	r24, r17
     5d2:	75 c0       	rjmp	.+234    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     5d4:	81 2f       	mov	r24, r17
     5d6:	73 c0       	rjmp	.+230    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     5d8:	81 2f       	mov	r24, r17
     5da:	71 c0       	rjmp	.+226    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     5dc:	81 2f       	mov	r24, r17
     5de:	6f c0       	rjmp	.+222    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     5e0:	81 2f       	mov	r24, r17
     5e2:	6d c0       	rjmp	.+218    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     5e4:	81 2f       	mov	r24, r17
     5e6:	6b c0       	rjmp	.+214    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     5e8:	81 2f       	mov	r24, r17
     5ea:	69 c0       	rjmp	.+210    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     5ec:	81 2f       	mov	r24, r17
     5ee:	67 c0       	rjmp	.+206    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     5f0:	81 2f       	mov	r24, r17
     5f2:	65 c0       	rjmp	.+202    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     5f4:	81 2f       	mov	r24, r17
     5f6:	63 c0       	rjmp	.+198    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     5f8:	81 2f       	mov	r24, r17
     5fa:	61 c0       	rjmp	.+194    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     5fc:	81 2f       	mov	r24, r17
     5fe:	5f c0       	rjmp	.+190    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     600:	81 2f       	mov	r24, r17
     602:	5d c0       	rjmp	.+186    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     604:	81 2f       	mov	r24, r17
     606:	5b c0       	rjmp	.+182    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     608:	81 2f       	mov	r24, r17
     60a:	59 c0       	rjmp	.+178    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     60c:	81 2f       	mov	r24, r17
     60e:	57 c0       	rjmp	.+174    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     610:	81 2f       	mov	r24, r17
     612:	55 c0       	rjmp	.+170    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     614:	81 2f       	mov	r24, r17
     616:	53 c0       	rjmp	.+166    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     618:	81 2f       	mov	r24, r17
     61a:	51 c0       	rjmp	.+162    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     61c:	81 2f       	mov	r24, r17
     61e:	4f c0       	rjmp	.+158    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     620:	81 2f       	mov	r24, r17
     622:	4d c0       	rjmp	.+154    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     624:	81 2f       	mov	r24, r17
     626:	4b c0       	rjmp	.+150    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     628:	81 2f       	mov	r24, r17
     62a:	49 c0       	rjmp	.+146    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     62c:	81 2f       	mov	r24, r17
     62e:	47 c0       	rjmp	.+142    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     630:	81 2f       	mov	r24, r17
     632:	45 c0       	rjmp	.+138    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     634:	81 2f       	mov	r24, r17
     636:	43 c0       	rjmp	.+134    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     638:	81 2f       	mov	r24, r17
     63a:	41 c0       	rjmp	.+130    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     63c:	81 2f       	mov	r24, r17
     63e:	3f c0       	rjmp	.+126    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     640:	81 2f       	mov	r24, r17
     642:	3d c0       	rjmp	.+122    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     644:	81 2f       	mov	r24, r17
     646:	3b c0       	rjmp	.+118    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     648:	81 2f       	mov	r24, r17
     64a:	39 c0       	rjmp	.+114    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     64c:	81 2f       	mov	r24, r17
     64e:	37 c0       	rjmp	.+110    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     650:	81 2f       	mov	r24, r17
     652:	35 c0       	rjmp	.+106    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     654:	81 2f       	mov	r24, r17
     656:	33 c0       	rjmp	.+102    	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     658:	81 2f       	mov	r24, r17
     65a:	31 c0       	rjmp	.+98     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     65c:	81 2f       	mov	r24, r17
     65e:	2f c0       	rjmp	.+94     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     660:	81 2f       	mov	r24, r17
     662:	2d c0       	rjmp	.+90     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     664:	81 2f       	mov	r24, r17
     666:	2b c0       	rjmp	.+86     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     668:	81 2f       	mov	r24, r17
     66a:	29 c0       	rjmp	.+82     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     66c:	81 2f       	mov	r24, r17
     66e:	27 c0       	rjmp	.+78     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     670:	81 2f       	mov	r24, r17
     672:	25 c0       	rjmp	.+74     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     674:	81 2f       	mov	r24, r17
     676:	23 c0       	rjmp	.+70     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     678:	81 2f       	mov	r24, r17
     67a:	21 c0       	rjmp	.+66     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     67c:	81 2f       	mov	r24, r17
     67e:	1f c0       	rjmp	.+62     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     680:	81 2f       	mov	r24, r17
     682:	1d c0       	rjmp	.+58     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     684:	81 2f       	mov	r24, r17
     686:	1b c0       	rjmp	.+54     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     688:	81 2f       	mov	r24, r17
     68a:	19 c0       	rjmp	.+50     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     68c:	81 2f       	mov	r24, r17
     68e:	17 c0       	rjmp	.+46     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     690:	81 2f       	mov	r24, r17
     692:	15 c0       	rjmp	.+42     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     694:	81 2f       	mov	r24, r17
     696:	13 c0       	rjmp	.+38     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     698:	81 2f       	mov	r24, r17
     69a:	11 c0       	rjmp	.+34     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     69c:	81 2f       	mov	r24, r17
     69e:	0f c0       	rjmp	.+30     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     6a0:	81 2f       	mov	r24, r17
     6a2:	0d c0       	rjmp	.+26     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     6a4:	81 2f       	mov	r24, r17
     6a6:	0b c0       	rjmp	.+22     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     6a8:	81 2f       	mov	r24, r17
     6aa:	09 c0       	rjmp	.+18     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     6ac:	81 2f       	mov	r24, r17
     6ae:	07 c0       	rjmp	.+14     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     6b0:	81 2f       	mov	r24, r17
     6b2:	05 c0       	rjmp	.+10     	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     6b4:	81 2f       	mov	r24, r17
     6b6:	03 c0       	rjmp	.+6      	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     6b8:	81 2f       	mov	r24, r17
     6ba:	01 c0       	rjmp	.+2      	; 0x6be <__EEPROM_REGION_LENGTH__+0x2be>
     6bc:	81 2f       	mov	r24, r17
     6be:	13 96       	adiw	r26, 0x03	; 3
     6c0:	a2 17       	cp	r26, r18
     6c2:	b3 07       	cpc	r27, r19
     6c4:	09 f0       	breq	.+2      	; 0x6c8 <__EEPROM_REGION_LENGTH__+0x2c8>
     6c6:	2e cd       	rjmp	.-1444   	; 0x124 <DIO_Init+0x12>
     6c8:	df 91       	pop	r29
     6ca:	cf 91       	pop	r28
     6cc:	1f 91       	pop	r17
     6ce:	08 95       	ret

000006d0 <DIO_Toggle>:

enuErrorStatus_t DIO_Toggle(uint8_t u8GroupId)
{
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
     6d0:	90 e0       	ldi	r25, 0x00	; 0
     6d2:	fc 01       	movw	r30, r24
     6d4:	ee 0f       	add	r30, r30
     6d6:	ff 1f       	adc	r31, r31
     6d8:	e8 0f       	add	r30, r24
     6da:	f9 1f       	adc	r31, r25
     6dc:	e0 5a       	subi	r30, 0xA0	; 160
     6de:	ff 4f       	sbci	r31, 0xFF	; 255
     6e0:	e0 81       	ld	r30, Z
     6e2:	e0 32       	cpi	r30, 0x20	; 32
     6e4:	08 f0       	brcs	.+2      	; 0x6e8 <DIO_Toggle+0x18>
     6e6:	e0 c0       	rjmp	.+448    	; 0x8a8 <__stack+0x49>
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
     6e8:	dc 01       	movw	r26, r24
     6ea:	aa 0f       	add	r26, r26
     6ec:	bb 1f       	adc	r27, r27
     6ee:	a8 0f       	add	r26, r24
     6f0:	b9 1f       	adc	r27, r25
     6f2:	a0 5a       	subi	r26, 0xA0	; 160
     6f4:	bf 4f       	sbci	r27, 0xFF	; 255
}

enuErrorStatus_t DIO_Toggle(uint8_t u8GroupId)
{
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
     6f6:	11 96       	adiw	r26, 0x01	; 1
     6f8:	2c 91       	ld	r18, X
     6fa:	22 30       	cpi	r18, 0x02	; 2
     6fc:	08 f0       	brcs	.+2      	; 0x700 <DIO_Toggle+0x30>
     6fe:	d6 c0       	rjmp	.+428    	; 0x8ac <__stack+0x4d>
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
     700:	dc 01       	movw	r26, r24
     702:	aa 0f       	add	r26, r26
     704:	bb 1f       	adc	r27, r27
     706:	8a 0f       	add	r24, r26
     708:	9b 1f       	adc	r25, r27
     70a:	dc 01       	movw	r26, r24
     70c:	a0 5a       	subi	r26, 0xA0	; 160
     70e:	bf 4f       	sbci	r27, 0xFF	; 255

enuErrorStatus_t DIO_Toggle(uint8_t u8GroupId)
{
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
     710:	12 96       	adiw	r26, 0x02	; 2
     712:	8c 91       	ld	r24, X
     714:	82 30       	cpi	r24, 0x02	; 2
     716:	08 f0       	brcs	.+2      	; 0x71a <DIO_Toggle+0x4a>
     718:	cb c0       	rjmp	.+406    	; 0x8b0 <__stack+0x51>
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
		switch(astrDIOConfigParameters[u8GroupId].enuPinNo)
     71a:	8e 2f       	mov	r24, r30
     71c:	90 e0       	ldi	r25, 0x00	; 0
     71e:	80 32       	cpi	r24, 0x20	; 32
     720:	91 05       	cpc	r25, r1
     722:	08 f0       	brcs	.+2      	; 0x726 <DIO_Toggle+0x56>
     724:	c7 c0       	rjmp	.+398    	; 0x8b4 <__stack+0x55>
     726:	fc 01       	movw	r30, r24
     728:	e6 5b       	subi	r30, 0xB6	; 182
     72a:	ff 4f       	sbci	r31, 0xFF	; 255
     72c:	0c 94 fd 11 	jmp	0x23fa	; 0x23fa <__tablejump2__>
		{
			case PA0:
			{
				TOG_BIT(PORTA_R,PA0);
     730:	9b b3       	in	r25, 0x1b	; 27
     732:	81 e0       	ldi	r24, 0x01	; 1
     734:	89 27       	eor	r24, r25
     736:	8b bb       	out	0x1b, r24	; 27
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     738:	81 e0       	ldi	r24, 0x01	; 1
		switch(astrDIOConfigParameters[u8GroupId].enuPinNo)
		{
			case PA0:
			{
				TOG_BIT(PORTA_R,PA0);
				break;
     73a:	08 95       	ret
			}
			case PA1:
			{
				TOG_BIT(PORTA_R,PA1);
     73c:	9b b3       	in	r25, 0x1b	; 27
     73e:	82 e0       	ldi	r24, 0x02	; 2
     740:	89 27       	eor	r24, r25
     742:	8b bb       	out	0x1b, r24	; 27
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     744:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PA1:
			{
				TOG_BIT(PORTA_R,PA1);
				break;
     746:	08 95       	ret
			}
			case PA2:
			{
				TOG_BIT(PORTA_R,PA2);
     748:	9b b3       	in	r25, 0x1b	; 27
     74a:	84 e0       	ldi	r24, 0x04	; 4
     74c:	89 27       	eor	r24, r25
     74e:	8b bb       	out	0x1b, r24	; 27
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     750:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PA2:
			{
				TOG_BIT(PORTA_R,PA2);
				break;
     752:	08 95       	ret
			}
			case PA3:
			{
				TOG_BIT(PORTA_R,PA3);
     754:	9b b3       	in	r25, 0x1b	; 27
     756:	88 e0       	ldi	r24, 0x08	; 8
     758:	89 27       	eor	r24, r25
     75a:	8b bb       	out	0x1b, r24	; 27
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     75c:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PA3:
			{
				TOG_BIT(PORTA_R,PA3);
				break;
     75e:	08 95       	ret
			}
			case PA4:
			{
				TOG_BIT(PORTA_R,PA4);
     760:	9b b3       	in	r25, 0x1b	; 27
     762:	80 e1       	ldi	r24, 0x10	; 16
     764:	89 27       	eor	r24, r25
     766:	8b bb       	out	0x1b, r24	; 27
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     768:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PA4:
			{
				TOG_BIT(PORTA_R,PA4);
				break;
     76a:	08 95       	ret
			}
			case PA5:
			{
				TOG_BIT(PORTA_R,PA5);
     76c:	9b b3       	in	r25, 0x1b	; 27
     76e:	80 e2       	ldi	r24, 0x20	; 32
     770:	89 27       	eor	r24, r25
     772:	8b bb       	out	0x1b, r24	; 27
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     774:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PA5:
			{
				TOG_BIT(PORTA_R,PA5);
				break;
     776:	08 95       	ret
			}
			case PA6:
			{
				TOG_BIT(PORTA_R,PA2);
     778:	9b b3       	in	r25, 0x1b	; 27
     77a:	84 e0       	ldi	r24, 0x04	; 4
     77c:	89 27       	eor	r24, r25
     77e:	8b bb       	out	0x1b, r24	; 27
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     780:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PA6:
			{
				TOG_BIT(PORTA_R,PA2);
				break;
     782:	08 95       	ret
			}
			case PA7:
			{
				TOG_BIT(PORTA_R,PA7);
     784:	8b b3       	in	r24, 0x1b	; 27
     786:	80 58       	subi	r24, 0x80	; 128
     788:	8b bb       	out	0x1b, r24	; 27
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     78a:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PA7:
			{
				TOG_BIT(PORTA_R,PA7);
				break;
     78c:	08 95       	ret
			}
			case PB0:
			{
				TOG_BIT(PORTB_R,0);
     78e:	98 b3       	in	r25, 0x18	; 24
     790:	81 e0       	ldi	r24, 0x01	; 1
     792:	89 27       	eor	r24, r25
     794:	88 bb       	out	0x18, r24	; 24
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     796:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PB0:
			{
				TOG_BIT(PORTB_R,0);
				break;
     798:	08 95       	ret
			}
			case PB1:
			{
				TOG_BIT(PORTB_R,1);
     79a:	98 b3       	in	r25, 0x18	; 24
     79c:	82 e0       	ldi	r24, 0x02	; 2
     79e:	89 27       	eor	r24, r25
     7a0:	88 bb       	out	0x18, r24	; 24
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     7a2:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PB1:
			{
				TOG_BIT(PORTB_R,1);
				break;
     7a4:	08 95       	ret
			}
			case PB2:
			{
				TOG_BIT(PORTB_R,2);
     7a6:	98 b3       	in	r25, 0x18	; 24
     7a8:	84 e0       	ldi	r24, 0x04	; 4
     7aa:	89 27       	eor	r24, r25
     7ac:	88 bb       	out	0x18, r24	; 24
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     7ae:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PB2:
			{
				TOG_BIT(PORTB_R,2);
				break;
     7b0:	08 95       	ret
			}
			case PB3:
			{
				TOG_BIT(PORTB_R,3);
     7b2:	98 b3       	in	r25, 0x18	; 24
     7b4:	88 e0       	ldi	r24, 0x08	; 8
     7b6:	89 27       	eor	r24, r25
     7b8:	88 bb       	out	0x18, r24	; 24
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     7ba:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PB3:
			{
				TOG_BIT(PORTB_R,3);
				break;
     7bc:	08 95       	ret
			}
			case PB4:
			{
				TOG_BIT(PORTB_R,4);
     7be:	98 b3       	in	r25, 0x18	; 24
     7c0:	80 e1       	ldi	r24, 0x10	; 16
     7c2:	89 27       	eor	r24, r25
     7c4:	88 bb       	out	0x18, r24	; 24
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     7c6:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PB4:
			{
				TOG_BIT(PORTB_R,4);
				break;
     7c8:	08 95       	ret
			}
			case PB5:
			{
				TOG_BIT(PORTB_R,5);
     7ca:	98 b3       	in	r25, 0x18	; 24
     7cc:	80 e2       	ldi	r24, 0x20	; 32
     7ce:	89 27       	eor	r24, r25
     7d0:	88 bb       	out	0x18, r24	; 24
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     7d2:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PB5:
			{
				TOG_BIT(PORTB_R,5);
				break;
     7d4:	08 95       	ret
			}
			case PB6:
			{
				TOG_BIT(PORTB_R,6);
     7d6:	98 b3       	in	r25, 0x18	; 24
     7d8:	80 e4       	ldi	r24, 0x40	; 64
     7da:	89 27       	eor	r24, r25
     7dc:	88 bb       	out	0x18, r24	; 24
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     7de:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PB6:
			{
				TOG_BIT(PORTB_R,6);
				break;
     7e0:	08 95       	ret
			}
			case PB7:
			{
				TOG_BIT(PORTB_R,7);
     7e2:	88 b3       	in	r24, 0x18	; 24
     7e4:	80 58       	subi	r24, 0x80	; 128
     7e6:	88 bb       	out	0x18, r24	; 24
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     7e8:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PB7:
			{
				TOG_BIT(PORTB_R,7);
				break;
     7ea:	08 95       	ret
			}
			case PC0:
			{
				TOG_BIT(PORTC_R,0);
     7ec:	95 b3       	in	r25, 0x15	; 21
     7ee:	81 e0       	ldi	r24, 0x01	; 1
     7f0:	89 27       	eor	r24, r25
     7f2:	85 bb       	out	0x15, r24	; 21
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     7f4:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PC0:
			{
				TOG_BIT(PORTC_R,0);
				break;
     7f6:	08 95       	ret
			}
			case PC1:
			{
				TOG_BIT(PORTC_R,1);
     7f8:	95 b3       	in	r25, 0x15	; 21
     7fa:	82 e0       	ldi	r24, 0x02	; 2
     7fc:	89 27       	eor	r24, r25
     7fe:	85 bb       	out	0x15, r24	; 21
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     800:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PC1:
			{
				TOG_BIT(PORTC_R,1);
				break;
     802:	08 95       	ret
			}
			case PC2:
			{
				TOG_BIT(PORTC_R,2);
     804:	95 b3       	in	r25, 0x15	; 21
     806:	84 e0       	ldi	r24, 0x04	; 4
     808:	89 27       	eor	r24, r25
     80a:	85 bb       	out	0x15, r24	; 21
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     80c:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PC2:
			{
				TOG_BIT(PORTC_R,2);
				break;
     80e:	08 95       	ret
			}
			case PC3:
			{
				TOG_BIT(PORTC_R,3);
     810:	95 b3       	in	r25, 0x15	; 21
     812:	88 e0       	ldi	r24, 0x08	; 8
     814:	89 27       	eor	r24, r25
     816:	85 bb       	out	0x15, r24	; 21
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     818:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PC3:
			{
				TOG_BIT(PORTC_R,3);
				break;
     81a:	08 95       	ret
			}
			case PC4:
			{
				TOG_BIT(PORTC_R,4);
     81c:	95 b3       	in	r25, 0x15	; 21
     81e:	80 e1       	ldi	r24, 0x10	; 16
     820:	89 27       	eor	r24, r25
     822:	85 bb       	out	0x15, r24	; 21
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     824:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PC4:
			{
				TOG_BIT(PORTC_R,4);
				break;
     826:	08 95       	ret
			}
			case PC5:
			{
				TOG_BIT(PORTC_R,5);
     828:	95 b3       	in	r25, 0x15	; 21
     82a:	80 e2       	ldi	r24, 0x20	; 32
     82c:	89 27       	eor	r24, r25
     82e:	85 bb       	out	0x15, r24	; 21
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     830:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PC5:
			{
				TOG_BIT(PORTC_R,5);
				break;
     832:	08 95       	ret
			}
			case PC6:
			{
				TOG_BIT(PORTC_R,6);
     834:	95 b3       	in	r25, 0x15	; 21
     836:	80 e4       	ldi	r24, 0x40	; 64
     838:	89 27       	eor	r24, r25
     83a:	85 bb       	out	0x15, r24	; 21
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     83c:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PC6:
			{
				TOG_BIT(PORTC_R,6);
				break;
     83e:	08 95       	ret
			}
			case PC7:
			{
				TOG_BIT(PORTC_R,7);
     840:	85 b3       	in	r24, 0x15	; 21
     842:	80 58       	subi	r24, 0x80	; 128
     844:	85 bb       	out	0x15, r24	; 21
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     846:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PC7:
			{
				TOG_BIT(PORTC_R,7);
				break;
     848:	08 95       	ret
			}
			case PD0:
			{
				TOG_BIT(PORTD_R,0);
     84a:	92 b3       	in	r25, 0x12	; 18
     84c:	81 e0       	ldi	r24, 0x01	; 1
     84e:	89 27       	eor	r24, r25
     850:	82 bb       	out	0x12, r24	; 18
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     852:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PD0:
			{
				TOG_BIT(PORTD_R,0);
				break;
     854:	08 95       	ret
			}
			case PD1:
			{
				TOG_BIT(PORTD_R,1);
     856:	92 b3       	in	r25, 0x12	; 18
     858:	82 e0       	ldi	r24, 0x02	; 2
     85a:	89 27       	eor	r24, r25
     85c:	82 bb       	out	0x12, r24	; 18
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     85e:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PD1:
			{
				TOG_BIT(PORTD_R,1);
				break;
     860:	08 95       	ret
			}
			case PD2:
			{
				TOG_BIT(PORTD_R,2);
     862:	92 b3       	in	r25, 0x12	; 18
     864:	84 e0       	ldi	r24, 0x04	; 4
     866:	89 27       	eor	r24, r25
     868:	82 bb       	out	0x12, r24	; 18
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     86a:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PD2:
			{
				TOG_BIT(PORTD_R,2);
				break;
     86c:	08 95       	ret
			}
			case PD3:
			{
				TOG_BIT(PORTD_R,3);
     86e:	92 b3       	in	r25, 0x12	; 18
     870:	88 e0       	ldi	r24, 0x08	; 8
     872:	89 27       	eor	r24, r25
     874:	82 bb       	out	0x12, r24	; 18
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     876:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PD3:
			{
				TOG_BIT(PORTD_R,3);
				break;
     878:	08 95       	ret
			}
			case PD4:
			{
				TOG_BIT(PORTD_R,4);
     87a:	92 b3       	in	r25, 0x12	; 18
     87c:	80 e1       	ldi	r24, 0x10	; 16
     87e:	89 27       	eor	r24, r25
     880:	82 bb       	out	0x12, r24	; 18
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     882:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PD4:
			{
				TOG_BIT(PORTD_R,4);
				break;
     884:	08 95       	ret
			}
			case PD5:
			{
				TOG_BIT(PORTD_R,5);
     886:	92 b3       	in	r25, 0x12	; 18
     888:	80 e2       	ldi	r24, 0x20	; 32
     88a:	89 27       	eor	r24, r25
     88c:	82 bb       	out	0x12, r24	; 18
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     88e:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PD5:
			{
				TOG_BIT(PORTD_R,5);
				break;
     890:	08 95       	ret
			}
			case PD6:
			{
				TOG_BIT(PORTD_R,6);
     892:	92 b3       	in	r25, 0x12	; 18
     894:	80 e4       	ldi	r24, 0x40	; 64
     896:	89 27       	eor	r24, r25
     898:	82 bb       	out	0x12, r24	; 18
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     89a:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PD6:
			{
				TOG_BIT(PORTD_R,6);
				break;
     89c:	08 95       	ret
			}
			case PD7:
			{
				TOG_BIT(PORTD_R,7);
     89e:	82 b3       	in	r24, 0x12	; 18
     8a0:	80 58       	subi	r24, 0x80	; 128
     8a2:	82 bb       	out	0x12, r24	; 18
	enuErrorStatus_t Error=E_ERROR;
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     8a4:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
			case PD7:
			{
				TOG_BIT(PORTD_R,7);
				break;
     8a6:	08 95       	ret
	return Error;
}

enuErrorStatus_t DIO_Toggle(uint8_t u8GroupId)
{
	enuErrorStatus_t Error=E_ERROR;
     8a8:	80 e0       	ldi	r24, 0x00	; 0
     8aa:	08 95       	ret
     8ac:	80 e0       	ldi	r24, 0x00	; 0
     8ae:	08 95       	ret
     8b0:	80 e0       	ldi	r24, 0x00	; 0
     8b2:	08 95       	ret
	if(((astrDIOConfigParameters[u8GroupId].enuPinNo>=PA0)&&(astrDIOConfigParameters[u8GroupId].enuPinNo<=PD7))&&
	((astrDIOConfigParameters[u8GroupId].enuPinDir==INPUT)||(astrDIOConfigParameters[u8GroupId].enuPinDir==OUTPUT))&&
	(((astrDIOConfigParameters[u8GroupId].enuPullupResEn==NO_CONNECTION)||(astrDIOConfigParameters[u8GroupId].enuPullupResEn==PULL_UP_ENABLE))))
	{
		Error = E_OK;
     8b4:	81 e0       	ldi	r24, 0x01	; 1
				break;
			}
		}
	}
	return Error;
     8b6:	08 95       	ret

000008b8 <func>:
#include "UART.h"
#include "TM.h"

void func(void)
{
	DIO_Toggle(1);
     8b8:	81 e0       	ldi	r24, 0x01	; 1
     8ba:	0e 94 68 03 	call	0x6d0	; 0x6d0 <DIO_Toggle>
     8be:	08 95       	ret

000008c0 <main>:
}

int main(void)
{
	DIO_Init();
     8c0:	0e 94 89 00 	call	0x112	; 0x112 <DIO_Init>
	UART_Init();
     8c4:	0e 94 0e 0f 	call	0x1e1c	; 0x1e1c <UART_Init>
    Timer_Init_test();
     8c8:	0e 94 77 04 	call	0x8ee	; 0x8ee <Timer_Init_test>
	Timer_Start_test(0, 1000000, &func);
     8cc:	2c e5       	ldi	r18, 0x5C	; 92
     8ce:	34 e0       	ldi	r19, 0x04	; 4
     8d0:	40 e4       	ldi	r20, 0x40	; 64
     8d2:	52 e4       	ldi	r21, 0x42	; 66
     8d4:	6f e0       	ldi	r22, 0x0F	; 15
     8d6:	70 e0       	ldi	r23, 0x00	; 0
     8d8:	80 e0       	ldi	r24, 0x00	; 0
     8da:	90 e0       	ldi	r25, 0x00	; 0
     8dc:	0e 94 8f 04 	call	0x91e	; 0x91e <Timer_Start_test>
    while (1) 
    {
		Timer_GetStatus_test(0);
     8e0:	80 e0       	ldi	r24, 0x00	; 0
     8e2:	90 e0       	ldi	r25, 0x00	; 0
     8e4:	0e 94 af 04 	call	0x95e	; 0x95e <Timer_GetStatus_test>
		break;
    }
}
     8e8:	80 e0       	ldi	r24, 0x00	; 0
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	08 95       	ret

000008ee <Timer_Init_test>:
		UART_SendString("PASS");
		UART_SendData('\r');
	}else if(res==E_ERROR)
	{
		UART_SendString("FAILED");
		UART_SendData('\r');
     8ee:	0e 94 c7 04 	call	0x98e	; 0x98e <Timer_Init>
     8f2:	81 30       	cpi	r24, 0x01	; 1
     8f4:	49 f4       	brne	.+18     	; 0x908 <Timer_Init_test+0x1a>
     8f6:	8c e6       	ldi	r24, 0x6C	; 108
     8f8:	90 e0       	ldi	r25, 0x00	; 0
     8fa:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <UART_SendString>
     8fe:	8d e0       	ldi	r24, 0x0D	; 13
     900:	90 e0       	ldi	r25, 0x00	; 0
     902:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <UART_SendData>
     906:	08 95       	ret
     908:	81 11       	cpse	r24, r1
     90a:	08 c0       	rjmp	.+16     	; 0x91c <Timer_Init_test+0x2e>
     90c:	81 e7       	ldi	r24, 0x71	; 113
     90e:	90 e0       	ldi	r25, 0x00	; 0
     910:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <UART_SendString>
     914:	8d e0       	ldi	r24, 0x0D	; 13
     916:	90 e0       	ldi	r25, 0x00	; 0
     918:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <UART_SendData>
     91c:	08 95       	ret

0000091e <Timer_Start_test>:
     91e:	ef 92       	push	r14
     920:	ff 92       	push	r15
     922:	0f 93       	push	r16
     924:	1f 93       	push	r17
     926:	0e 94 c3 08 	call	0x1186	; 0x1186 <Timer_Start>
     92a:	81 30       	cpi	r24, 0x01	; 1
     92c:	49 f4       	brne	.+18     	; 0x940 <Timer_Start_test+0x22>
     92e:	8c e6       	ldi	r24, 0x6C	; 108
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <UART_SendString>
     936:	8d e0       	ldi	r24, 0x0D	; 13
     938:	90 e0       	ldi	r25, 0x00	; 0
     93a:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <UART_SendData>
     93e:	0a c0       	rjmp	.+20     	; 0x954 <Timer_Start_test+0x36>
     940:	81 11       	cpse	r24, r1
     942:	08 c0       	rjmp	.+16     	; 0x954 <Timer_Start_test+0x36>
     944:	81 e7       	ldi	r24, 0x71	; 113
     946:	90 e0       	ldi	r25, 0x00	; 0
     948:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <UART_SendString>
     94c:	8d e0       	ldi	r24, 0x0D	; 13
     94e:	90 e0       	ldi	r25, 0x00	; 0
     950:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <UART_SendData>
     954:	1f 91       	pop	r17
     956:	0f 91       	pop	r16
     958:	ff 90       	pop	r15
     95a:	ef 90       	pop	r14
     95c:	08 95       	ret

0000095e <Timer_GetStatus_test>:
	}	
}

void Timer_GetStatus_test(uint8_t u8GroupId)
{
	uint8_t res=Timer_GetStatus(u8GroupId);
     95e:	0e 94 28 0b 	call	0x1650	; 0x1650 <Timer_GetStatus>
	if(res==E_OK)
     962:	81 30       	cpi	r24, 0x01	; 1
     964:	49 f4       	brne	.+18     	; 0x978 <Timer_GetStatus_test+0x1a>
	{
		UART_SendString("PASS");
     966:	8c e6       	ldi	r24, 0x6C	; 108
     968:	90 e0       	ldi	r25, 0x00	; 0
     96a:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <UART_SendString>
		UART_SendData('\r');
     96e:	8d e0       	ldi	r24, 0x0D	; 13
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <UART_SendData>
     976:	08 95       	ret
		
	}else if(res==E_ERROR)
     978:	81 11       	cpse	r24, r1
     97a:	08 c0       	rjmp	.+16     	; 0x98c <Timer_GetStatus_test+0x2e>
	{
		UART_SendString("FAILED");
     97c:	81 e7       	ldi	r24, 0x71	; 113
     97e:	90 e0       	ldi	r25, 0x00	; 0
     980:	0e 94 34 0f 	call	0x1e68	; 0x1e68 <UART_SendString>
		UART_SendData('\r');
     984:	8d e0       	ldi	r24, 0x0D	; 13
     986:	90 e0       	ldi	r25, 0x00	; 0
     988:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <UART_SendData>
     98c:	08 95       	ret

0000098e <Timer_Init>:
{
	uint8_t i;
	enuErrorStatus_t Error=E_ERROR;
	for(i=0;i<TM_GROUPS_NO;i++)
	{
		if(((astrTimerConfigParameters[i].enuTimerModule==TIMER0)||(astrTimerConfigParameters[i].enuTimerModule==TIMER1)||(astrTimerConfigParameters[i].enuTimerModule==TIMER2))&&
     98e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <astrTimerConfigParameters>
     992:	83 30       	cpi	r24, 0x03	; 3
     994:	08 f0       	brcs	.+2      	; 0x998 <Timer_Init+0xa>
     996:	df c3       	rjmp	.+1982   	; 0x1156 <Timer_Init+0x7c8>
		((astrTimerConfigParameters[i].enuTimerMode==NORMAL)||(astrTimerConfigParameters[i].enuTimerMode==CTC)||(astrTimerConfigParameters[i].enuTimerMode==FAST_PWM)||(astrTimerConfigParameters[i].enuTimerMode==PC_PWM))&&
     998:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <astrTimerConfigParameters+0x1>
{
	uint8_t i;
	enuErrorStatus_t Error=E_ERROR;
	for(i=0;i<TM_GROUPS_NO;i++)
	{
		if(((astrTimerConfigParameters[i].enuTimerModule==TIMER0)||(astrTimerConfigParameters[i].enuTimerModule==TIMER1)||(astrTimerConfigParameters[i].enuTimerModule==TIMER2))&&
     99c:	94 30       	cpi	r25, 0x04	; 4
     99e:	08 f0       	brcs	.+2      	; 0x9a2 <Timer_Init+0x14>
     9a0:	dc c3       	rjmp	.+1976   	; 0x115a <Timer_Init+0x7cc>
		((astrTimerConfigParameters[i].enuTimerMode==NORMAL)||(astrTimerConfigParameters[i].enuTimerMode==CTC)||(astrTimerConfigParameters[i].enuTimerMode==FAST_PWM)||(astrTimerConfigParameters[i].enuTimerMode==PC_PWM))&&
		((astrTimerConfigParameters[i].enuTimerClock==NO_CLOCK)||(astrTimerConfigParameters[i].enuTimerClock==NO_PRESCALER)||(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_8)||(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_64)||(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_256)||
     9a2:	20 91 7a 00 	lds	r18, 0x007A	; 0x80007a <astrTimerConfigParameters+0x2>
	uint8_t i;
	enuErrorStatus_t Error=E_ERROR;
	for(i=0;i<TM_GROUPS_NO;i++)
	{
		if(((astrTimerConfigParameters[i].enuTimerModule==TIMER0)||(astrTimerConfigParameters[i].enuTimerModule==TIMER1)||(astrTimerConfigParameters[i].enuTimerModule==TIMER2))&&
		((astrTimerConfigParameters[i].enuTimerMode==NORMAL)||(astrTimerConfigParameters[i].enuTimerMode==CTC)||(astrTimerConfigParameters[i].enuTimerMode==FAST_PWM)||(astrTimerConfigParameters[i].enuTimerMode==PC_PWM))&&
     9a6:	28 30       	cpi	r18, 0x08	; 8
     9a8:	28 f0       	brcs	.+10     	; 0x9b4 <Timer_Init+0x26>
		((astrTimerConfigParameters[i].enuTimerClock==NO_CLOCK)||(astrTimerConfigParameters[i].enuTimerClock==NO_PRESCALER)||(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_8)||(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_64)||(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_256)||
		(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_1024)||(astrTimerConfigParameters[i].enuTimerClock==32)||(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_128)||(astrTimerConfigParameters[i].enuTimerClock==EXTERNAL_CLOCK_FALL_EDGE)||(astrTimerConfigParameters[i].enuTimerClock==EXTERNAL_CLOCK_RISE_EDGE))&&
     9aa:	20 32       	cpi	r18, 0x20	; 32
     9ac:	19 f0       	breq	.+6      	; 0x9b4 <Timer_Init+0x26>
     9ae:	29 30       	cpi	r18, 0x09	; 9
     9b0:	09 f0       	breq	.+2      	; 0x9b4 <Timer_Init+0x26>
     9b2:	d5 c3       	rjmp	.+1962   	; 0x115e <Timer_Init+0x7d0>
		((astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_EN))&&
     9b4:	30 91 7b 00 	lds	r19, 0x007B	; 0x80007b <astrTimerConfigParameters+0x3>
	for(i=0;i<TM_GROUPS_NO;i++)
	{
		if(((astrTimerConfigParameters[i].enuTimerModule==TIMER0)||(astrTimerConfigParameters[i].enuTimerModule==TIMER1)||(astrTimerConfigParameters[i].enuTimerModule==TIMER2))&&
		((astrTimerConfigParameters[i].enuTimerMode==NORMAL)||(astrTimerConfigParameters[i].enuTimerMode==CTC)||(astrTimerConfigParameters[i].enuTimerMode==FAST_PWM)||(astrTimerConfigParameters[i].enuTimerMode==PC_PWM))&&
		((astrTimerConfigParameters[i].enuTimerClock==NO_CLOCK)||(astrTimerConfigParameters[i].enuTimerClock==NO_PRESCALER)||(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_8)||(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_64)||(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_256)||
		(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_1024)||(astrTimerConfigParameters[i].enuTimerClock==32)||(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_128)||(astrTimerConfigParameters[i].enuTimerClock==EXTERNAL_CLOCK_FALL_EDGE)||(astrTimerConfigParameters[i].enuTimerClock==EXTERNAL_CLOCK_RISE_EDGE))&&
     9b8:	32 30       	cpi	r19, 0x02	; 2
     9ba:	08 f0       	brcs	.+2      	; 0x9be <Timer_Init+0x30>
     9bc:	d2 c3       	rjmp	.+1956   	; 0x1162 <Timer_Init+0x7d4>
		((astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_EN))&&
     9be:	40 91 7c 00 	lds	r20, 0x007C	; 0x80007c <astrTimerConfigParameters+0x4>
     9c2:	44 30       	cpi	r20, 0x04	; 4
     9c4:	08 f0       	brcs	.+2      	; 0x9c8 <Timer_Init+0x3a>
     9c6:	cf c3       	rjmp	.+1950   	; 0x1166 <Timer_Init+0x7d8>
		((astrTimerConfigParameters[i].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Set_OC0))&&
     9c8:	40 91 7d 00 	lds	r20, 0x007D	; 0x80007d <astrTimerConfigParameters+0x5>
     9cc:	44 30       	cpi	r20, 0x04	; 4
     9ce:	08 f0       	brcs	.+2      	; 0x9d2 <Timer_Init+0x44>
     9d0:	cc c3       	rjmp	.+1944   	; 0x116a <Timer_Init+0x7dc>
		((astrTimerConfigParameters[i].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Set_OC1))&&
     9d2:	40 91 7e 00 	lds	r20, 0x007E	; 0x80007e <astrTimerConfigParameters+0x6>
     9d6:	44 30       	cpi	r20, 0x04	; 4
     9d8:	08 f0       	brcs	.+2      	; 0x9dc <Timer_Init+0x4e>
     9da:	c9 c3       	rjmp	.+1938   	; 0x116e <Timer_Init+0x7e0>
		((astrTimerConfigParameters[i].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Set_OC2)))
		{
			Error=E_OK;
		if(astrTimerConfigParameters[i].enuTimerModule==TIMER0)
     9dc:	81 11       	cpse	r24, r1
     9de:	0b c1       	rjmp	.+534    	; 0xbf6 <Timer_Init+0x268>
		{
			if(astrTimerConfigParameters[i].enuTimerMode==NORMAL)
     9e0:	91 11       	cpse	r25, r1
     9e2:	11 c0       	rjmp	.+34     	; 0xa06 <Timer_Init+0x78>
			{
				CLR_BIT(TCCR0_R,WGM00_B);
     9e4:	83 b7       	in	r24, 0x33	; 51
     9e6:	8f 7b       	andi	r24, 0xBF	; 191
     9e8:	83 bf       	out	0x33, r24	; 51
				CLR_BIT(TCCR0_R,WGM01_B);					
     9ea:	83 b7       	in	r24, 0x33	; 51
     9ec:	87 7f       	andi	r24, 0xF7	; 247
     9ee:	83 bf       	out	0x33, r24	; 51
					if(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)
     9f0:	31 11       	cpse	r19, r1
     9f2:	04 c0       	rjmp	.+8      	; 0x9fc <Timer_Init+0x6e>
					{
						CLR_BIT(TIMSK_R,TOIE0_B);
     9f4:	89 b7       	in	r24, 0x39	; 57
     9f6:	8e 7f       	andi	r24, 0xFE	; 254
     9f8:	89 bf       	out	0x39, r24	; 57
     9fa:	57 c0       	rjmp	.+174    	; 0xaaa <Timer_Init+0x11c>
					}else
					{
						sei();
     9fc:	78 94       	sei
						SET_BIT(TIMSK_R,TOIE0_B);
     9fe:	89 b7       	in	r24, 0x39	; 57
     a00:	81 60       	ori	r24, 0x01	; 1
     a02:	89 bf       	out	0x39, r24	; 57
     a04:	52 c0       	rjmp	.+164    	; 0xaaa <Timer_Init+0x11c>
					}
			}else if(astrTimerConfigParameters[i].enuTimerMode==CTC)
     a06:	91 30       	cpi	r25, 0x01	; 1
     a08:	09 f0       	breq	.+2      	; 0xa0c <Timer_Init+0x7e>
     a0a:	3e c0       	rjmp	.+124    	; 0xa88 <Timer_Init+0xfa>
			{
				CLR_BIT(TCCR0_R,WGM00_B);
     a0c:	83 b7       	in	r24, 0x33	; 51
     a0e:	8f 7b       	andi	r24, 0xBF	; 191
     a10:	83 bf       	out	0x33, r24	; 51
				SET_BIT(TCCR0_R,WGM01_B);	
     a12:	83 b7       	in	r24, 0x33	; 51
     a14:	88 60       	ori	r24, 0x08	; 8
     a16:	83 bf       	out	0x33, r24	; 51
				if(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)
     a18:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <astrTimerConfigParameters+0x3>
     a1c:	81 11       	cpse	r24, r1
     a1e:	04 c0       	rjmp	.+8      	; 0xa28 <Timer_Init+0x9a>
				{
					CLR_BIT(TIMSK_R,OCIE0_B);
     a20:	89 b7       	in	r24, 0x39	; 57
     a22:	8d 7f       	andi	r24, 0xFD	; 253
     a24:	89 bf       	out	0x39, r24	; 57
     a26:	04 c0       	rjmp	.+8      	; 0xa30 <Timer_Init+0xa2>
				}else
				{
					sei();
     a28:	78 94       	sei
					SET_BIT(TIMSK_R,OCIE0_B);
     a2a:	89 b7       	in	r24, 0x39	; 57
     a2c:	82 60       	ori	r24, 0x02	; 2
     a2e:	89 bf       	out	0x39, r24	; 57
				}
				if(astrTimerConfigParameters[i].enuCTCMode0==OC0_Disconnected)
     a30:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <astrTimerConfigParameters+0x4>
     a34:	81 11       	cpse	r24, r1
     a36:	07 c0       	rjmp	.+14     	; 0xa46 <Timer_Init+0xb8>
				{
					CLR_BIT(TCCR0_R,COM01_B);
     a38:	83 b7       	in	r24, 0x33	; 51
     a3a:	8f 7d       	andi	r24, 0xDF	; 223
     a3c:	83 bf       	out	0x33, r24	; 51
					CLR_BIT(TCCR0_R,COM00_B);
     a3e:	83 b7       	in	r24, 0x33	; 51
     a40:	8f 7e       	andi	r24, 0xEF	; 239
     a42:	83 bf       	out	0x33, r24	; 51
     a44:	32 c0       	rjmp	.+100    	; 0xaaa <Timer_Init+0x11c>
				}else if(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC0)
     a46:	81 30       	cpi	r24, 0x01	; 1
     a48:	49 f4       	brne	.+18     	; 0xa5c <Timer_Init+0xce>
				{
					CLR_BIT(TCCR0_R,COM01_B);
     a4a:	83 b7       	in	r24, 0x33	; 51
     a4c:	8f 7d       	andi	r24, 0xDF	; 223
     a4e:	83 bf       	out	0x33, r24	; 51
					SET_BIT(TCCR0_R,COM00_B);		
     a50:	83 b7       	in	r24, 0x33	; 51
     a52:	80 61       	ori	r24, 0x10	; 16
     a54:	83 bf       	out	0x33, r24	; 51
					DIO_Init();			
     a56:	0e 94 89 00 	call	0x112	; 0x112 <DIO_Init>
     a5a:	27 c0       	rjmp	.+78     	; 0xaaa <Timer_Init+0x11c>
				}else if(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC0)
     a5c:	82 30       	cpi	r24, 0x02	; 2
     a5e:	49 f4       	brne	.+18     	; 0xa72 <Timer_Init+0xe4>
				{
					SET_BIT(TCCR0_R,COM01_B);
     a60:	83 b7       	in	r24, 0x33	; 51
     a62:	80 62       	ori	r24, 0x20	; 32
     a64:	83 bf       	out	0x33, r24	; 51
					CLR_BIT(TCCR0_R,COM00_B);
     a66:	83 b7       	in	r24, 0x33	; 51
     a68:	8f 7e       	andi	r24, 0xEF	; 239
     a6a:	83 bf       	out	0x33, r24	; 51
					DIO_Init();					
     a6c:	0e 94 89 00 	call	0x112	; 0x112 <DIO_Init>
     a70:	1c c0       	rjmp	.+56     	; 0xaaa <Timer_Init+0x11c>
				}else if(astrTimerConfigParameters[i].enuCTCMode0==Set_OC0)
     a72:	83 30       	cpi	r24, 0x03	; 3
     a74:	d1 f4       	brne	.+52     	; 0xaaa <Timer_Init+0x11c>
				{
					SET_BIT(TCCR0_R,COM01_B);
     a76:	83 b7       	in	r24, 0x33	; 51
     a78:	80 62       	ori	r24, 0x20	; 32
     a7a:	83 bf       	out	0x33, r24	; 51
					SET_BIT(TCCR0_R,COM00_B);
     a7c:	83 b7       	in	r24, 0x33	; 51
     a7e:	80 61       	ori	r24, 0x10	; 16
     a80:	83 bf       	out	0x33, r24	; 51
					DIO_Init();					
     a82:	0e 94 89 00 	call	0x112	; 0x112 <DIO_Init>
     a86:	11 c0       	rjmp	.+34     	; 0xaaa <Timer_Init+0x11c>
				}
		}else if(astrTimerConfigParameters[i].enuTimerMode==FAST_PWM)
     a88:	92 30       	cpi	r25, 0x02	; 2
     a8a:	39 f4       	brne	.+14     	; 0xa9a <Timer_Init+0x10c>
		{
			SET_BIT(TCCR0_R,WGM00_B);
     a8c:	83 b7       	in	r24, 0x33	; 51
     a8e:	80 64       	ori	r24, 0x40	; 64
     a90:	83 bf       	out	0x33, r24	; 51
			SET_BIT(TCCR0_R,WGM01_B);
     a92:	83 b7       	in	r24, 0x33	; 51
     a94:	88 60       	ori	r24, 0x08	; 8
     a96:	83 bf       	out	0x33, r24	; 51
     a98:	08 c0       	rjmp	.+16     	; 0xaaa <Timer_Init+0x11c>
		}else if(astrTimerConfigParameters[i].enuTimerMode==PC_PWM)
     a9a:	93 30       	cpi	r25, 0x03	; 3
     a9c:	31 f4       	brne	.+12     	; 0xaaa <Timer_Init+0x11c>
		{
			SET_BIT(TCCR0_R,WGM00_B);
     a9e:	83 b7       	in	r24, 0x33	; 51
     aa0:	80 64       	ori	r24, 0x40	; 64
     aa2:	83 bf       	out	0x33, r24	; 51
			CLR_BIT(TCCR0_R,WGM01_B);
     aa4:	83 b7       	in	r24, 0x33	; 51
     aa6:	87 7f       	andi	r24, 0xF7	; 247
     aa8:	83 bf       	out	0x33, r24	; 51
		}
		if(astrTimerConfigParameters[i].enuTimerClock==NO_CLOCK)
     aaa:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <astrTimerConfigParameters+0x2>
     aae:	81 11       	cpse	r24, r1
     ab0:	0b c0       	rjmp	.+22     	; 0xac8 <Timer_Init+0x13a>
		{
			CLR_BIT(TCCR0_R,CS02_B);
     ab2:	83 b7       	in	r24, 0x33	; 51
     ab4:	8b 7f       	andi	r24, 0xFB	; 251
     ab6:	83 bf       	out	0x33, r24	; 51
			CLR_BIT(TCCR0_R,CS01_B);
     ab8:	83 b7       	in	r24, 0x33	; 51
     aba:	8d 7f       	andi	r24, 0xFD	; 253
     abc:	83 bf       	out	0x33, r24	; 51
			CLR_BIT(TCCR0_R,CS00_B);
     abe:	83 b7       	in	r24, 0x33	; 51
     ac0:	8e 7f       	andi	r24, 0xFE	; 254
     ac2:	83 bf       	out	0x33, r24	; 51
		((astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_EN))&&
		((astrTimerConfigParameters[i].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Set_OC0))&&
		((astrTimerConfigParameters[i].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Set_OC1))&&
		((astrTimerConfigParameters[i].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Set_OC2)))
		{
			Error=E_OK;
     ac4:	81 e0       	ldi	r24, 0x01	; 1
     ac6:	08 95       	ret
		if(astrTimerConfigParameters[i].enuTimerClock==NO_CLOCK)
		{
			CLR_BIT(TCCR0_R,CS02_B);
			CLR_BIT(TCCR0_R,CS01_B);
			CLR_BIT(TCCR0_R,CS00_B);
		}else if(astrTimerConfigParameters[i].enuTimerClock==NO_PRESCALER)
     ac8:	81 30       	cpi	r24, 0x01	; 1
     aca:	b1 f4       	brne	.+44     	; 0xaf8 <Timer_Init+0x16a>
		{
			CLR_BIT(TCCR0_R,CS02_B);
     acc:	83 b7       	in	r24, 0x33	; 51
     ace:	8b 7f       	andi	r24, 0xFB	; 251
     ad0:	83 bf       	out	0x33, r24	; 51
			CLR_BIT(TCCR0_R,CS01_B);
     ad2:	83 b7       	in	r24, 0x33	; 51
     ad4:	8d 7f       	andi	r24, 0xFD	; 253
     ad6:	83 bf       	out	0x33, r24	; 51
			SET_BIT(TCCR0_R,CS00_B);
     ad8:	83 b7       	in	r24, 0x33	; 51
     ada:	81 60       	ori	r24, 0x01	; 1
     adc:	83 bf       	out	0x33, r24	; 51
			prescaler=1;
     ade:	81 e0       	ldi	r24, 0x01	; 1
     ae0:	90 e0       	ldi	r25, 0x00	; 0
     ae2:	a0 e0       	ldi	r26, 0x00	; 0
     ae4:	b0 e0       	ldi	r27, 0x00	; 0
     ae6:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
     aea:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
     aee:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
     af2:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
     af6:	08 95       	ret
		}else if(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_8)
     af8:	82 30       	cpi	r24, 0x02	; 2
     afa:	b9 f4       	brne	.+46     	; 0xb2a <Timer_Init+0x19c>
		{
			CLR_BIT(TCCR0_R,CS02_B);
     afc:	83 b7       	in	r24, 0x33	; 51
     afe:	8b 7f       	andi	r24, 0xFB	; 251
     b00:	83 bf       	out	0x33, r24	; 51
			SET_BIT(TCCR0_R,CS01_B);
     b02:	83 b7       	in	r24, 0x33	; 51
     b04:	82 60       	ori	r24, 0x02	; 2
     b06:	83 bf       	out	0x33, r24	; 51
			CLR_BIT(TCCR0_R,CS00_B);
     b08:	83 b7       	in	r24, 0x33	; 51
     b0a:	8e 7f       	andi	r24, 0xFE	; 254
     b0c:	83 bf       	out	0x33, r24	; 51
			prescaler=8;
     b0e:	88 e0       	ldi	r24, 0x08	; 8
     b10:	90 e0       	ldi	r25, 0x00	; 0
     b12:	a0 e0       	ldi	r26, 0x00	; 0
     b14:	b0 e0       	ldi	r27, 0x00	; 0
     b16:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
     b1a:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
     b1e:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
     b22:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
		((astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_EN))&&
		((astrTimerConfigParameters[i].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Set_OC0))&&
		((astrTimerConfigParameters[i].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Set_OC1))&&
		((astrTimerConfigParameters[i].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Set_OC2)))
		{
			Error=E_OK;
     b26:	81 e0       	ldi	r24, 0x01	; 1
     b28:	08 95       	ret
		{
			CLR_BIT(TCCR0_R,CS02_B);
			SET_BIT(TCCR0_R,CS01_B);
			CLR_BIT(TCCR0_R,CS00_B);
			prescaler=8;
		}else if(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_64)
     b2a:	83 30       	cpi	r24, 0x03	; 3
     b2c:	b9 f4       	brne	.+46     	; 0xb5c <Timer_Init+0x1ce>
		{
			CLR_BIT(TCCR0_R,CS02_B);
     b2e:	83 b7       	in	r24, 0x33	; 51
     b30:	8b 7f       	andi	r24, 0xFB	; 251
     b32:	83 bf       	out	0x33, r24	; 51
			SET_BIT(TCCR0_R,CS01_B);
     b34:	83 b7       	in	r24, 0x33	; 51
     b36:	82 60       	ori	r24, 0x02	; 2
     b38:	83 bf       	out	0x33, r24	; 51
			SET_BIT(TCCR0_R,CS00_B);
     b3a:	83 b7       	in	r24, 0x33	; 51
     b3c:	81 60       	ori	r24, 0x01	; 1
     b3e:	83 bf       	out	0x33, r24	; 51
			prescaler=64;
     b40:	80 e4       	ldi	r24, 0x40	; 64
     b42:	90 e0       	ldi	r25, 0x00	; 0
     b44:	a0 e0       	ldi	r26, 0x00	; 0
     b46:	b0 e0       	ldi	r27, 0x00	; 0
     b48:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
     b4c:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
     b50:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
     b54:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
		((astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_EN))&&
		((astrTimerConfigParameters[i].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Set_OC0))&&
		((astrTimerConfigParameters[i].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Set_OC1))&&
		((astrTimerConfigParameters[i].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Set_OC2)))
		{
			Error=E_OK;
     b58:	81 e0       	ldi	r24, 0x01	; 1
     b5a:	08 95       	ret
		{
			CLR_BIT(TCCR0_R,CS02_B);
			SET_BIT(TCCR0_R,CS01_B);
			SET_BIT(TCCR0_R,CS00_B);
			prescaler=64;
		}else if(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_256)
     b5c:	84 30       	cpi	r24, 0x04	; 4
     b5e:	b9 f4       	brne	.+46     	; 0xb8e <Timer_Init+0x200>
		{
			SET_BIT(TCCR0_R,CS02_B);
     b60:	83 b7       	in	r24, 0x33	; 51
     b62:	84 60       	ori	r24, 0x04	; 4
     b64:	83 bf       	out	0x33, r24	; 51
			CLR_BIT(TCCR0_R,CS01_B);
     b66:	83 b7       	in	r24, 0x33	; 51
     b68:	8d 7f       	andi	r24, 0xFD	; 253
     b6a:	83 bf       	out	0x33, r24	; 51
			CLR_BIT(TCCR0_R,CS00_B);
     b6c:	83 b7       	in	r24, 0x33	; 51
     b6e:	8e 7f       	andi	r24, 0xFE	; 254
     b70:	83 bf       	out	0x33, r24	; 51
			prescaler=256;
     b72:	80 e0       	ldi	r24, 0x00	; 0
     b74:	91 e0       	ldi	r25, 0x01	; 1
     b76:	a0 e0       	ldi	r26, 0x00	; 0
     b78:	b0 e0       	ldi	r27, 0x00	; 0
     b7a:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
     b7e:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
     b82:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
     b86:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
		((astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_EN))&&
		((astrTimerConfigParameters[i].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Set_OC0))&&
		((astrTimerConfigParameters[i].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Set_OC1))&&
		((astrTimerConfigParameters[i].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Set_OC2)))
		{
			Error=E_OK;
     b8a:	81 e0       	ldi	r24, 0x01	; 1
     b8c:	08 95       	ret
		{
			SET_BIT(TCCR0_R,CS02_B);
			CLR_BIT(TCCR0_R,CS01_B);
			CLR_BIT(TCCR0_R,CS00_B);
			prescaler=256;
		}else if(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_1024)
     b8e:	85 30       	cpi	r24, 0x05	; 5
     b90:	b9 f4       	brne	.+46     	; 0xbc0 <Timer_Init+0x232>
		{
			SET_BIT(TCCR0_R,CS02_B);
     b92:	83 b7       	in	r24, 0x33	; 51
     b94:	84 60       	ori	r24, 0x04	; 4
     b96:	83 bf       	out	0x33, r24	; 51
			CLR_BIT(TCCR0_R,CS01_B);
     b98:	83 b7       	in	r24, 0x33	; 51
     b9a:	8d 7f       	andi	r24, 0xFD	; 253
     b9c:	83 bf       	out	0x33, r24	; 51
			SET_BIT(TCCR0_R,CS00_B);
     b9e:	83 b7       	in	r24, 0x33	; 51
     ba0:	81 60       	ori	r24, 0x01	; 1
     ba2:	83 bf       	out	0x33, r24	; 51
			prescaler=1024;
     ba4:	80 e0       	ldi	r24, 0x00	; 0
     ba6:	94 e0       	ldi	r25, 0x04	; 4
     ba8:	a0 e0       	ldi	r26, 0x00	; 0
     baa:	b0 e0       	ldi	r27, 0x00	; 0
     bac:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
     bb0:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
     bb4:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
     bb8:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
		((astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_EN))&&
		((astrTimerConfigParameters[i].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Set_OC0))&&
		((astrTimerConfigParameters[i].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Set_OC1))&&
		((astrTimerConfigParameters[i].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Set_OC2)))
		{
			Error=E_OK;
     bbc:	81 e0       	ldi	r24, 0x01	; 1
     bbe:	08 95       	ret
		{
			SET_BIT(TCCR0_R,CS02_B);
			CLR_BIT(TCCR0_R,CS01_B);
			SET_BIT(TCCR0_R,CS00_B);
			prescaler=1024;
		}else if(astrTimerConfigParameters[i].enuTimerClock==EXTERNAL_CLOCK_FALL_EDGE)
     bc0:	86 30       	cpi	r24, 0x06	; 6
     bc2:	59 f4       	brne	.+22     	; 0xbda <Timer_Init+0x24c>
		{
			SET_BIT(TCCR0_R,CS02_B);
     bc4:	83 b7       	in	r24, 0x33	; 51
     bc6:	84 60       	ori	r24, 0x04	; 4
     bc8:	83 bf       	out	0x33, r24	; 51
			SET_BIT(TCCR0_R,CS01_B);
     bca:	83 b7       	in	r24, 0x33	; 51
     bcc:	82 60       	ori	r24, 0x02	; 2
     bce:	83 bf       	out	0x33, r24	; 51
			CLR_BIT(TCCR0_R,CS00_B);
     bd0:	83 b7       	in	r24, 0x33	; 51
     bd2:	8e 7f       	andi	r24, 0xFE	; 254
     bd4:	83 bf       	out	0x33, r24	; 51
		((astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_EN))&&
		((astrTimerConfigParameters[i].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Set_OC0))&&
		((astrTimerConfigParameters[i].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Set_OC1))&&
		((astrTimerConfigParameters[i].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Set_OC2)))
		{
			Error=E_OK;
     bd6:	81 e0       	ldi	r24, 0x01	; 1
     bd8:	08 95       	ret
		}else if(astrTimerConfigParameters[i].enuTimerClock==EXTERNAL_CLOCK_FALL_EDGE)
		{
			SET_BIT(TCCR0_R,CS02_B);
			SET_BIT(TCCR0_R,CS01_B);
			CLR_BIT(TCCR0_R,CS00_B);
		}else if(astrTimerConfigParameters[i].enuTimerClock==EXTERNAL_CLOCK_RISE_EDGE)
     bda:	87 30       	cpi	r24, 0x07	; 7
     bdc:	09 f0       	breq	.+2      	; 0xbe0 <Timer_Init+0x252>
     bde:	c9 c2       	rjmp	.+1426   	; 0x1172 <Timer_Init+0x7e4>
		{
			SET_BIT(TCCR0_R,CS02_B);
     be0:	83 b7       	in	r24, 0x33	; 51
     be2:	84 60       	ori	r24, 0x04	; 4
     be4:	83 bf       	out	0x33, r24	; 51
			SET_BIT(TCCR0_R,CS01_B);
     be6:	83 b7       	in	r24, 0x33	; 51
     be8:	82 60       	ori	r24, 0x02	; 2
     bea:	83 bf       	out	0x33, r24	; 51
			SET_BIT(TCCR0_R,CS00_B);
     bec:	83 b7       	in	r24, 0x33	; 51
     bee:	81 60       	ori	r24, 0x01	; 1
     bf0:	83 bf       	out	0x33, r24	; 51
		((astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_EN))&&
		((astrTimerConfigParameters[i].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Set_OC0))&&
		((astrTimerConfigParameters[i].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Set_OC1))&&
		((astrTimerConfigParameters[i].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Set_OC2)))
		{
			Error=E_OK;
     bf2:	81 e0       	ldi	r24, 0x01	; 1
     bf4:	08 95       	ret
		{
			SET_BIT(TCCR0_R,CS02_B);
			SET_BIT(TCCR0_R,CS01_B);
			SET_BIT(TCCR0_R,CS00_B);
		}
	}else if(astrTimerConfigParameters[i].enuTimerModule==TIMER1)
     bf6:	81 30       	cpi	r24, 0x01	; 1
     bf8:	09 f0       	breq	.+2      	; 0xbfc <Timer_Init+0x26e>
     bfa:	a0 c1       	rjmp	.+832    	; 0xf3c <Timer_Init+0x5ae>
	{
		if(astrTimerConfigParameters[i].enuTimerMode==NORMAL)
     bfc:	91 11       	cpse	r25, r1
     bfe:	aa c0       	rjmp	.+340    	; 0xd54 <Timer_Init+0x3c6>
		{
			
			if(astrTimerConfigParameters[i].enuTimerClock==NO_CLOCK)
     c00:	21 11       	cpse	r18, r1
     c02:	0a c0       	rjmp	.+20     	; 0xc18 <Timer_Init+0x28a>
			{
				CLR_BIT(TCCR1B_R,2);
     c04:	8e b5       	in	r24, 0x2e	; 46
     c06:	8b 7f       	andi	r24, 0xFB	; 251
     c08:	8e bd       	out	0x2e, r24	; 46
				CLR_BIT(TCCR1B_R,1);
     c0a:	8e b5       	in	r24, 0x2e	; 46
     c0c:	8d 7f       	andi	r24, 0xFD	; 253
     c0e:	8e bd       	out	0x2e, r24	; 46
				CLR_BIT(TCCR1B_R,0);
     c10:	8e b5       	in	r24, 0x2e	; 46
     c12:	8e 7f       	andi	r24, 0xFE	; 254
     c14:	8e bd       	out	0x2e, r24	; 46
     c16:	8f c0       	rjmp	.+286    	; 0xd36 <Timer_Init+0x3a8>
			}else if(astrTimerConfigParameters[i].enuTimerClock==NO_PRESCALER)
     c18:	21 30       	cpi	r18, 0x01	; 1
     c1a:	b1 f4       	brne	.+44     	; 0xc48 <Timer_Init+0x2ba>
			{
				CLR_BIT(TCCR1B_R,2);
     c1c:	8e b5       	in	r24, 0x2e	; 46
     c1e:	8b 7f       	andi	r24, 0xFB	; 251
     c20:	8e bd       	out	0x2e, r24	; 46
				CLR_BIT(TCCR1B_R,1);
     c22:	8e b5       	in	r24, 0x2e	; 46
     c24:	8d 7f       	andi	r24, 0xFD	; 253
     c26:	8e bd       	out	0x2e, r24	; 46
				SET_BIT(TCCR1B_R,0);
     c28:	8e b5       	in	r24, 0x2e	; 46
     c2a:	81 60       	ori	r24, 0x01	; 1
     c2c:	8e bd       	out	0x2e, r24	; 46
				prescaler=1;				
     c2e:	81 e0       	ldi	r24, 0x01	; 1
     c30:	90 e0       	ldi	r25, 0x00	; 0
     c32:	a0 e0       	ldi	r26, 0x00	; 0
     c34:	b0 e0       	ldi	r27, 0x00	; 0
     c36:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
     c3a:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
     c3e:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
     c42:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
     c46:	77 c0       	rjmp	.+238    	; 0xd36 <Timer_Init+0x3a8>
			}else if(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_8)
     c48:	22 30       	cpi	r18, 0x02	; 2
     c4a:	b1 f4       	brne	.+44     	; 0xc78 <Timer_Init+0x2ea>
			{
				CLR_BIT(TCCR1B_R,2);
     c4c:	8e b5       	in	r24, 0x2e	; 46
     c4e:	8b 7f       	andi	r24, 0xFB	; 251
     c50:	8e bd       	out	0x2e, r24	; 46
				SET_BIT(TCCR1B_R,1);
     c52:	8e b5       	in	r24, 0x2e	; 46
     c54:	82 60       	ori	r24, 0x02	; 2
     c56:	8e bd       	out	0x2e, r24	; 46
				CLR_BIT(TCCR1B_R,0);
     c58:	8e b5       	in	r24, 0x2e	; 46
     c5a:	8e 7f       	andi	r24, 0xFE	; 254
     c5c:	8e bd       	out	0x2e, r24	; 46
				prescaler=8;
     c5e:	88 e0       	ldi	r24, 0x08	; 8
     c60:	90 e0       	ldi	r25, 0x00	; 0
     c62:	a0 e0       	ldi	r26, 0x00	; 0
     c64:	b0 e0       	ldi	r27, 0x00	; 0
     c66:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
     c6a:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
     c6e:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
     c72:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
     c76:	5f c0       	rjmp	.+190    	; 0xd36 <Timer_Init+0x3a8>
			}else if(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_64)
     c78:	23 30       	cpi	r18, 0x03	; 3
     c7a:	b1 f4       	brne	.+44     	; 0xca8 <Timer_Init+0x31a>
			{
				CLR_BIT(TCCR1B_R,2);
     c7c:	8e b5       	in	r24, 0x2e	; 46
     c7e:	8b 7f       	andi	r24, 0xFB	; 251
     c80:	8e bd       	out	0x2e, r24	; 46
				SET_BIT(TCCR1B_R,1);
     c82:	8e b5       	in	r24, 0x2e	; 46
     c84:	82 60       	ori	r24, 0x02	; 2
     c86:	8e bd       	out	0x2e, r24	; 46
				SET_BIT(TCCR1B_R,0);
     c88:	8e b5       	in	r24, 0x2e	; 46
     c8a:	81 60       	ori	r24, 0x01	; 1
     c8c:	8e bd       	out	0x2e, r24	; 46
				prescaler=64;	
     c8e:	80 e4       	ldi	r24, 0x40	; 64
     c90:	90 e0       	ldi	r25, 0x00	; 0
     c92:	a0 e0       	ldi	r26, 0x00	; 0
     c94:	b0 e0       	ldi	r27, 0x00	; 0
     c96:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
     c9a:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
     c9e:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
     ca2:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
     ca6:	47 c0       	rjmp	.+142    	; 0xd36 <Timer_Init+0x3a8>
			}else if(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_256)
     ca8:	24 30       	cpi	r18, 0x04	; 4
     caa:	b1 f4       	brne	.+44     	; 0xcd8 <Timer_Init+0x34a>
			{
				SET_BIT(TCCR1B_R,2);
     cac:	8e b5       	in	r24, 0x2e	; 46
     cae:	84 60       	ori	r24, 0x04	; 4
     cb0:	8e bd       	out	0x2e, r24	; 46
				CLR_BIT(TCCR1B_R,1);
     cb2:	8e b5       	in	r24, 0x2e	; 46
     cb4:	8d 7f       	andi	r24, 0xFD	; 253
     cb6:	8e bd       	out	0x2e, r24	; 46
				CLR_BIT(TCCR1B_R,0);
     cb8:	8e b5       	in	r24, 0x2e	; 46
     cba:	8e 7f       	andi	r24, 0xFE	; 254
     cbc:	8e bd       	out	0x2e, r24	; 46
				prescaler=256;
     cbe:	80 e0       	ldi	r24, 0x00	; 0
     cc0:	91 e0       	ldi	r25, 0x01	; 1
     cc2:	a0 e0       	ldi	r26, 0x00	; 0
     cc4:	b0 e0       	ldi	r27, 0x00	; 0
     cc6:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
     cca:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
     cce:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
     cd2:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
     cd6:	2f c0       	rjmp	.+94     	; 0xd36 <Timer_Init+0x3a8>
			}else if(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_1024)
     cd8:	25 30       	cpi	r18, 0x05	; 5
     cda:	b1 f4       	brne	.+44     	; 0xd08 <Timer_Init+0x37a>
			{
				SET_BIT(TCCR1B_R,2);
     cdc:	8e b5       	in	r24, 0x2e	; 46
     cde:	84 60       	ori	r24, 0x04	; 4
     ce0:	8e bd       	out	0x2e, r24	; 46
				CLR_BIT(TCCR1B_R,1);
     ce2:	8e b5       	in	r24, 0x2e	; 46
     ce4:	8d 7f       	andi	r24, 0xFD	; 253
     ce6:	8e bd       	out	0x2e, r24	; 46
				SET_BIT(TCCR1B_R,0);
     ce8:	8e b5       	in	r24, 0x2e	; 46
     cea:	81 60       	ori	r24, 0x01	; 1
     cec:	8e bd       	out	0x2e, r24	; 46
				prescaler=1024;				
     cee:	80 e0       	ldi	r24, 0x00	; 0
     cf0:	94 e0       	ldi	r25, 0x04	; 4
     cf2:	a0 e0       	ldi	r26, 0x00	; 0
     cf4:	b0 e0       	ldi	r27, 0x00	; 0
     cf6:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
     cfa:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
     cfe:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
     d02:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
     d06:	17 c0       	rjmp	.+46     	; 0xd36 <Timer_Init+0x3a8>
			}else if(astrTimerConfigParameters[i].enuTimerClock==EXTERNAL_CLOCK_FALL_EDGE)
     d08:	26 30       	cpi	r18, 0x06	; 6
     d0a:	51 f4       	brne	.+20     	; 0xd20 <Timer_Init+0x392>
			{
				SET_BIT(TCCR1B_R,2);
     d0c:	8e b5       	in	r24, 0x2e	; 46
     d0e:	84 60       	ori	r24, 0x04	; 4
     d10:	8e bd       	out	0x2e, r24	; 46
				SET_BIT(TCCR1B_R,1);
     d12:	8e b5       	in	r24, 0x2e	; 46
     d14:	82 60       	ori	r24, 0x02	; 2
     d16:	8e bd       	out	0x2e, r24	; 46
				CLR_BIT(TCCR1B_R,0);				
     d18:	8e b5       	in	r24, 0x2e	; 46
     d1a:	8e 7f       	andi	r24, 0xFE	; 254
     d1c:	8e bd       	out	0x2e, r24	; 46
     d1e:	0b c0       	rjmp	.+22     	; 0xd36 <Timer_Init+0x3a8>
			}else if(astrTimerConfigParameters[i].enuTimerClock==EXTERNAL_CLOCK_RISE_EDGE)
     d20:	27 30       	cpi	r18, 0x07	; 7
     d22:	49 f4       	brne	.+18     	; 0xd36 <Timer_Init+0x3a8>
			{
				SET_BIT(TCCR1B_R,2);
     d24:	8e b5       	in	r24, 0x2e	; 46
     d26:	84 60       	ori	r24, 0x04	; 4
     d28:	8e bd       	out	0x2e, r24	; 46
				SET_BIT(TCCR1B_R,1);
     d2a:	8e b5       	in	r24, 0x2e	; 46
     d2c:	82 60       	ori	r24, 0x02	; 2
     d2e:	8e bd       	out	0x2e, r24	; 46
				SET_BIT(TCCR1B_R,0);
     d30:	8e b5       	in	r24, 0x2e	; 46
     d32:	81 60       	ori	r24, 0x01	; 1
     d34:	8e bd       	out	0x2e, r24	; 46
			}
			
			if(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)
     d36:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <astrTimerConfigParameters+0x3>
     d3a:	81 11       	cpse	r24, r1
     d3c:	05 c0       	rjmp	.+10     	; 0xd48 <Timer_Init+0x3ba>
			{
				CLR_BIT(TIMSK_R,TOIE1_B);
     d3e:	89 b7       	in	r24, 0x39	; 57
     d40:	8b 7f       	andi	r24, 0xFB	; 251
     d42:	89 bf       	out	0x39, r24	; 57
		((astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_EN))&&
		((astrTimerConfigParameters[i].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Set_OC0))&&
		((astrTimerConfigParameters[i].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Set_OC1))&&
		((astrTimerConfigParameters[i].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Set_OC2)))
		{
			Error=E_OK;
     d44:	81 e0       	ldi	r24, 0x01	; 1
     d46:	08 95       	ret
			if(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)
			{
				CLR_BIT(TIMSK_R,TOIE1_B);
			}else
			{
				sei();
     d48:	78 94       	sei
				SET_BIT(TIMSK_R,TOIE1_B);
     d4a:	89 b7       	in	r24, 0x39	; 57
     d4c:	84 60       	ori	r24, 0x04	; 4
     d4e:	89 bf       	out	0x39, r24	; 57
		((astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_EN))&&
		((astrTimerConfigParameters[i].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Set_OC0))&&
		((astrTimerConfigParameters[i].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Set_OC1))&&
		((astrTimerConfigParameters[i].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Set_OC2)))
		{
			Error=E_OK;
     d50:	81 e0       	ldi	r24, 0x01	; 1
     d52:	08 95       	ret
			{
				sei();
				SET_BIT(TIMSK_R,TOIE1_B);
			}

	}else if(astrTimerConfigParameters[i].enuTimerMode==CTC)
     d54:	91 30       	cpi	r25, 0x01	; 1
     d56:	09 f0       	breq	.+2      	; 0xd5a <Timer_Init+0x3cc>
     d58:	0e c2       	rjmp	.+1052   	; 0x1176 <Timer_Init+0x7e8>
	{
		if(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)
     d5a:	31 11       	cpse	r19, r1
     d5c:	04 c0       	rjmp	.+8      	; 0xd66 <Timer_Init+0x3d8>
		{
			CLR_BIT(TIMSK_R,OCIE1A_B);
     d5e:	89 b7       	in	r24, 0x39	; 57
     d60:	8f 7e       	andi	r24, 0xEF	; 239
     d62:	89 bf       	out	0x39, r24	; 57
     d64:	06 c0       	rjmp	.+12     	; 0xd72 <Timer_Init+0x3e4>
		}else if(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_EN)
     d66:	31 30       	cpi	r19, 0x01	; 1
     d68:	21 f4       	brne	.+8      	; 0xd72 <Timer_Init+0x3e4>
		{
			sei();
     d6a:	78 94       	sei
			SET_BIT(TIMSK_R,OCIE1A_B);
     d6c:	89 b7       	in	r24, 0x39	; 57
     d6e:	80 61       	ori	r24, 0x10	; 16
     d70:	89 bf       	out	0x39, r24	; 57
		}
		
			if(astrTimerConfigParameters[i].enuTimerClock==NO_CLOCK)
     d72:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <astrTimerConfigParameters+0x2>
     d76:	81 11       	cpse	r24, r1
     d78:	0a c0       	rjmp	.+20     	; 0xd8e <Timer_Init+0x400>
			{
				CLR_BIT(TCCR1B_R,2);
     d7a:	8e b5       	in	r24, 0x2e	; 46
     d7c:	8b 7f       	andi	r24, 0xFB	; 251
     d7e:	8e bd       	out	0x2e, r24	; 46
				CLR_BIT(TCCR1B_R,1);
     d80:	8e b5       	in	r24, 0x2e	; 46
     d82:	8d 7f       	andi	r24, 0xFD	; 253
     d84:	8e bd       	out	0x2e, r24	; 46
				CLR_BIT(TCCR1B_R,0);
     d86:	8e b5       	in	r24, 0x2e	; 46
     d88:	8e 7f       	andi	r24, 0xFE	; 254
     d8a:	8e bd       	out	0x2e, r24	; 46
     d8c:	8f c0       	rjmp	.+286    	; 0xeac <Timer_Init+0x51e>
			}else if(astrTimerConfigParameters[i].enuTimerClock==NO_PRESCALER)
     d8e:	81 30       	cpi	r24, 0x01	; 1
     d90:	b1 f4       	brne	.+44     	; 0xdbe <Timer_Init+0x430>
			{
				CLR_BIT(TCCR1B_R,2);
     d92:	8e b5       	in	r24, 0x2e	; 46
     d94:	8b 7f       	andi	r24, 0xFB	; 251
     d96:	8e bd       	out	0x2e, r24	; 46
				CLR_BIT(TCCR1B_R,1);
     d98:	8e b5       	in	r24, 0x2e	; 46
     d9a:	8d 7f       	andi	r24, 0xFD	; 253
     d9c:	8e bd       	out	0x2e, r24	; 46
				SET_BIT(TCCR1B_R,0);
     d9e:	8e b5       	in	r24, 0x2e	; 46
     da0:	81 60       	ori	r24, 0x01	; 1
     da2:	8e bd       	out	0x2e, r24	; 46
				prescaler=1;
     da4:	81 e0       	ldi	r24, 0x01	; 1
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	a0 e0       	ldi	r26, 0x00	; 0
     daa:	b0 e0       	ldi	r27, 0x00	; 0
     dac:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
     db0:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
     db4:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
     db8:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
     dbc:	77 c0       	rjmp	.+238    	; 0xeac <Timer_Init+0x51e>
			}else if(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_8)
     dbe:	82 30       	cpi	r24, 0x02	; 2
     dc0:	b1 f4       	brne	.+44     	; 0xdee <Timer_Init+0x460>
			{
				CLR_BIT(TCCR1B_R,2);
     dc2:	8e b5       	in	r24, 0x2e	; 46
     dc4:	8b 7f       	andi	r24, 0xFB	; 251
     dc6:	8e bd       	out	0x2e, r24	; 46
				SET_BIT(TCCR1B_R,1);
     dc8:	8e b5       	in	r24, 0x2e	; 46
     dca:	82 60       	ori	r24, 0x02	; 2
     dcc:	8e bd       	out	0x2e, r24	; 46
				CLR_BIT(TCCR1B_R,0);
     dce:	8e b5       	in	r24, 0x2e	; 46
     dd0:	8e 7f       	andi	r24, 0xFE	; 254
     dd2:	8e bd       	out	0x2e, r24	; 46
				prescaler=8;
     dd4:	88 e0       	ldi	r24, 0x08	; 8
     dd6:	90 e0       	ldi	r25, 0x00	; 0
     dd8:	a0 e0       	ldi	r26, 0x00	; 0
     dda:	b0 e0       	ldi	r27, 0x00	; 0
     ddc:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
     de0:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
     de4:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
     de8:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
     dec:	5f c0       	rjmp	.+190    	; 0xeac <Timer_Init+0x51e>
			}else if(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_64)
     dee:	83 30       	cpi	r24, 0x03	; 3
     df0:	b1 f4       	brne	.+44     	; 0xe1e <Timer_Init+0x490>
			{
				CLR_BIT(TCCR1B_R,2);
     df2:	8e b5       	in	r24, 0x2e	; 46
     df4:	8b 7f       	andi	r24, 0xFB	; 251
     df6:	8e bd       	out	0x2e, r24	; 46
				SET_BIT(TCCR1B_R,1);
     df8:	8e b5       	in	r24, 0x2e	; 46
     dfa:	82 60       	ori	r24, 0x02	; 2
     dfc:	8e bd       	out	0x2e, r24	; 46
				SET_BIT(TCCR1B_R,0);
     dfe:	8e b5       	in	r24, 0x2e	; 46
     e00:	81 60       	ori	r24, 0x01	; 1
     e02:	8e bd       	out	0x2e, r24	; 46
				prescaler=64;
     e04:	80 e4       	ldi	r24, 0x40	; 64
     e06:	90 e0       	ldi	r25, 0x00	; 0
     e08:	a0 e0       	ldi	r26, 0x00	; 0
     e0a:	b0 e0       	ldi	r27, 0x00	; 0
     e0c:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
     e10:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
     e14:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
     e18:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
     e1c:	47 c0       	rjmp	.+142    	; 0xeac <Timer_Init+0x51e>
			}else if(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_256)
     e1e:	84 30       	cpi	r24, 0x04	; 4
     e20:	b1 f4       	brne	.+44     	; 0xe4e <Timer_Init+0x4c0>
			{
				SET_BIT(TCCR1B_R,2);
     e22:	8e b5       	in	r24, 0x2e	; 46
     e24:	84 60       	ori	r24, 0x04	; 4
     e26:	8e bd       	out	0x2e, r24	; 46
				CLR_BIT(TCCR1B_R,1);
     e28:	8e b5       	in	r24, 0x2e	; 46
     e2a:	8d 7f       	andi	r24, 0xFD	; 253
     e2c:	8e bd       	out	0x2e, r24	; 46
				CLR_BIT(TCCR1B_R,0);
     e2e:	8e b5       	in	r24, 0x2e	; 46
     e30:	8e 7f       	andi	r24, 0xFE	; 254
     e32:	8e bd       	out	0x2e, r24	; 46
				prescaler=256;
     e34:	80 e0       	ldi	r24, 0x00	; 0
     e36:	91 e0       	ldi	r25, 0x01	; 1
     e38:	a0 e0       	ldi	r26, 0x00	; 0
     e3a:	b0 e0       	ldi	r27, 0x00	; 0
     e3c:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
     e40:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
     e44:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
     e48:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
     e4c:	2f c0       	rjmp	.+94     	; 0xeac <Timer_Init+0x51e>
			}else if(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_1024)
     e4e:	85 30       	cpi	r24, 0x05	; 5
     e50:	b1 f4       	brne	.+44     	; 0xe7e <Timer_Init+0x4f0>
			{
				SET_BIT(TCCR1B_R,2);
     e52:	8e b5       	in	r24, 0x2e	; 46
     e54:	84 60       	ori	r24, 0x04	; 4
     e56:	8e bd       	out	0x2e, r24	; 46
				CLR_BIT(TCCR1B_R,1);
     e58:	8e b5       	in	r24, 0x2e	; 46
     e5a:	8d 7f       	andi	r24, 0xFD	; 253
     e5c:	8e bd       	out	0x2e, r24	; 46
				SET_BIT(TCCR1B_R,0);
     e5e:	8e b5       	in	r24, 0x2e	; 46
     e60:	81 60       	ori	r24, 0x01	; 1
     e62:	8e bd       	out	0x2e, r24	; 46
				prescaler=1024;
     e64:	80 e0       	ldi	r24, 0x00	; 0
     e66:	94 e0       	ldi	r25, 0x04	; 4
     e68:	a0 e0       	ldi	r26, 0x00	; 0
     e6a:	b0 e0       	ldi	r27, 0x00	; 0
     e6c:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
     e70:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
     e74:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
     e78:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
     e7c:	17 c0       	rjmp	.+46     	; 0xeac <Timer_Init+0x51e>
			}else if(astrTimerConfigParameters[i].enuTimerClock==EXTERNAL_CLOCK_FALL_EDGE)
     e7e:	86 30       	cpi	r24, 0x06	; 6
     e80:	51 f4       	brne	.+20     	; 0xe96 <Timer_Init+0x508>
			{
				SET_BIT(TCCR1B_R,2);
     e82:	8e b5       	in	r24, 0x2e	; 46
     e84:	84 60       	ori	r24, 0x04	; 4
     e86:	8e bd       	out	0x2e, r24	; 46
				SET_BIT(TCCR1B_R,1);
     e88:	8e b5       	in	r24, 0x2e	; 46
     e8a:	82 60       	ori	r24, 0x02	; 2
     e8c:	8e bd       	out	0x2e, r24	; 46
				CLR_BIT(TCCR1B_R,0);
     e8e:	8e b5       	in	r24, 0x2e	; 46
     e90:	8e 7f       	andi	r24, 0xFE	; 254
     e92:	8e bd       	out	0x2e, r24	; 46
     e94:	0b c0       	rjmp	.+22     	; 0xeac <Timer_Init+0x51e>
			}else if(astrTimerConfigParameters[i].enuTimerClock==EXTERNAL_CLOCK_RISE_EDGE)
     e96:	87 30       	cpi	r24, 0x07	; 7
     e98:	49 f4       	brne	.+18     	; 0xeac <Timer_Init+0x51e>
			{
				SET_BIT(TCCR1B_R,2);
     e9a:	8e b5       	in	r24, 0x2e	; 46
     e9c:	84 60       	ori	r24, 0x04	; 4
     e9e:	8e bd       	out	0x2e, r24	; 46
				SET_BIT(TCCR1B_R,1);
     ea0:	8e b5       	in	r24, 0x2e	; 46
     ea2:	82 60       	ori	r24, 0x02	; 2
     ea4:	8e bd       	out	0x2e, r24	; 46
				SET_BIT(TCCR1B_R,0);
     ea6:	8e b5       	in	r24, 0x2e	; 46
     ea8:	81 60       	ori	r24, 0x01	; 1
     eaa:	8e bd       	out	0x2e, r24	; 46
			}
			
			if(astrTimerConfigParameters[i].enuCTCMode1==OC1_Disconnected)
     eac:	80 91 7d 00 	lds	r24, 0x007D	; 0x80007d <astrTimerConfigParameters+0x5>
     eb0:	81 11       	cpse	r24, r1
     eb2:	0d c0       	rjmp	.+26     	; 0xece <Timer_Init+0x540>
			{
				CLR_BIT(TCCR1A_R,7);
     eb4:	8f b5       	in	r24, 0x2f	; 47
     eb6:	8f 77       	andi	r24, 0x7F	; 127
     eb8:	8f bd       	out	0x2f, r24	; 47
				CLR_BIT(TCCR1A_R,6);
     eba:	8f b5       	in	r24, 0x2f	; 47
     ebc:	8f 7b       	andi	r24, 0xBF	; 191
     ebe:	8f bd       	out	0x2f, r24	; 47
				CLR_BIT(TCCR1A_R,5);
     ec0:	8f b5       	in	r24, 0x2f	; 47
     ec2:	8f 7d       	andi	r24, 0xDF	; 223
     ec4:	8f bd       	out	0x2f, r24	; 47
				CLR_BIT(TCCR1A_R,4);	
     ec6:	8f b5       	in	r24, 0x2f	; 47
     ec8:	8f 7e       	andi	r24, 0xEF	; 239
     eca:	8f bd       	out	0x2f, r24	; 47
     ecc:	32 c0       	rjmp	.+100    	; 0xf32 <Timer_Init+0x5a4>
			}else if(astrTimerConfigParameters[i].enuCTCMode1==Toggle_OC1)
     ece:	81 30       	cpi	r24, 0x01	; 1
     ed0:	79 f4       	brne	.+30     	; 0xef0 <Timer_Init+0x562>
			{
				CLR_BIT(TCCR1A_R,7);
     ed2:	8f b5       	in	r24, 0x2f	; 47
     ed4:	8f 77       	andi	r24, 0x7F	; 127
     ed6:	8f bd       	out	0x2f, r24	; 47
				SET_BIT(TCCR1A_R,6);
     ed8:	8f b5       	in	r24, 0x2f	; 47
     eda:	80 64       	ori	r24, 0x40	; 64
     edc:	8f bd       	out	0x2f, r24	; 47
				CLR_BIT(TCCR1A_R,5);
     ede:	8f b5       	in	r24, 0x2f	; 47
     ee0:	8f 7d       	andi	r24, 0xDF	; 223
     ee2:	8f bd       	out	0x2f, r24	; 47
				SET_BIT(TCCR1A_R,4);
     ee4:	8f b5       	in	r24, 0x2f	; 47
     ee6:	80 61       	ori	r24, 0x10	; 16
     ee8:	8f bd       	out	0x2f, r24	; 47
				DIO_Init();
     eea:	0e 94 89 00 	call	0x112	; 0x112 <DIO_Init>
     eee:	21 c0       	rjmp	.+66     	; 0xf32 <Timer_Init+0x5a4>
			}else if(astrTimerConfigParameters[i].enuCTCMode1==Clear_OC1)
     ef0:	82 30       	cpi	r24, 0x02	; 2
     ef2:	79 f4       	brne	.+30     	; 0xf12 <Timer_Init+0x584>
			{
				SET_BIT(TCCR1A_R,7);
     ef4:	8f b5       	in	r24, 0x2f	; 47
     ef6:	80 68       	ori	r24, 0x80	; 128
     ef8:	8f bd       	out	0x2f, r24	; 47
				CLR_BIT(TCCR1A_R,6);
     efa:	8f b5       	in	r24, 0x2f	; 47
     efc:	8f 7b       	andi	r24, 0xBF	; 191
     efe:	8f bd       	out	0x2f, r24	; 47
				SET_BIT(TCCR1A_R,5);
     f00:	8f b5       	in	r24, 0x2f	; 47
     f02:	80 62       	ori	r24, 0x20	; 32
     f04:	8f bd       	out	0x2f, r24	; 47
				CLR_BIT(TCCR1A_R,4);
     f06:	8f b5       	in	r24, 0x2f	; 47
     f08:	8f 7e       	andi	r24, 0xEF	; 239
     f0a:	8f bd       	out	0x2f, r24	; 47
				DIO_Init();				
     f0c:	0e 94 89 00 	call	0x112	; 0x112 <DIO_Init>
     f10:	10 c0       	rjmp	.+32     	; 0xf32 <Timer_Init+0x5a4>
			}else if(astrTimerConfigParameters[i].enuCTCMode1==Set_OC1)
     f12:	83 30       	cpi	r24, 0x03	; 3
     f14:	71 f4       	brne	.+28     	; 0xf32 <Timer_Init+0x5a4>
			{
				SET_BIT(TCCR1A_R,7);
     f16:	8f b5       	in	r24, 0x2f	; 47
     f18:	80 68       	ori	r24, 0x80	; 128
     f1a:	8f bd       	out	0x2f, r24	; 47
				SET_BIT(TCCR1A_R,6);
     f1c:	8f b5       	in	r24, 0x2f	; 47
     f1e:	80 64       	ori	r24, 0x40	; 64
     f20:	8f bd       	out	0x2f, r24	; 47
				SET_BIT(TCCR1A_R,5);
     f22:	8f b5       	in	r24, 0x2f	; 47
     f24:	80 62       	ori	r24, 0x20	; 32
     f26:	8f bd       	out	0x2f, r24	; 47
				SET_BIT(TCCR1A_R,4);
     f28:	8f b5       	in	r24, 0x2f	; 47
     f2a:	80 61       	ori	r24, 0x10	; 16
     f2c:	8f bd       	out	0x2f, r24	; 47
				DIO_Init();
     f2e:	0e 94 89 00 	call	0x112	; 0x112 <DIO_Init>
			}
			SET_BIT(TCCR1B_R,3);
     f32:	8e b5       	in	r24, 0x2e	; 46
     f34:	88 60       	ori	r24, 0x08	; 8
     f36:	8e bd       	out	0x2e, r24	; 46
		((astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_EN))&&
		((astrTimerConfigParameters[i].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Set_OC0))&&
		((astrTimerConfigParameters[i].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Set_OC1))&&
		((astrTimerConfigParameters[i].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Set_OC2)))
		{
			Error=E_OK;
     f38:	81 e0       	ldi	r24, 0x01	; 1
     f3a:	08 95       	ret
				SET_BIT(TCCR1A_R,4);
				DIO_Init();
			}
			SET_BIT(TCCR1B_R,3);
	}
	}else if(astrTimerConfigParameters[i].enuTimerModule==TIMER2)
     f3c:	82 30       	cpi	r24, 0x02	; 2
     f3e:	09 f0       	breq	.+2      	; 0xf42 <Timer_Init+0x5b4>
     f40:	1c c1       	rjmp	.+568    	; 0x117a <Timer_Init+0x7ec>
	{
					if(astrTimerConfigParameters[i].enuTimerClock==NO_CLOCK)
     f42:	21 11       	cpse	r18, r1
     f44:	0a c0       	rjmp	.+20     	; 0xf5a <Timer_Init+0x5cc>
					{
						CLR_BIT(TCCR2_R,2);
     f46:	85 b5       	in	r24, 0x25	; 37
     f48:	8b 7f       	andi	r24, 0xFB	; 251
     f4a:	85 bd       	out	0x25, r24	; 37
						CLR_BIT(TCCR2_R,1);
     f4c:	85 b5       	in	r24, 0x25	; 37
     f4e:	8d 7f       	andi	r24, 0xFD	; 253
     f50:	85 bd       	out	0x25, r24	; 37
						CLR_BIT(TCCR2_R,0);
     f52:	85 b5       	in	r24, 0x25	; 37
     f54:	8e 7f       	andi	r24, 0xFE	; 254
     f56:	85 bd       	out	0x25, r24	; 37
     f58:	a7 c0       	rjmp	.+334    	; 0x10a8 <Timer_Init+0x71a>
					}else if(astrTimerConfigParameters[i].enuTimerClock==NO_PRESCALER)
     f5a:	21 30       	cpi	r18, 0x01	; 1
     f5c:	b1 f4       	brne	.+44     	; 0xf8a <Timer_Init+0x5fc>
					{
						CLR_BIT(TCCR2_R,2);
     f5e:	85 b5       	in	r24, 0x25	; 37
     f60:	8b 7f       	andi	r24, 0xFB	; 251
     f62:	85 bd       	out	0x25, r24	; 37
						CLR_BIT(TCCR2_R,1);
     f64:	85 b5       	in	r24, 0x25	; 37
     f66:	8d 7f       	andi	r24, 0xFD	; 253
     f68:	85 bd       	out	0x25, r24	; 37
						SET_BIT(TCCR2_R,0);
     f6a:	85 b5       	in	r24, 0x25	; 37
     f6c:	81 60       	ori	r24, 0x01	; 1
     f6e:	85 bd       	out	0x25, r24	; 37
						prescaler=1;
     f70:	81 e0       	ldi	r24, 0x01	; 1
     f72:	90 e0       	ldi	r25, 0x00	; 0
     f74:	a0 e0       	ldi	r26, 0x00	; 0
     f76:	b0 e0       	ldi	r27, 0x00	; 0
     f78:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
     f7c:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
     f80:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
     f84:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
     f88:	8f c0       	rjmp	.+286    	; 0x10a8 <Timer_Init+0x71a>
					}else if(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_8)
     f8a:	22 30       	cpi	r18, 0x02	; 2
     f8c:	b1 f4       	brne	.+44     	; 0xfba <Timer_Init+0x62c>
					{
						CLR_BIT(TCCR2_R,2);
     f8e:	85 b5       	in	r24, 0x25	; 37
     f90:	8b 7f       	andi	r24, 0xFB	; 251
     f92:	85 bd       	out	0x25, r24	; 37
						SET_BIT(TCCR2_R,1);
     f94:	85 b5       	in	r24, 0x25	; 37
     f96:	82 60       	ori	r24, 0x02	; 2
     f98:	85 bd       	out	0x25, r24	; 37
						CLR_BIT(TCCR2_R,0);
     f9a:	85 b5       	in	r24, 0x25	; 37
     f9c:	8e 7f       	andi	r24, 0xFE	; 254
     f9e:	85 bd       	out	0x25, r24	; 37
						prescaler=8;
     fa0:	88 e0       	ldi	r24, 0x08	; 8
     fa2:	90 e0       	ldi	r25, 0x00	; 0
     fa4:	a0 e0       	ldi	r26, 0x00	; 0
     fa6:	b0 e0       	ldi	r27, 0x00	; 0
     fa8:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
     fac:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
     fb0:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
     fb4:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
     fb8:	77 c0       	rjmp	.+238    	; 0x10a8 <Timer_Init+0x71a>
					}else if(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_32)
     fba:	28 30       	cpi	r18, 0x08	; 8
     fbc:	b1 f4       	brne	.+44     	; 0xfea <Timer_Init+0x65c>
					{
						CLR_BIT(TCCR2_R,2);
     fbe:	85 b5       	in	r24, 0x25	; 37
     fc0:	8b 7f       	andi	r24, 0xFB	; 251
     fc2:	85 bd       	out	0x25, r24	; 37
						SET_BIT(TCCR2_R,1);
     fc4:	85 b5       	in	r24, 0x25	; 37
     fc6:	82 60       	ori	r24, 0x02	; 2
     fc8:	85 bd       	out	0x25, r24	; 37
						SET_BIT(TCCR2_R,0);
     fca:	85 b5       	in	r24, 0x25	; 37
     fcc:	81 60       	ori	r24, 0x01	; 1
     fce:	85 bd       	out	0x25, r24	; 37
						prescaler=32;
     fd0:	80 e2       	ldi	r24, 0x20	; 32
     fd2:	90 e0       	ldi	r25, 0x00	; 0
     fd4:	a0 e0       	ldi	r26, 0x00	; 0
     fd6:	b0 e0       	ldi	r27, 0x00	; 0
     fd8:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
     fdc:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
     fe0:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
     fe4:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
     fe8:	5f c0       	rjmp	.+190    	; 0x10a8 <Timer_Init+0x71a>
					}else if(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_64)
     fea:	23 30       	cpi	r18, 0x03	; 3
     fec:	b1 f4       	brne	.+44     	; 0x101a <Timer_Init+0x68c>
					{
						SET_BIT(TCCR2_R,2);
     fee:	85 b5       	in	r24, 0x25	; 37
     ff0:	84 60       	ori	r24, 0x04	; 4
     ff2:	85 bd       	out	0x25, r24	; 37
						CLR_BIT(TCCR2_R,1);
     ff4:	85 b5       	in	r24, 0x25	; 37
     ff6:	8d 7f       	andi	r24, 0xFD	; 253
     ff8:	85 bd       	out	0x25, r24	; 37
						CLR_BIT(TCCR2_R,0);
     ffa:	85 b5       	in	r24, 0x25	; 37
     ffc:	8e 7f       	andi	r24, 0xFE	; 254
     ffe:	85 bd       	out	0x25, r24	; 37
						prescaler=64;
    1000:	80 e4       	ldi	r24, 0x40	; 64
    1002:	90 e0       	ldi	r25, 0x00	; 0
    1004:	a0 e0       	ldi	r26, 0x00	; 0
    1006:	b0 e0       	ldi	r27, 0x00	; 0
    1008:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
    100c:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
    1010:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
    1014:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
    1018:	47 c0       	rjmp	.+142    	; 0x10a8 <Timer_Init+0x71a>
					}else if(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_128)
    101a:	29 30       	cpi	r18, 0x09	; 9
    101c:	b1 f4       	brne	.+44     	; 0x104a <Timer_Init+0x6bc>
					{
						SET_BIT(TCCR2_R,2);
    101e:	85 b5       	in	r24, 0x25	; 37
    1020:	84 60       	ori	r24, 0x04	; 4
    1022:	85 bd       	out	0x25, r24	; 37
						CLR_BIT(TCCR2_R,1);
    1024:	85 b5       	in	r24, 0x25	; 37
    1026:	8d 7f       	andi	r24, 0xFD	; 253
    1028:	85 bd       	out	0x25, r24	; 37
						SET_BIT(TCCR2_R,0);
    102a:	85 b5       	in	r24, 0x25	; 37
    102c:	81 60       	ori	r24, 0x01	; 1
    102e:	85 bd       	out	0x25, r24	; 37
						prescaler=128;
    1030:	80 e8       	ldi	r24, 0x80	; 128
    1032:	90 e0       	ldi	r25, 0x00	; 0
    1034:	a0 e0       	ldi	r26, 0x00	; 0
    1036:	b0 e0       	ldi	r27, 0x00	; 0
    1038:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
    103c:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
    1040:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
    1044:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
    1048:	2f c0       	rjmp	.+94     	; 0x10a8 <Timer_Init+0x71a>
					}else if(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_256)
    104a:	24 30       	cpi	r18, 0x04	; 4
    104c:	b1 f4       	brne	.+44     	; 0x107a <Timer_Init+0x6ec>
					{
						SET_BIT(TCCR2_R,2);
    104e:	85 b5       	in	r24, 0x25	; 37
    1050:	84 60       	ori	r24, 0x04	; 4
    1052:	85 bd       	out	0x25, r24	; 37
						SET_BIT(TCCR2_R,1);
    1054:	85 b5       	in	r24, 0x25	; 37
    1056:	82 60       	ori	r24, 0x02	; 2
    1058:	85 bd       	out	0x25, r24	; 37
						CLR_BIT(TCCR2_R,0);
    105a:	85 b5       	in	r24, 0x25	; 37
    105c:	8e 7f       	andi	r24, 0xFE	; 254
    105e:	85 bd       	out	0x25, r24	; 37
						prescaler=256;
    1060:	80 e0       	ldi	r24, 0x00	; 0
    1062:	91 e0       	ldi	r25, 0x01	; 1
    1064:	a0 e0       	ldi	r26, 0x00	; 0
    1066:	b0 e0       	ldi	r27, 0x00	; 0
    1068:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
    106c:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
    1070:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
    1074:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
    1078:	17 c0       	rjmp	.+46     	; 0x10a8 <Timer_Init+0x71a>
					}else if(astrTimerConfigParameters[i].enuTimerClock==PRESCALER_1024)
    107a:	25 30       	cpi	r18, 0x05	; 5
    107c:	a9 f4       	brne	.+42     	; 0x10a8 <Timer_Init+0x71a>
					{
						SET_BIT(TCCR2_R,2);
    107e:	85 b5       	in	r24, 0x25	; 37
    1080:	84 60       	ori	r24, 0x04	; 4
    1082:	85 bd       	out	0x25, r24	; 37
						SET_BIT(TCCR2_R,1);
    1084:	85 b5       	in	r24, 0x25	; 37
    1086:	82 60       	ori	r24, 0x02	; 2
    1088:	85 bd       	out	0x25, r24	; 37
						SET_BIT(TCCR2_R,0);
    108a:	85 b5       	in	r24, 0x25	; 37
    108c:	81 60       	ori	r24, 0x01	; 1
    108e:	85 bd       	out	0x25, r24	; 37
						prescaler=1024;
    1090:	80 e0       	ldi	r24, 0x00	; 0
    1092:	94 e0       	ldi	r25, 0x04	; 4
    1094:	a0 e0       	ldi	r26, 0x00	; 0
    1096:	b0 e0       	ldi	r27, 0x00	; 0
    1098:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <prescaler>
    109c:	90 93 9b 00 	sts	0x009B, r25	; 0x80009b <prescaler+0x1>
    10a0:	a0 93 9c 00 	sts	0x009C, r26	; 0x80009c <prescaler+0x2>
    10a4:	b0 93 9d 00 	sts	0x009D, r27	; 0x80009d <prescaler+0x3>
					}

			if(astrTimerConfigParameters[i].enuTimerMode==NORMAL)
    10a8:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <astrTimerConfigParameters+0x1>
    10ac:	81 11       	cpse	r24, r1
    10ae:	0f c0       	rjmp	.+30     	; 0x10ce <Timer_Init+0x740>
			{
				
				if(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)
    10b0:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <astrTimerConfigParameters+0x3>
    10b4:	81 11       	cpse	r24, r1
    10b6:	05 c0       	rjmp	.+10     	; 0x10c2 <Timer_Init+0x734>
				{
					CLR_BIT(TIMSK_R,6);
    10b8:	89 b7       	in	r24, 0x39	; 57
    10ba:	8f 7b       	andi	r24, 0xBF	; 191
    10bc:	89 bf       	out	0x39, r24	; 57
		((astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_EN))&&
		((astrTimerConfigParameters[i].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Set_OC0))&&
		((astrTimerConfigParameters[i].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Set_OC1))&&
		((astrTimerConfigParameters[i].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Set_OC2)))
		{
			Error=E_OK;
    10be:	81 e0       	ldi	r24, 0x01	; 1
    10c0:	08 95       	ret
				if(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)
				{
					CLR_BIT(TIMSK_R,6);
				}else
				{
					sei();
    10c2:	78 94       	sei
					SET_BIT(TIMSK_R,6);
    10c4:	89 b7       	in	r24, 0x39	; 57
    10c6:	80 64       	ori	r24, 0x40	; 64
    10c8:	89 bf       	out	0x39, r24	; 57
		((astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_EN))&&
		((astrTimerConfigParameters[i].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Set_OC0))&&
		((astrTimerConfigParameters[i].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Set_OC1))&&
		((astrTimerConfigParameters[i].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Set_OC2)))
		{
			Error=E_OK;
    10ca:	81 e0       	ldi	r24, 0x01	; 1
    10cc:	08 95       	ret
				}else
				{
					sei();
					SET_BIT(TIMSK_R,6);
				}
			}else if(astrTimerConfigParameters[i].enuTimerMode==CTC)
    10ce:	81 30       	cpi	r24, 0x01	; 1
    10d0:	09 f0       	breq	.+2      	; 0x10d4 <Timer_Init+0x746>
    10d2:	55 c0       	rjmp	.+170    	; 0x117e <Timer_Init+0x7f0>
			{
				SET_BIT(TCCR2_R,3);
    10d4:	85 b5       	in	r24, 0x25	; 37
    10d6:	88 60       	ori	r24, 0x08	; 8
    10d8:	85 bd       	out	0x25, r24	; 37
				
				if(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)
    10da:	80 91 7b 00 	lds	r24, 0x007B	; 0x80007b <astrTimerConfigParameters+0x3>
    10de:	81 11       	cpse	r24, r1
    10e0:	04 c0       	rjmp	.+8      	; 0x10ea <Timer_Init+0x75c>
				{
					CLR_BIT(TIMSK_R,7);
    10e2:	89 b7       	in	r24, 0x39	; 57
    10e4:	8f 77       	andi	r24, 0x7F	; 127
    10e6:	89 bf       	out	0x39, r24	; 57
    10e8:	04 c0       	rjmp	.+8      	; 0x10f2 <Timer_Init+0x764>
				}else
				{
					sei();
    10ea:	78 94       	sei
					SET_BIT(TIMSK_R,7);
    10ec:	89 b7       	in	r24, 0x39	; 57
    10ee:	80 68       	ori	r24, 0x80	; 128
    10f0:	89 bf       	out	0x39, r24	; 57
				}	
				
				if(astrTimerConfigParameters[i].enuCTCMode2==OC2_Disconnected)
    10f2:	80 91 7e 00 	lds	r24, 0x007E	; 0x80007e <astrTimerConfigParameters+0x6>
    10f6:	81 11       	cpse	r24, r1
    10f8:	08 c0       	rjmp	.+16     	; 0x110a <Timer_Init+0x77c>
				{
					CLR_BIT(TCCR2_R,5);
    10fa:	85 b5       	in	r24, 0x25	; 37
    10fc:	8f 7d       	andi	r24, 0xDF	; 223
    10fe:	85 bd       	out	0x25, r24	; 37
					CLR_BIT(TCCR2_R,4);
    1100:	85 b5       	in	r24, 0x25	; 37
    1102:	8f 7e       	andi	r24, 0xEF	; 239
    1104:	85 bd       	out	0x25, r24	; 37
		((astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_EN))&&
		((astrTimerConfigParameters[i].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Set_OC0))&&
		((astrTimerConfigParameters[i].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Set_OC1))&&
		((astrTimerConfigParameters[i].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Set_OC2)))
		{
			Error=E_OK;
    1106:	81 e0       	ldi	r24, 0x01	; 1
    1108:	08 95       	ret
				
				if(astrTimerConfigParameters[i].enuCTCMode2==OC2_Disconnected)
				{
					CLR_BIT(TCCR2_R,5);
					CLR_BIT(TCCR2_R,4);
				}else if(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC2)
    110a:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <astrTimerConfigParameters+0x4>
    110e:	81 30       	cpi	r24, 0x01	; 1
    1110:	51 f4       	brne	.+20     	; 0x1126 <Timer_Init+0x798>
				{
					CLR_BIT(TCCR2_R,5);
    1112:	85 b5       	in	r24, 0x25	; 37
    1114:	8f 7d       	andi	r24, 0xDF	; 223
    1116:	85 bd       	out	0x25, r24	; 37
					SET_BIT(TCCR2_R,4);
    1118:	85 b5       	in	r24, 0x25	; 37
    111a:	80 61       	ori	r24, 0x10	; 16
    111c:	85 bd       	out	0x25, r24	; 37
					DIO_Init();
    111e:	0e 94 89 00 	call	0x112	; 0x112 <DIO_Init>
		((astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_EN))&&
		((astrTimerConfigParameters[i].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Set_OC0))&&
		((astrTimerConfigParameters[i].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Set_OC1))&&
		((astrTimerConfigParameters[i].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Set_OC2)))
		{
			Error=E_OK;
    1122:	81 e0       	ldi	r24, 0x01	; 1
    1124:	08 95       	ret
				}else if(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC2)
				{
					CLR_BIT(TCCR2_R,5);
					SET_BIT(TCCR2_R,4);
					DIO_Init();
				}else if(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC2)
    1126:	82 30       	cpi	r24, 0x02	; 2
    1128:	51 f4       	brne	.+20     	; 0x113e <Timer_Init+0x7b0>
				{
					SET_BIT(TCCR2_R,5);
    112a:	85 b5       	in	r24, 0x25	; 37
    112c:	80 62       	ori	r24, 0x20	; 32
    112e:	85 bd       	out	0x25, r24	; 37
					CLR_BIT(TCCR2_R,4);
    1130:	85 b5       	in	r24, 0x25	; 37
    1132:	8f 7e       	andi	r24, 0xEF	; 239
    1134:	85 bd       	out	0x25, r24	; 37
					DIO_Init();
    1136:	0e 94 89 00 	call	0x112	; 0x112 <DIO_Init>
		((astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_EN))&&
		((astrTimerConfigParameters[i].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Set_OC0))&&
		((astrTimerConfigParameters[i].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Set_OC1))&&
		((astrTimerConfigParameters[i].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Set_OC2)))
		{
			Error=E_OK;
    113a:	81 e0       	ldi	r24, 0x01	; 1
    113c:	08 95       	ret
				}else if(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC2)
				{
					SET_BIT(TCCR2_R,5);
					CLR_BIT(TCCR2_R,4);
					DIO_Init();
				}else if(astrTimerConfigParameters[i].enuCTCMode0==Set_OC2)
    113e:	83 30       	cpi	r24, 0x03	; 3
    1140:	01 f5       	brne	.+64     	; 0x1182 <Timer_Init+0x7f4>
				{
					SET_BIT(TCCR2_R,5);
    1142:	85 b5       	in	r24, 0x25	; 37
    1144:	80 62       	ori	r24, 0x20	; 32
    1146:	85 bd       	out	0x25, r24	; 37
					SET_BIT(TCCR2_R,4);
    1148:	85 b5       	in	r24, 0x25	; 37
    114a:	80 61       	ori	r24, 0x10	; 16
    114c:	85 bd       	out	0x25, r24	; 37
					DIO_Init();
    114e:	0e 94 89 00 	call	0x112	; 0x112 <DIO_Init>
		((astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[i].enuTimerIntEn==TIMER_INT_EN))&&
		((astrTimerConfigParameters[i].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[i].enuCTCMode0==Set_OC0))&&
		((astrTimerConfigParameters[i].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[i].enuCTCMode1==Set_OC1))&&
		((astrTimerConfigParameters[i].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[i].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[i].enuCTCMode2==Set_OC2)))
		{
			Error=E_OK;
    1152:	81 e0       	ldi	r24, 0x01	; 1
    1154:	08 95       	ret
    1156:	80 e0       	ldi	r24, 0x00	; 0
    1158:	08 95       	ret
    115a:	80 e0       	ldi	r24, 0x00	; 0
    115c:	08 95       	ret
    115e:	80 e0       	ldi	r24, 0x00	; 0
    1160:	08 95       	ret
    1162:	80 e0       	ldi	r24, 0x00	; 0
    1164:	08 95       	ret
    1166:	80 e0       	ldi	r24, 0x00	; 0
    1168:	08 95       	ret
    116a:	80 e0       	ldi	r24, 0x00	; 0
    116c:	08 95       	ret
    116e:	80 e0       	ldi	r24, 0x00	; 0
    1170:	08 95       	ret
    1172:	81 e0       	ldi	r24, 0x01	; 1
    1174:	08 95       	ret
    1176:	81 e0       	ldi	r24, 0x01	; 1
    1178:	08 95       	ret
    117a:	81 e0       	ldi	r24, 0x01	; 1
    117c:	08 95       	ret
    117e:	81 e0       	ldi	r24, 0x01	; 1
    1180:	08 95       	ret
    1182:	81 e0       	ldi	r24, 0x01	; 1
			}
				}
				}
				}
	return Error;
}
    1184:	08 95       	ret

00001186 <Timer_Start>:

enuErrorStatus_t Timer_Start(uint8_t u8GroupId, uint64_t u32TimerValueUS, void(*pfCallback)(void))
{
    1186:	2f 92       	push	r2
    1188:	3f 92       	push	r3
    118a:	4f 92       	push	r4
    118c:	5f 92       	push	r5
    118e:	6f 92       	push	r6
    1190:	7f 92       	push	r7
    1192:	8f 92       	push	r8
    1194:	9f 92       	push	r9
    1196:	af 92       	push	r10
    1198:	bf 92       	push	r11
    119a:	cf 92       	push	r12
    119c:	df 92       	push	r13
    119e:	ef 92       	push	r14
    11a0:	ff 92       	push	r15
    11a2:	0f 93       	push	r16
    11a4:	1f 93       	push	r17
    11a6:	cf 93       	push	r28
    11a8:	df 93       	push	r29
    11aa:	cd b7       	in	r28, 0x3d	; 61
    11ac:	de b7       	in	r29, 0x3e	; 62
    11ae:	64 97       	sbiw	r28, 0x14	; 20
    11b0:	0f b6       	in	r0, 0x3f	; 63
    11b2:	f8 94       	cli
    11b4:	de bf       	out	0x3e, r29	; 62
    11b6:	0f be       	out	0x3f, r0	; 63
    11b8:	cd bf       	out	0x3d, r28	; 61
	enuErrorStatus_t Error = E_ERROR;
			if(((astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER0)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER1)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER2))&&
    11ba:	e8 2f       	mov	r30, r24
    11bc:	f0 e0       	ldi	r31, 0x00	; 0
    11be:	97 e0       	ldi	r25, 0x07	; 7
    11c0:	89 9f       	mul	r24, r25
    11c2:	d0 01       	movw	r26, r0
    11c4:	11 24       	eor	r1, r1
    11c6:	a8 58       	subi	r26, 0x88	; 136
    11c8:	bf 4f       	sbci	r27, 0xFF	; 255
    11ca:	ac 90       	ld	r10, X
    11cc:	ab 8a       	std	Y+19, r10	; 0x13
    11ce:	9a 2d       	mov	r25, r10
    11d0:	93 30       	cpi	r25, 0x03	; 3
    11d2:	08 f0       	brcs	.+2      	; 0x11d6 <Timer_Start+0x50>
    11d4:	15 c2       	rjmp	.+1066   	; 0x1600 <Timer_Start+0x47a>
			((astrTimerConfigParameters[u8GroupId].enuTimerMode==NORMAL)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==CTC)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==FAST_PWM)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==PC_PWM))&&
    11d6:	df 01       	movw	r26, r30
    11d8:	aa 0f       	add	r26, r26
    11da:	bb 1f       	adc	r27, r27
    11dc:	aa 0f       	add	r26, r26
    11de:	bb 1f       	adc	r27, r27
    11e0:	aa 0f       	add	r26, r26
    11e2:	bb 1f       	adc	r27, r27
    11e4:	ae 1b       	sub	r26, r30
    11e6:	bf 0b       	sbc	r27, r31
    11e8:	a8 58       	subi	r26, 0x88	; 136
    11ea:	bf 4f       	sbci	r27, 0xFF	; 255
    11ec:	11 96       	adiw	r26, 0x01	; 1
    11ee:	ac 90       	ld	r10, X
    11f0:	ac 8a       	std	Y+20, r10	; 0x14
}

enuErrorStatus_t Timer_Start(uint8_t u8GroupId, uint64_t u32TimerValueUS, void(*pfCallback)(void))
{
	enuErrorStatus_t Error = E_ERROR;
			if(((astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER0)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER1)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER2))&&
    11f2:	9a 2d       	mov	r25, r10
    11f4:	94 30       	cpi	r25, 0x04	; 4
    11f6:	08 f0       	brcs	.+2      	; 0x11fa <Timer_Start+0x74>
    11f8:	05 c2       	rjmp	.+1034   	; 0x1604 <Timer_Start+0x47e>
			((astrTimerConfigParameters[u8GroupId].enuTimerMode==NORMAL)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==CTC)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==FAST_PWM)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==PC_PWM))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_CLOCK)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_PRESCALER)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_8)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_64)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_256)||
    11fa:	df 01       	movw	r26, r30
    11fc:	aa 0f       	add	r26, r26
    11fe:	bb 1f       	adc	r27, r27
    1200:	aa 0f       	add	r26, r26
    1202:	bb 1f       	adc	r27, r27
    1204:	aa 0f       	add	r26, r26
    1206:	bb 1f       	adc	r27, r27
    1208:	ae 1b       	sub	r26, r30
    120a:	bf 0b       	sbc	r27, r31
    120c:	a8 58       	subi	r26, 0x88	; 136
    120e:	bf 4f       	sbci	r27, 0xFF	; 255
    1210:	12 96       	adiw	r26, 0x02	; 2
    1212:	9c 91       	ld	r25, X

enuErrorStatus_t Timer_Start(uint8_t u8GroupId, uint64_t u32TimerValueUS, void(*pfCallback)(void))
{
	enuErrorStatus_t Error = E_ERROR;
			if(((astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER0)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER1)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER2))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerMode==NORMAL)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==CTC)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==FAST_PWM)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==PC_PWM))&&
    1214:	98 30       	cpi	r25, 0x08	; 8
    1216:	28 f0       	brcs	.+10     	; 0x1222 <Timer_Start+0x9c>
			((astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_CLOCK)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_PRESCALER)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_8)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_64)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_256)||
			(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_1024)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==32)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_128)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_FALL_EDGE)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_RISE_EDGE))&&
    1218:	90 32       	cpi	r25, 0x20	; 32
    121a:	19 f0       	breq	.+6      	; 0x1222 <Timer_Start+0x9c>
    121c:	99 30       	cpi	r25, 0x09	; 9
    121e:	09 f0       	breq	.+2      	; 0x1222 <Timer_Start+0x9c>
    1220:	f3 c1       	rjmp	.+998    	; 0x1608 <Timer_Start+0x482>
			((astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_EN))&&
    1222:	df 01       	movw	r26, r30
    1224:	aa 0f       	add	r26, r26
    1226:	bb 1f       	adc	r27, r27
    1228:	aa 0f       	add	r26, r26
    122a:	bb 1f       	adc	r27, r27
    122c:	aa 0f       	add	r26, r26
    122e:	bb 1f       	adc	r27, r27
    1230:	ae 1b       	sub	r26, r30
    1232:	bf 0b       	sbc	r27, r31
    1234:	a8 58       	subi	r26, 0x88	; 136
    1236:	bf 4f       	sbci	r27, 0xFF	; 255
{
	enuErrorStatus_t Error = E_ERROR;
			if(((astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER0)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER1)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER2))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerMode==NORMAL)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==CTC)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==FAST_PWM)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==PC_PWM))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_CLOCK)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_PRESCALER)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_8)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_64)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_256)||
			(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_1024)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==32)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_128)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_FALL_EDGE)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_RISE_EDGE))&&
    1238:	13 96       	adiw	r26, 0x03	; 3
    123a:	9c 91       	ld	r25, X
    123c:	92 30       	cpi	r25, 0x02	; 2
    123e:	08 f0       	brcs	.+2      	; 0x1242 <Timer_Start+0xbc>
    1240:	e5 c1       	rjmp	.+970    	; 0x160c <Timer_Start+0x486>
			((astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_EN))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Set_OC0))&&
    1242:	df 01       	movw	r26, r30
    1244:	aa 0f       	add	r26, r26
    1246:	bb 1f       	adc	r27, r27
    1248:	aa 0f       	add	r26, r26
    124a:	bb 1f       	adc	r27, r27
    124c:	aa 0f       	add	r26, r26
    124e:	bb 1f       	adc	r27, r27
    1250:	ae 1b       	sub	r26, r30
    1252:	bf 0b       	sbc	r27, r31
    1254:	a8 58       	subi	r26, 0x88	; 136
    1256:	bf 4f       	sbci	r27, 0xFF	; 255
	enuErrorStatus_t Error = E_ERROR;
			if(((astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER0)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER1)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER2))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerMode==NORMAL)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==CTC)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==FAST_PWM)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==PC_PWM))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_CLOCK)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_PRESCALER)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_8)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_64)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_256)||
			(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_1024)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==32)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_128)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_FALL_EDGE)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_RISE_EDGE))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_EN))&&
    1258:	14 96       	adiw	r26, 0x04	; 4
    125a:	9c 91       	ld	r25, X
    125c:	94 30       	cpi	r25, 0x04	; 4
    125e:	08 f0       	brcs	.+2      	; 0x1262 <Timer_Start+0xdc>
    1260:	d7 c1       	rjmp	.+942    	; 0x1610 <Timer_Start+0x48a>
			((astrTimerConfigParameters[u8GroupId].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Set_OC0))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Set_OC1))&&
    1262:	df 01       	movw	r26, r30
    1264:	aa 0f       	add	r26, r26
    1266:	bb 1f       	adc	r27, r27
    1268:	aa 0f       	add	r26, r26
    126a:	bb 1f       	adc	r27, r27
    126c:	aa 0f       	add	r26, r26
    126e:	bb 1f       	adc	r27, r27
    1270:	ae 1b       	sub	r26, r30
    1272:	bf 0b       	sbc	r27, r31
    1274:	a8 58       	subi	r26, 0x88	; 136
    1276:	bf 4f       	sbci	r27, 0xFF	; 255
			if(((astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER0)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER1)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER2))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerMode==NORMAL)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==CTC)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==FAST_PWM)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==PC_PWM))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_CLOCK)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_PRESCALER)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_8)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_64)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_256)||
			(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_1024)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==32)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_128)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_FALL_EDGE)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_RISE_EDGE))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_EN))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Set_OC0))&&
    1278:	15 96       	adiw	r26, 0x05	; 5
    127a:	9c 91       	ld	r25, X
    127c:	94 30       	cpi	r25, 0x04	; 4
    127e:	08 f0       	brcs	.+2      	; 0x1282 <Timer_Start+0xfc>
    1280:	c9 c1       	rjmp	.+914    	; 0x1614 <Timer_Start+0x48e>
			((astrTimerConfigParameters[u8GroupId].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Set_OC1))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Set_OC2))&&
    1282:	df 01       	movw	r26, r30
    1284:	aa 0f       	add	r26, r26
    1286:	bb 1f       	adc	r27, r27
    1288:	aa 0f       	add	r26, r26
    128a:	bb 1f       	adc	r27, r27
    128c:	aa 0f       	add	r26, r26
    128e:	bb 1f       	adc	r27, r27
    1290:	5d 01       	movw	r10, r26
    1292:	ae 1a       	sub	r10, r30
    1294:	bf 0a       	sbc	r11, r31
    1296:	f5 01       	movw	r30, r10
    1298:	e8 58       	subi	r30, 0x88	; 136
    129a:	ff 4f       	sbci	r31, 0xFF	; 255
			((astrTimerConfigParameters[u8GroupId].enuTimerMode==NORMAL)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==CTC)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==FAST_PWM)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==PC_PWM))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_CLOCK)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_PRESCALER)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_8)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_64)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_256)||
			(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_1024)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==32)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_128)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_FALL_EDGE)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_RISE_EDGE))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_EN))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Set_OC0))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Set_OC1))&&
    129c:	96 81       	ldd	r25, Z+6	; 0x06
    129e:	94 30       	cpi	r25, 0x04	; 4
    12a0:	08 f0       	brcs	.+2      	; 0x12a4 <Timer_Start+0x11e>
    12a2:	ba c1       	rjmp	.+884    	; 0x1618 <Timer_Start+0x492>
			((astrTimerConfigParameters[u8GroupId].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Set_OC2))&&
    12a4:	81 11       	cpse	r24, r1
    12a6:	ba c1       	rjmp	.+884    	; 0x161c <Timer_Start+0x496>
    12a8:	fa 8a       	std	Y+18, r15	; 0x12
    12aa:	e9 8a       	std	Y+17, r14	; 0x11
    12ac:	7c 87       	std	Y+12, r23	; 0x0c
    12ae:	6b 87       	std	Y+11, r22	; 0x0b
    12b0:	5a 87       	std	Y+10, r21	; 0x0a
    12b2:	49 87       	std	Y+9, r20	; 0x09
    12b4:	93 2e       	mov	r9, r19
    12b6:	82 2e       	mov	r8, r18
    12b8:	31 2e       	mov	r3, r17
    12ba:	20 2e       	mov	r2, r16
			(u8GroupId<TM_GROUPS_NO))
			{Error=E_OK;
	f32_t Counts_needed;
	f32_t T_overflow;
	T_des=u32TimerValueUS;
    12bc:	00 93 96 00 	sts	0x0096, r16	; 0x800096 <T_des>
    12c0:	10 93 97 00 	sts	0x0097, r17	; 0x800097 <T_des+0x1>
    12c4:	80 92 98 00 	sts	0x0098, r8	; 0x800098 <T_des+0x2>
    12c8:	90 92 99 00 	sts	0x0099, r9	; 0x800099 <T_des+0x3>
	f32_t ARR=(F_CPU*u32TimerValueUS)/(prescaler*1000000);
    12cc:	40 90 9a 00 	lds	r4, 0x009A	; 0x80009a <prescaler>
    12d0:	50 90 9b 00 	lds	r5, 0x009B	; 0x80009b <prescaler+0x1>
    12d4:	60 90 9c 00 	lds	r6, 0x009C	; 0x80009c <prescaler+0x2>
    12d8:	70 90 9d 00 	lds	r7, 0x009D	; 0x80009d <prescaler+0x3>
    12dc:	a3 01       	movw	r20, r6
    12de:	92 01       	movw	r18, r4
    12e0:	60 e4       	ldi	r22, 0x40	; 64
    12e2:	72 e4       	ldi	r23, 0x42	; 66
    12e4:	8f e0       	ldi	r24, 0x0F	; 15
    12e6:	90 e0       	ldi	r25, 0x00	; 0
    12e8:	0e 94 cb 11 	call	0x2396	; 0x2396 <__mulsi3>
    12ec:	6d 87       	std	Y+13, r22	; 0x0d
    12ee:	7e 87       	std	Y+14, r23	; 0x0e
    12f0:	8f 87       	std	Y+15, r24	; 0x0f
    12f2:	98 8b       	std	Y+16, r25	; 0x10
    12f4:	a1 2c       	mov	r10, r1
    12f6:	0f 2e       	mov	r0, r31
    12f8:	f2 e1       	ldi	r31, 0x12	; 18
    12fa:	bf 2e       	mov	r11, r31
    12fc:	f0 2d       	mov	r31, r0
    12fe:	0f 2e       	mov	r0, r31
    1300:	fa e7       	ldi	r31, 0x7A	; 122
    1302:	cf 2e       	mov	r12, r31
    1304:	f0 2d       	mov	r31, r0
    1306:	d1 2c       	mov	r13, r1
    1308:	e1 2c       	mov	r14, r1
    130a:	f1 2c       	mov	r15, r1
    130c:	00 e0       	ldi	r16, 0x00	; 0
    130e:	10 e0       	ldi	r17, 0x00	; 0
    1310:	22 2d       	mov	r18, r2
    1312:	33 2d       	mov	r19, r3
    1314:	48 2d       	mov	r20, r8
    1316:	59 2d       	mov	r21, r9
    1318:	69 85       	ldd	r22, Y+9	; 0x09
    131a:	7a 85       	ldd	r23, Y+10	; 0x0a
    131c:	8b 85       	ldd	r24, Y+11	; 0x0b
    131e:	9c 85       	ldd	r25, Y+12	; 0x0c
    1320:	0e 94 0e 12 	call	0x241c	; 0x241c <__muldi3>
    1324:	cd 84       	ldd	r12, Y+13	; 0x0d
    1326:	de 84       	ldd	r13, Y+14	; 0x0e
    1328:	ef 84       	ldd	r14, Y+15	; 0x0f
    132a:	f8 88       	ldd	r15, Y+16	; 0x10
    132c:	56 01       	movw	r10, r12
    132e:	67 01       	movw	r12, r14
    1330:	e1 2c       	mov	r14, r1
    1332:	f1 2c       	mov	r15, r1
    1334:	87 01       	movw	r16, r14
    1336:	a9 82       	std	Y+1, r10	; 0x01
    1338:	ba 82       	std	Y+2, r11	; 0x02
    133a:	cb 82       	std	Y+3, r12	; 0x03
    133c:	dc 82       	std	Y+4, r13	; 0x04
    133e:	ed 82       	std	Y+5, r14	; 0x05
    1340:	fe 82       	std	Y+6, r15	; 0x06
    1342:	0f 83       	std	Y+7, r16	; 0x07
    1344:	18 87       	std	Y+8, r17	; 0x08
    1346:	e1 2c       	mov	r14, r1
    1348:	f1 2c       	mov	r15, r1
    134a:	00 e0       	ldi	r16, 0x00	; 0
    134c:	10 e0       	ldi	r17, 0x00	; 0
    134e:	0e 94 69 12 	call	0x24d2	; 0x24d2 <__udivdi3>
    1352:	0e 94 a6 10 	call	0x214c	; 0x214c <__floatundisf>
    1356:	6b 01       	movw	r12, r22
    1358:	7c 01       	movw	r14, r24
	ARR2=ARR;
    135a:	60 93 9e 00 	sts	0x009E, r22	; 0x80009e <ARR2>
    135e:	70 93 9f 00 	sts	0x009F, r23	; 0x80009f <ARR2+0x1>
    1362:	80 93 a0 00 	sts	0x00A0, r24	; 0x8000a0 <ARR2+0x2>
    1366:	90 93 a1 00 	sts	0x00A1, r25	; 0x8000a1 <ARR2+0x3>
	if(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER0)
    136a:	0b 89       	ldd	r16, Y+19	; 0x13
    136c:	01 11       	cpse	r16, r1
    136e:	7f c0       	rjmp	.+254    	; 0x146e <Timer_Start+0x2e8>
	{
		if(astrTimerConfigParameters[u8GroupId].enuTimerMode==NORMAL)
    1370:	1c 89       	ldd	r17, Y+20	; 0x14
    1372:	11 11       	cpse	r17, r1
    1374:	50 c0       	rjmp	.+160    	; 0x1416 <Timer_Start+0x290>
		{
			if(ARR2>=256)
    1376:	20 e0       	ldi	r18, 0x00	; 0
    1378:	30 e0       	ldi	r19, 0x00	; 0
    137a:	40 e8       	ldi	r20, 0x80	; 128
    137c:	53 e4       	ldi	r21, 0x43	; 67
    137e:	0e 94 35 11 	call	0x226a	; 0x226a <__gesf2>
    1382:	88 23       	and	r24, r24
    1384:	9c f0       	brlt	.+38     	; 0x13ac <Timer_Start+0x226>
			{
				count=ARR2/256;
    1386:	20 e0       	ldi	r18, 0x00	; 0
    1388:	30 e0       	ldi	r19, 0x00	; 0
    138a:	40 e8       	ldi	r20, 0x80	; 128
    138c:	5b e3       	ldi	r21, 0x3B	; 59
    138e:	c7 01       	movw	r24, r14
    1390:	b6 01       	movw	r22, r12
    1392:	0e 94 3a 11 	call	0x2274	; 0x2274 <__mulsf3>
    1396:	0e 94 3a 10 	call	0x2074	; 0x2074 <__fixunssfsi>
    139a:	60 93 a2 00 	sts	0x00A2, r22	; 0x8000a2 <count>
    139e:	70 93 a3 00 	sts	0x00A3, r23	; 0x8000a3 <count+0x1>
    13a2:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <count+0x2>
    13a6:	90 93 a5 00 	sts	0x00A5, r25	; 0x8000a5 <count+0x3>
    13aa:	22 c1       	rjmp	.+580    	; 0x15f0 <Timer_Start+0x46a>
			}else
			{
				T_overflow=(prescaler/F_CPU)*256;
				Counts_needed=(u32TimerValueUS/(T_overflow*1000000));
				TCNT0_R=255-Counts_needed;
    13ac:	22 2d       	mov	r18, r2
    13ae:	33 2d       	mov	r19, r3
    13b0:	48 2d       	mov	r20, r8
    13b2:	59 2d       	mov	r21, r9
    13b4:	69 85       	ldd	r22, Y+9	; 0x09
    13b6:	7a 85       	ldd	r23, Y+10	; 0x0a
    13b8:	8b 85       	ldd	r24, Y+11	; 0x0b
    13ba:	9c 85       	ldd	r25, Y+12	; 0x0c
    13bc:	0e 94 a6 10 	call	0x214c	; 0x214c <__floatundisf>
    13c0:	6b 01       	movw	r12, r22
    13c2:	7c 01       	movw	r14, r24
    13c4:	c3 01       	movw	r24, r6
    13c6:	b2 01       	movw	r22, r4
    13c8:	20 e0       	ldi	r18, 0x00	; 0
    13ca:	32 e1       	ldi	r19, 0x12	; 18
    13cc:	4a e7       	ldi	r20, 0x7A	; 122
    13ce:	50 e0       	ldi	r21, 0x00	; 0
    13d0:	0e 94 db 11 	call	0x23b6	; 0x23b6 <__udivmodsi4>
    13d4:	94 2f       	mov	r25, r20
    13d6:	83 2f       	mov	r24, r19
    13d8:	72 2f       	mov	r23, r18
    13da:	66 27       	eor	r22, r22
    13dc:	0e 94 69 10 	call	0x20d2	; 0x20d2 <__floatunsisf>
    13e0:	20 e0       	ldi	r18, 0x00	; 0
    13e2:	34 e2       	ldi	r19, 0x24	; 36
    13e4:	44 e7       	ldi	r20, 0x74	; 116
    13e6:	59 e4       	ldi	r21, 0x49	; 73
    13e8:	0e 94 3a 11 	call	0x2274	; 0x2274 <__mulsf3>
    13ec:	9b 01       	movw	r18, r22
    13ee:	ac 01       	movw	r20, r24
    13f0:	c7 01       	movw	r24, r14
    13f2:	b6 01       	movw	r22, r12
    13f4:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__divsf3>
    13f8:	9b 01       	movw	r18, r22
    13fa:	ac 01       	movw	r20, r24
    13fc:	60 e0       	ldi	r22, 0x00	; 0
    13fe:	70 e0       	ldi	r23, 0x00	; 0
    1400:	8f e7       	ldi	r24, 0x7F	; 127
    1402:	93 e4       	ldi	r25, 0x43	; 67
    1404:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <__subsf3>
    1408:	0e 94 3a 10 	call	0x2074	; 0x2074 <__fixunssfsi>
    140c:	62 bf       	out	0x32, r22	; 50
				Flag_0=1;
    140e:	81 e0       	ldi	r24, 0x01	; 1
    1410:	80 93 92 00 	sts	0x0092, r24	; 0x800092 <Flag_0>
    1414:	ed c0       	rjmp	.+474    	; 0x15f0 <Timer_Start+0x46a>
			}
		}else if(astrTimerConfigParameters[u8GroupId].enuTimerMode==CTC)
    1416:	8c 89       	ldd	r24, Y+20	; 0x14
    1418:	81 30       	cpi	r24, 0x01	; 1
    141a:	09 f0       	breq	.+2      	; 0x141e <Timer_Start+0x298>
    141c:	e9 c0       	rjmp	.+466    	; 0x15f0 <Timer_Start+0x46a>
		{
			OCR0_R=(u32TimerValueUS/(F_CPU/(prescaler*1000000)));
    141e:	60 e0       	ldi	r22, 0x00	; 0
    1420:	72 e1       	ldi	r23, 0x12	; 18
    1422:	8a e7       	ldi	r24, 0x7A	; 122
    1424:	90 e0       	ldi	r25, 0x00	; 0
    1426:	2d 85       	ldd	r18, Y+13	; 0x0d
    1428:	3e 85       	ldd	r19, Y+14	; 0x0e
    142a:	4f 85       	ldd	r20, Y+15	; 0x0f
    142c:	58 89       	ldd	r21, Y+16	; 0x10
    142e:	0e 94 db 11 	call	0x23b6	; 0x23b6 <__udivmodsi4>
    1432:	59 01       	movw	r10, r18
    1434:	6a 01       	movw	r12, r20
    1436:	e1 2c       	mov	r14, r1
    1438:	f1 2c       	mov	r15, r1
    143a:	87 01       	movw	r16, r14
    143c:	29 83       	std	Y+1, r18	; 0x01
    143e:	ba 82       	std	Y+2, r11	; 0x02
    1440:	cb 82       	std	Y+3, r12	; 0x03
    1442:	dc 82       	std	Y+4, r13	; 0x04
    1444:	ed 82       	std	Y+5, r14	; 0x05
    1446:	fe 82       	std	Y+6, r15	; 0x06
    1448:	0f 83       	std	Y+7, r16	; 0x07
    144a:	18 87       	std	Y+8, r17	; 0x08
    144c:	e1 2c       	mov	r14, r1
    144e:	f1 2c       	mov	r15, r1
    1450:	00 e0       	ldi	r16, 0x00	; 0
    1452:	10 e0       	ldi	r17, 0x00	; 0
    1454:	22 2d       	mov	r18, r2
    1456:	33 2d       	mov	r19, r3
    1458:	48 2d       	mov	r20, r8
    145a:	59 2d       	mov	r21, r9
    145c:	69 85       	ldd	r22, Y+9	; 0x09
    145e:	7a 85       	ldd	r23, Y+10	; 0x0a
    1460:	8b 85       	ldd	r24, Y+11	; 0x0b
    1462:	9c 85       	ldd	r25, Y+12	; 0x0c
    1464:	0e 94 69 12 	call	0x24d2	; 0x24d2 <__udivdi3>
    1468:	2c bf       	out	0x3c, r18	; 60
			TCNT0_R=0;
    146a:	12 be       	out	0x32, r1	; 50
    146c:	c1 c0       	rjmp	.+386    	; 0x15f0 <Timer_Start+0x46a>
		}
				
	}else if(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER1)
    146e:	0b 89       	ldd	r16, Y+19	; 0x13
    1470:	01 30       	cpi	r16, 0x01	; 1
    1472:	d9 f5       	brne	.+118    	; 0x14ea <Timer_Start+0x364>
	{
		if(astrTimerConfigParameters[u8GroupId].enuTimerMode==NORMAL)
    1474:	1c 89       	ldd	r17, Y+20	; 0x14
    1476:	11 11       	cpse	r17, r1
    1478:	2b c0       	rjmp	.+86     	; 0x14d0 <Timer_Start+0x34a>
		{
			if(ARR2>=65536)
    147a:	20 e0       	ldi	r18, 0x00	; 0
    147c:	30 e0       	ldi	r19, 0x00	; 0
    147e:	40 e8       	ldi	r20, 0x80	; 128
    1480:	57 e4       	ldi	r21, 0x47	; 71
    1482:	0e 94 35 11 	call	0x226a	; 0x226a <__gesf2>
    1486:	88 23       	and	r24, r24
    1488:	9c f0       	brlt	.+38     	; 0x14b0 <Timer_Start+0x32a>
			{
				count=ARR2/65536;
    148a:	20 e0       	ldi	r18, 0x00	; 0
    148c:	30 e0       	ldi	r19, 0x00	; 0
    148e:	40 e8       	ldi	r20, 0x80	; 128
    1490:	57 e3       	ldi	r21, 0x37	; 55
    1492:	c7 01       	movw	r24, r14
    1494:	b6 01       	movw	r22, r12
    1496:	0e 94 3a 11 	call	0x2274	; 0x2274 <__mulsf3>
    149a:	0e 94 3a 10 	call	0x2074	; 0x2074 <__fixunssfsi>
    149e:	60 93 a2 00 	sts	0x00A2, r22	; 0x8000a2 <count>
    14a2:	70 93 a3 00 	sts	0x00A3, r23	; 0x8000a3 <count+0x1>
    14a6:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <count+0x2>
    14aa:	90 93 a5 00 	sts	0x00A5, r25	; 0x8000a5 <count+0x3>
    14ae:	a0 c0       	rjmp	.+320    	; 0x15f0 <Timer_Start+0x46a>
			}else
			{
				
				TCNT1_R=65535-ARR2;
    14b0:	a7 01       	movw	r20, r14
    14b2:	96 01       	movw	r18, r12
    14b4:	60 e0       	ldi	r22, 0x00	; 0
    14b6:	7f ef       	ldi	r23, 0xFF	; 255
    14b8:	8f e7       	ldi	r24, 0x7F	; 127
    14ba:	97 e4       	ldi	r25, 0x47	; 71
    14bc:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <__subsf3>
    14c0:	0e 94 3a 10 	call	0x2074	; 0x2074 <__fixunssfsi>
    14c4:	7d bd       	out	0x2d, r23	; 45
    14c6:	6c bd       	out	0x2c, r22	; 44
				Flag_1=1;
    14c8:	81 e0       	ldi	r24, 0x01	; 1
    14ca:	80 93 91 00 	sts	0x0091, r24	; 0x800091 <Flag_1>
    14ce:	90 c0       	rjmp	.+288    	; 0x15f0 <Timer_Start+0x46a>
			}			
		}else if(astrTimerConfigParameters[u8GroupId].enuTimerMode==CTC)
    14d0:	8c 89       	ldd	r24, Y+20	; 0x14
    14d2:	81 30       	cpi	r24, 0x01	; 1
    14d4:	09 f0       	breq	.+2      	; 0x14d8 <Timer_Start+0x352>
    14d6:	8c c0       	rjmp	.+280    	; 0x15f0 <Timer_Start+0x46a>
		{
			OCR1A_R=ARR2;
    14d8:	c7 01       	movw	r24, r14
    14da:	b6 01       	movw	r22, r12
    14dc:	0e 94 3a 10 	call	0x2074	; 0x2074 <__fixunssfsi>
    14e0:	7b bd       	out	0x2b, r23	; 43
    14e2:	6a bd       	out	0x2a, r22	; 42
			TCNT1_R=0;
    14e4:	1d bc       	out	0x2d, r1	; 45
    14e6:	1c bc       	out	0x2c, r1	; 44
    14e8:	83 c0       	rjmp	.+262    	; 0x15f0 <Timer_Start+0x46a>
		}
	}else if(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER2)
    14ea:	9b 89       	ldd	r25, Y+19	; 0x13
    14ec:	92 30       	cpi	r25, 0x02	; 2
    14ee:	09 f0       	breq	.+2      	; 0x14f2 <Timer_Start+0x36c>
    14f0:	7f c0       	rjmp	.+254    	; 0x15f0 <Timer_Start+0x46a>
	{
		if(astrTimerConfigParameters[u8GroupId].enuTimerMode==NORMAL)
    14f2:	ac 88       	ldd	r10, Y+20	; 0x14
    14f4:	a1 10       	cpse	r10, r1
    14f6:	52 c0       	rjmp	.+164    	; 0x159c <Timer_Start+0x416>
		{
			if(ARR2>=256)
    14f8:	20 e0       	ldi	r18, 0x00	; 0
    14fa:	30 e0       	ldi	r19, 0x00	; 0
    14fc:	40 e8       	ldi	r20, 0x80	; 128
    14fe:	53 e4       	ldi	r21, 0x43	; 67
    1500:	c7 01       	movw	r24, r14
    1502:	b6 01       	movw	r22, r12
    1504:	0e 94 35 11 	call	0x226a	; 0x226a <__gesf2>
    1508:	88 23       	and	r24, r24
    150a:	9c f0       	brlt	.+38     	; 0x1532 <Timer_Start+0x3ac>
			{
				count=ARR2/256;
    150c:	20 e0       	ldi	r18, 0x00	; 0
    150e:	30 e0       	ldi	r19, 0x00	; 0
    1510:	40 e8       	ldi	r20, 0x80	; 128
    1512:	5b e3       	ldi	r21, 0x3B	; 59
    1514:	c7 01       	movw	r24, r14
    1516:	b6 01       	movw	r22, r12
    1518:	0e 94 3a 11 	call	0x2274	; 0x2274 <__mulsf3>
    151c:	0e 94 3a 10 	call	0x2074	; 0x2074 <__fixunssfsi>
    1520:	60 93 a2 00 	sts	0x00A2, r22	; 0x8000a2 <count>
    1524:	70 93 a3 00 	sts	0x00A3, r23	; 0x8000a3 <count+0x1>
    1528:	80 93 a4 00 	sts	0x00A4, r24	; 0x8000a4 <count+0x2>
    152c:	90 93 a5 00 	sts	0x00A5, r25	; 0x8000a5 <count+0x3>
    1530:	5f c0       	rjmp	.+190    	; 0x15f0 <Timer_Start+0x46a>
			}else
			{
				T_overflow=(prescaler/F_CPU)*256;
				Counts_needed=(u32TimerValueUS/(T_overflow*1000000));
				TCNT2_R=255-Counts_needed;
    1532:	22 2d       	mov	r18, r2
    1534:	33 2d       	mov	r19, r3
    1536:	48 2d       	mov	r20, r8
    1538:	59 2d       	mov	r21, r9
    153a:	69 85       	ldd	r22, Y+9	; 0x09
    153c:	7a 85       	ldd	r23, Y+10	; 0x0a
    153e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1540:	9c 85       	ldd	r25, Y+12	; 0x0c
    1542:	0e 94 a6 10 	call	0x214c	; 0x214c <__floatundisf>
    1546:	6b 01       	movw	r12, r22
    1548:	7c 01       	movw	r14, r24
    154a:	c3 01       	movw	r24, r6
    154c:	b2 01       	movw	r22, r4
    154e:	20 e0       	ldi	r18, 0x00	; 0
    1550:	32 e1       	ldi	r19, 0x12	; 18
    1552:	4a e7       	ldi	r20, 0x7A	; 122
    1554:	50 e0       	ldi	r21, 0x00	; 0
    1556:	0e 94 db 11 	call	0x23b6	; 0x23b6 <__udivmodsi4>
    155a:	94 2f       	mov	r25, r20
    155c:	83 2f       	mov	r24, r19
    155e:	72 2f       	mov	r23, r18
    1560:	66 27       	eor	r22, r22
    1562:	0e 94 69 10 	call	0x20d2	; 0x20d2 <__floatunsisf>
    1566:	20 e0       	ldi	r18, 0x00	; 0
    1568:	34 e2       	ldi	r19, 0x24	; 36
    156a:	44 e7       	ldi	r20, 0x74	; 116
    156c:	59 e4       	ldi	r21, 0x49	; 73
    156e:	0e 94 3a 11 	call	0x2274	; 0x2274 <__mulsf3>
    1572:	9b 01       	movw	r18, r22
    1574:	ac 01       	movw	r20, r24
    1576:	c7 01       	movw	r24, r14
    1578:	b6 01       	movw	r22, r12
    157a:	0e 94 c8 0f 	call	0x1f90	; 0x1f90 <__divsf3>
    157e:	9b 01       	movw	r18, r22
    1580:	ac 01       	movw	r20, r24
    1582:	60 e0       	ldi	r22, 0x00	; 0
    1584:	70 e0       	ldi	r23, 0x00	; 0
    1586:	8f e7       	ldi	r24, 0x7F	; 127
    1588:	93 e4       	ldi	r25, 0x43	; 67
    158a:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <__subsf3>
    158e:	0e 94 3a 10 	call	0x2074	; 0x2074 <__fixunssfsi>
    1592:	64 bd       	out	0x24, r22	; 36
				Flag_2=1;
    1594:	81 e0       	ldi	r24, 0x01	; 1
    1596:	80 93 90 00 	sts	0x0090, r24	; 0x800090 <Flag_2>
    159a:	2a c0       	rjmp	.+84     	; 0x15f0 <Timer_Start+0x46a>
			}
			
		}else if(astrTimerConfigParameters[u8GroupId].enuTimerMode==CTC)
    159c:	0c 89       	ldd	r16, Y+20	; 0x14
    159e:	01 30       	cpi	r16, 0x01	; 1
    15a0:	39 f5       	brne	.+78     	; 0x15f0 <Timer_Start+0x46a>
		{
			OCR2_R=(u32TimerValueUS/(F_CPU/(prescaler*1000000)));
    15a2:	60 e0       	ldi	r22, 0x00	; 0
    15a4:	72 e1       	ldi	r23, 0x12	; 18
    15a6:	8a e7       	ldi	r24, 0x7A	; 122
    15a8:	90 e0       	ldi	r25, 0x00	; 0
    15aa:	2d 85       	ldd	r18, Y+13	; 0x0d
    15ac:	3e 85       	ldd	r19, Y+14	; 0x0e
    15ae:	4f 85       	ldd	r20, Y+15	; 0x0f
    15b0:	58 89       	ldd	r21, Y+16	; 0x10
    15b2:	0e 94 db 11 	call	0x23b6	; 0x23b6 <__udivmodsi4>
    15b6:	59 01       	movw	r10, r18
    15b8:	6a 01       	movw	r12, r20
    15ba:	e1 2c       	mov	r14, r1
    15bc:	f1 2c       	mov	r15, r1
    15be:	87 01       	movw	r16, r14
    15c0:	29 83       	std	Y+1, r18	; 0x01
    15c2:	ba 82       	std	Y+2, r11	; 0x02
    15c4:	cb 82       	std	Y+3, r12	; 0x03
    15c6:	dc 82       	std	Y+4, r13	; 0x04
    15c8:	ed 82       	std	Y+5, r14	; 0x05
    15ca:	fe 82       	std	Y+6, r15	; 0x06
    15cc:	0f 83       	std	Y+7, r16	; 0x07
    15ce:	18 87       	std	Y+8, r17	; 0x08
    15d0:	e1 2c       	mov	r14, r1
    15d2:	f1 2c       	mov	r15, r1
    15d4:	00 e0       	ldi	r16, 0x00	; 0
    15d6:	10 e0       	ldi	r17, 0x00	; 0
    15d8:	22 2d       	mov	r18, r2
    15da:	33 2d       	mov	r19, r3
    15dc:	48 2d       	mov	r20, r8
    15de:	59 2d       	mov	r21, r9
    15e0:	69 85       	ldd	r22, Y+9	; 0x09
    15e2:	7a 85       	ldd	r23, Y+10	; 0x0a
    15e4:	8b 85       	ldd	r24, Y+11	; 0x0b
    15e6:	9c 85       	ldd	r25, Y+12	; 0x0c
    15e8:	0e 94 69 12 	call	0x24d2	; 0x24d2 <__udivdi3>
    15ec:	23 bd       	out	0x23, r18	; 35
			TCNT2_R=0;
    15ee:	14 bc       	out	0x24, r1	; 36
		}
	
	}
	F_PTR=pfCallback;
    15f0:	c9 88       	ldd	r12, Y+17	; 0x11
    15f2:	da 88       	ldd	r13, Y+18	; 0x12
    15f4:	d0 92 94 00 	sts	0x0094, r13	; 0x800094 <F_PTR+0x1>
    15f8:	c0 92 93 00 	sts	0x0093, r12	; 0x800093 <F_PTR>
			((astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_EN))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Set_OC0))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Set_OC1))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Set_OC2))&&
			(u8GroupId<TM_GROUPS_NO))
			{Error=E_OK;
    15fc:	81 e0       	ldi	r24, 0x01	; 1
    15fe:	0f c0       	rjmp	.+30     	; 0x161e <Timer_Start+0x498>
	return Error;
}

enuErrorStatus_t Timer_Start(uint8_t u8GroupId, uint64_t u32TimerValueUS, void(*pfCallback)(void))
{
	enuErrorStatus_t Error = E_ERROR;
    1600:	80 e0       	ldi	r24, 0x00	; 0
    1602:	0d c0       	rjmp	.+26     	; 0x161e <Timer_Start+0x498>
    1604:	80 e0       	ldi	r24, 0x00	; 0
    1606:	0b c0       	rjmp	.+22     	; 0x161e <Timer_Start+0x498>
    1608:	80 e0       	ldi	r24, 0x00	; 0
    160a:	09 c0       	rjmp	.+18     	; 0x161e <Timer_Start+0x498>
    160c:	80 e0       	ldi	r24, 0x00	; 0
    160e:	07 c0       	rjmp	.+14     	; 0x161e <Timer_Start+0x498>
    1610:	80 e0       	ldi	r24, 0x00	; 0
    1612:	05 c0       	rjmp	.+10     	; 0x161e <Timer_Start+0x498>
    1614:	80 e0       	ldi	r24, 0x00	; 0
    1616:	03 c0       	rjmp	.+6      	; 0x161e <Timer_Start+0x498>
    1618:	80 e0       	ldi	r24, 0x00	; 0
    161a:	01 c0       	rjmp	.+2      	; 0x161e <Timer_Start+0x498>
    161c:	80 e0       	ldi	r24, 0x00	; 0
	
	}
	F_PTR=pfCallback;
		}
	return Error;
	}
    161e:	64 96       	adiw	r28, 0x14	; 20
    1620:	0f b6       	in	r0, 0x3f	; 63
    1622:	f8 94       	cli
    1624:	de bf       	out	0x3e, r29	; 62
    1626:	0f be       	out	0x3f, r0	; 63
    1628:	cd bf       	out	0x3d, r28	; 61
    162a:	df 91       	pop	r29
    162c:	cf 91       	pop	r28
    162e:	1f 91       	pop	r17
    1630:	0f 91       	pop	r16
    1632:	ff 90       	pop	r15
    1634:	ef 90       	pop	r14
    1636:	df 90       	pop	r13
    1638:	cf 90       	pop	r12
    163a:	bf 90       	pop	r11
    163c:	af 90       	pop	r10
    163e:	9f 90       	pop	r9
    1640:	8f 90       	pop	r8
    1642:	7f 90       	pop	r7
    1644:	6f 90       	pop	r6
    1646:	5f 90       	pop	r5
    1648:	4f 90       	pop	r4
    164a:	3f 90       	pop	r3
    164c:	2f 90       	pop	r2
    164e:	08 95       	ret

00001650 <Timer_GetStatus>:

	
enuErrorStatus_t Timer_GetStatus(uint8_t u8GroupId)
{
	enuErrorStatus_t Error = E_ERROR;
			if(((astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER0)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER1)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER2))&&
    1650:	28 2f       	mov	r18, r24
    1652:	30 e0       	ldi	r19, 0x00	; 0
    1654:	97 e0       	ldi	r25, 0x07	; 7
    1656:	89 9f       	mul	r24, r25
    1658:	f0 01       	movw	r30, r0
    165a:	11 24       	eor	r1, r1
    165c:	e8 58       	subi	r30, 0x88	; 136
    165e:	ff 4f       	sbci	r31, 0xFF	; 255
    1660:	90 81       	ld	r25, Z
    1662:	93 30       	cpi	r25, 0x03	; 3
    1664:	08 f0       	brcs	.+2      	; 0x1668 <Timer_GetStatus+0x18>
    1666:	de c1       	rjmp	.+956    	; 0x1a24 <Timer_GetStatus+0x3d4>
			((astrTimerConfigParameters[u8GroupId].enuTimerMode==NORMAL)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==CTC)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==FAST_PWM)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==PC_PWM))&&
    1668:	f9 01       	movw	r30, r18
    166a:	ee 0f       	add	r30, r30
    166c:	ff 1f       	adc	r31, r31
    166e:	ee 0f       	add	r30, r30
    1670:	ff 1f       	adc	r31, r31
    1672:	ee 0f       	add	r30, r30
    1674:	ff 1f       	adc	r31, r31
    1676:	e2 1b       	sub	r30, r18
    1678:	f3 0b       	sbc	r31, r19
    167a:	e8 58       	subi	r30, 0x88	; 136
    167c:	ff 4f       	sbci	r31, 0xFF	; 255
    167e:	41 81       	ldd	r20, Z+1	; 0x01

	
enuErrorStatus_t Timer_GetStatus(uint8_t u8GroupId)
{
	enuErrorStatus_t Error = E_ERROR;
			if(((astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER0)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER1)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER2))&&
    1680:	44 30       	cpi	r20, 0x04	; 4
    1682:	08 f0       	brcs	.+2      	; 0x1686 <Timer_GetStatus+0x36>
    1684:	d1 c1       	rjmp	.+930    	; 0x1a28 <Timer_GetStatus+0x3d8>
			((astrTimerConfigParameters[u8GroupId].enuTimerMode==NORMAL)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==CTC)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==FAST_PWM)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==PC_PWM))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_CLOCK)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_PRESCALER)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_8)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_64)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_256)||
    1686:	f9 01       	movw	r30, r18
    1688:	ee 0f       	add	r30, r30
    168a:	ff 1f       	adc	r31, r31
    168c:	ee 0f       	add	r30, r30
    168e:	ff 1f       	adc	r31, r31
    1690:	ee 0f       	add	r30, r30
    1692:	ff 1f       	adc	r31, r31
    1694:	e2 1b       	sub	r30, r18
    1696:	f3 0b       	sbc	r31, r19
    1698:	e8 58       	subi	r30, 0x88	; 136
    169a:	ff 4f       	sbci	r31, 0xFF	; 255
    169c:	52 81       	ldd	r21, Z+2	; 0x02
	
enuErrorStatus_t Timer_GetStatus(uint8_t u8GroupId)
{
	enuErrorStatus_t Error = E_ERROR;
			if(((astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER0)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER1)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER2))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerMode==NORMAL)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==CTC)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==FAST_PWM)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==PC_PWM))&&
    169e:	58 30       	cpi	r21, 0x08	; 8
    16a0:	28 f0       	brcs	.+10     	; 0x16ac <Timer_GetStatus+0x5c>
			((astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_CLOCK)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_PRESCALER)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_8)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_64)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_256)||
			(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_1024)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==32)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_128)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_FALL_EDGE)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_RISE_EDGE))&&
    16a2:	50 32       	cpi	r21, 0x20	; 32
    16a4:	19 f0       	breq	.+6      	; 0x16ac <Timer_GetStatus+0x5c>
    16a6:	59 30       	cpi	r21, 0x09	; 9
    16a8:	09 f0       	breq	.+2      	; 0x16ac <Timer_GetStatus+0x5c>
    16aa:	c0 c1       	rjmp	.+896    	; 0x1a2c <Timer_GetStatus+0x3dc>
			((astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_EN))&&
    16ac:	f9 01       	movw	r30, r18
    16ae:	ee 0f       	add	r30, r30
    16b0:	ff 1f       	adc	r31, r31
    16b2:	ee 0f       	add	r30, r30
    16b4:	ff 1f       	adc	r31, r31
    16b6:	ee 0f       	add	r30, r30
    16b8:	ff 1f       	adc	r31, r31
    16ba:	e2 1b       	sub	r30, r18
    16bc:	f3 0b       	sbc	r31, r19
    16be:	e8 58       	subi	r30, 0x88	; 136
    16c0:	ff 4f       	sbci	r31, 0xFF	; 255
    16c2:	53 81       	ldd	r21, Z+3	; 0x03
{
	enuErrorStatus_t Error = E_ERROR;
			if(((astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER0)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER1)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER2))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerMode==NORMAL)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==CTC)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==FAST_PWM)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==PC_PWM))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_CLOCK)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_PRESCALER)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_8)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_64)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_256)||
			(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_1024)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==32)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_128)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_FALL_EDGE)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_RISE_EDGE))&&
    16c4:	52 30       	cpi	r21, 0x02	; 2
    16c6:	08 f0       	brcs	.+2      	; 0x16ca <Timer_GetStatus+0x7a>
    16c8:	b3 c1       	rjmp	.+870    	; 0x1a30 <Timer_GetStatus+0x3e0>
			((astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_EN))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Set_OC0))&&
    16ca:	f9 01       	movw	r30, r18
    16cc:	ee 0f       	add	r30, r30
    16ce:	ff 1f       	adc	r31, r31
    16d0:	ee 0f       	add	r30, r30
    16d2:	ff 1f       	adc	r31, r31
    16d4:	ee 0f       	add	r30, r30
    16d6:	ff 1f       	adc	r31, r31
    16d8:	e2 1b       	sub	r30, r18
    16da:	f3 0b       	sbc	r31, r19
    16dc:	e8 58       	subi	r30, 0x88	; 136
    16de:	ff 4f       	sbci	r31, 0xFF	; 255
	enuErrorStatus_t Error = E_ERROR;
			if(((astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER0)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER1)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER2))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerMode==NORMAL)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==CTC)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==FAST_PWM)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==PC_PWM))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_CLOCK)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_PRESCALER)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_8)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_64)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_256)||
			(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_1024)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==32)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_128)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_FALL_EDGE)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_RISE_EDGE))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_EN))&&
    16e0:	64 81       	ldd	r22, Z+4	; 0x04
    16e2:	64 30       	cpi	r22, 0x04	; 4
    16e4:	08 f0       	brcs	.+2      	; 0x16e8 <Timer_GetStatus+0x98>
    16e6:	a6 c1       	rjmp	.+844    	; 0x1a34 <Timer_GetStatus+0x3e4>
			((astrTimerConfigParameters[u8GroupId].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Set_OC0))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Set_OC1))&&
    16e8:	f9 01       	movw	r30, r18
    16ea:	ee 0f       	add	r30, r30
    16ec:	ff 1f       	adc	r31, r31
    16ee:	ee 0f       	add	r30, r30
    16f0:	ff 1f       	adc	r31, r31
    16f2:	ee 0f       	add	r30, r30
    16f4:	ff 1f       	adc	r31, r31
    16f6:	e2 1b       	sub	r30, r18
    16f8:	f3 0b       	sbc	r31, r19
    16fa:	e8 58       	subi	r30, 0x88	; 136
    16fc:	ff 4f       	sbci	r31, 0xFF	; 255
			if(((astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER0)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER1)||(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER2))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerMode==NORMAL)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==CTC)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==FAST_PWM)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==PC_PWM))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_CLOCK)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_PRESCALER)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_8)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_64)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_256)||
			(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_1024)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==32)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_128)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_FALL_EDGE)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_RISE_EDGE))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_EN))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Set_OC0))&&
    16fe:	65 81       	ldd	r22, Z+5	; 0x05
    1700:	64 30       	cpi	r22, 0x04	; 4
    1702:	08 f0       	brcs	.+2      	; 0x1706 <Timer_GetStatus+0xb6>
    1704:	99 c1       	rjmp	.+818    	; 0x1a38 <Timer_GetStatus+0x3e8>
			((astrTimerConfigParameters[u8GroupId].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Set_OC1))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Set_OC2))&&
    1706:	f9 01       	movw	r30, r18
    1708:	ee 0f       	add	r30, r30
    170a:	ff 1f       	adc	r31, r31
    170c:	ee 0f       	add	r30, r30
    170e:	ff 1f       	adc	r31, r31
    1710:	ee 0f       	add	r30, r30
    1712:	ff 1f       	adc	r31, r31
    1714:	e2 1b       	sub	r30, r18
    1716:	f3 0b       	sbc	r31, r19
    1718:	e8 58       	subi	r30, 0x88	; 136
    171a:	ff 4f       	sbci	r31, 0xFF	; 255
			((astrTimerConfigParameters[u8GroupId].enuTimerMode==NORMAL)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==CTC)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==FAST_PWM)||(astrTimerConfigParameters[u8GroupId].enuTimerMode==PC_PWM))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_CLOCK)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==NO_PRESCALER)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_8)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_64)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_256)||
			(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_1024)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==32)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==PRESCALER_128)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_FALL_EDGE)||(astrTimerConfigParameters[u8GroupId].enuTimerClock==EXTERNAL_CLOCK_RISE_EDGE))&&
			((astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_DIS)||(astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_EN))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Set_OC0))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Set_OC1))&&
    171c:	26 81       	ldd	r18, Z+6	; 0x06
    171e:	24 30       	cpi	r18, 0x04	; 4
    1720:	08 f0       	brcs	.+2      	; 0x1724 <Timer_GetStatus+0xd4>
    1722:	8c c1       	rjmp	.+792    	; 0x1a3c <Timer_GetStatus+0x3ec>
			((astrTimerConfigParameters[u8GroupId].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Set_OC2))&&
    1724:	81 11       	cpse	r24, r1
    1726:	8c c1       	rjmp	.+792    	; 0x1a40 <Timer_GetStatus+0x3f0>
			(u8GroupId<TM_GROUPS_NO)
			)
			{Error = E_OK;	
	if(astrTimerConfigParameters[u8GroupId].enuTimerIntEn==TIMER_INT_DIS)
    1728:	51 11       	cpse	r21, r1
    172a:	8c c1       	rjmp	.+792    	; 0x1a44 <Timer_GetStatus+0x3f4>
	{
	static uint32_t overflow=0;
	
	if(astrTimerConfigParameters[u8GroupId].enuTimerMode==NORMAL)
    172c:	41 11       	cpse	r20, r1
    172e:	46 c1       	rjmp	.+652    	; 0x19bc <Timer_GetStatus+0x36c>
	{
				if(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER0){
    1730:	91 11       	cpse	r25, r1
    1732:	69 c0       	rjmp	.+210    	; 0x1806 <Timer_GetStatus+0x1b6>
				if(Flag_0==1)
    1734:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <Flag_0>
    1738:	81 30       	cpi	r24, 0x01	; 1
    173a:	71 f5       	brne	.+92     	; 0x1798 <Timer_GetStatus+0x148>
				{
				while(!GET_BIT(TIFR_R,0));
    173c:	08 b6       	in	r0, 0x38	; 56
    173e:	00 fe       	sbrs	r0, 0
    1740:	fd cf       	rjmp	.-6      	; 0x173c <Timer_GetStatus+0xec>
				F_PTR();
    1742:	e0 91 93 00 	lds	r30, 0x0093	; 0x800093 <F_PTR>
    1746:	f0 91 94 00 	lds	r31, 0x0094	; 0x800094 <F_PTR+0x1>
    174a:	09 95       	icall
				TCNT0_R=256-(256-(ARR2*256));
    174c:	20 e0       	ldi	r18, 0x00	; 0
    174e:	30 e0       	ldi	r19, 0x00	; 0
    1750:	40 e8       	ldi	r20, 0x80	; 128
    1752:	53 e4       	ldi	r21, 0x43	; 67
    1754:	60 91 9e 00 	lds	r22, 0x009E	; 0x80009e <ARR2>
    1758:	70 91 9f 00 	lds	r23, 0x009F	; 0x80009f <ARR2+0x1>
    175c:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <ARR2+0x2>
    1760:	90 91 a1 00 	lds	r25, 0x00A1	; 0x8000a1 <ARR2+0x3>
    1764:	0e 94 3a 11 	call	0x2274	; 0x2274 <__mulsf3>
    1768:	9b 01       	movw	r18, r22
    176a:	ac 01       	movw	r20, r24
    176c:	60 e0       	ldi	r22, 0x00	; 0
    176e:	70 e0       	ldi	r23, 0x00	; 0
    1770:	80 e8       	ldi	r24, 0x80	; 128
    1772:	93 e4       	ldi	r25, 0x43	; 67
    1774:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <__subsf3>
    1778:	9b 01       	movw	r18, r22
    177a:	ac 01       	movw	r20, r24
    177c:	60 e0       	ldi	r22, 0x00	; 0
    177e:	70 e0       	ldi	r23, 0x00	; 0
    1780:	80 e8       	ldi	r24, 0x80	; 128
    1782:	93 e4       	ldi	r25, 0x43	; 67
    1784:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <__subsf3>
    1788:	0e 94 3a 10 	call	0x2074	; 0x2074 <__fixunssfsi>
    178c:	62 bf       	out	0x32, r22	; 50
				SET_BIT(TIFR_R,0);
    178e:	88 b7       	in	r24, 0x38	; 56
    1790:	81 60       	ori	r24, 0x01	; 1
    1792:	88 bf       	out	0x38, r24	; 56
			((astrTimerConfigParameters[u8GroupId].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Set_OC0))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Set_OC1))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Set_OC2))&&
			(u8GroupId<TM_GROUPS_NO)
			)
			{Error = E_OK;	
    1794:	81 e0       	ldi	r24, 0x01	; 1
    1796:	08 95       	ret
				F_PTR();
				TCNT0_R=256-(256-(ARR2*256));
				SET_BIT(TIFR_R,0);
				}else
				{
				while(!GET_BIT(TIFR_R,0));
    1798:	08 b6       	in	r0, 0x38	; 56
    179a:	00 fe       	sbrs	r0, 0
    179c:	fd cf       	rjmp	.-6      	; 0x1798 <Timer_GetStatus+0x148>
				TCNT0_R=0;
    179e:	12 be       	out	0x32, r1	; 50
				SET_BIT(TIFR_R,0);
    17a0:	88 b7       	in	r24, 0x38	; 56
    17a2:	81 60       	ori	r24, 0x01	; 1
    17a4:	88 bf       	out	0x38, r24	; 56
				overflow++;
    17a6:	80 91 8c 00 	lds	r24, 0x008C	; 0x80008c <overflow.1749>
    17aa:	90 91 8d 00 	lds	r25, 0x008D	; 0x80008d <overflow.1749+0x1>
    17ae:	a0 91 8e 00 	lds	r26, 0x008E	; 0x80008e <overflow.1749+0x2>
    17b2:	b0 91 8f 00 	lds	r27, 0x008F	; 0x80008f <overflow.1749+0x3>
    17b6:	01 96       	adiw	r24, 0x01	; 1
    17b8:	a1 1d       	adc	r26, r1
    17ba:	b1 1d       	adc	r27, r1
    17bc:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <overflow.1749>
    17c0:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <overflow.1749+0x1>
    17c4:	a0 93 8e 00 	sts	0x008E, r26	; 0x80008e <overflow.1749+0x2>
    17c8:	b0 93 8f 00 	sts	0x008F, r27	; 0x80008f <overflow.1749+0x3>
				if(overflow==count)
    17cc:	40 91 a2 00 	lds	r20, 0x00A2	; 0x8000a2 <count>
    17d0:	50 91 a3 00 	lds	r21, 0x00A3	; 0x8000a3 <count+0x1>
    17d4:	60 91 a4 00 	lds	r22, 0x00A4	; 0x8000a4 <count+0x2>
    17d8:	70 91 a5 00 	lds	r23, 0x00A5	; 0x8000a5 <count+0x3>
    17dc:	84 17       	cp	r24, r20
    17de:	95 07       	cpc	r25, r21
    17e0:	a6 07       	cpc	r26, r22
    17e2:	b7 07       	cpc	r27, r23
    17e4:	09 f0       	breq	.+2      	; 0x17e8 <Timer_GetStatus+0x198>
    17e6:	30 c1       	rjmp	.+608    	; 0x1a48 <Timer_GetStatus+0x3f8>
				{
					F_PTR();
    17e8:	e0 91 93 00 	lds	r30, 0x0093	; 0x800093 <F_PTR>
    17ec:	f0 91 94 00 	lds	r31, 0x0094	; 0x800094 <F_PTR+0x1>
    17f0:	09 95       	icall
					overflow=0;
    17f2:	10 92 8c 00 	sts	0x008C, r1	; 0x80008c <overflow.1749>
    17f6:	10 92 8d 00 	sts	0x008D, r1	; 0x80008d <overflow.1749+0x1>
    17fa:	10 92 8e 00 	sts	0x008E, r1	; 0x80008e <overflow.1749+0x2>
    17fe:	10 92 8f 00 	sts	0x008F, r1	; 0x80008f <overflow.1749+0x3>
			((astrTimerConfigParameters[u8GroupId].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Set_OC0))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Set_OC1))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Set_OC2))&&
			(u8GroupId<TM_GROUPS_NO)
			)
			{Error = E_OK;	
    1802:	81 e0       	ldi	r24, 0x01	; 1
    1804:	08 95       	ret
					F_PTR();
					overflow=0;
				}
			
		}
		}else if(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER1)
    1806:	91 30       	cpi	r25, 0x01	; 1
    1808:	09 f0       	breq	.+2      	; 0x180c <Timer_GetStatus+0x1bc>
    180a:	6b c0       	rjmp	.+214    	; 0x18e2 <Timer_GetStatus+0x292>
		{
			if(Flag_1==1)
    180c:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <Flag_1>
    1810:	81 30       	cpi	r24, 0x01	; 1
    1812:	79 f5       	brne	.+94     	; 0x1872 <Timer_GetStatus+0x222>
			{
				while(!GET_BIT(TIFR_R,2));
    1814:	08 b6       	in	r0, 0x38	; 56
    1816:	02 fe       	sbrs	r0, 2
    1818:	fd cf       	rjmp	.-6      	; 0x1814 <Timer_GetStatus+0x1c4>
				F_PTR();
    181a:	e0 91 93 00 	lds	r30, 0x0093	; 0x800093 <F_PTR>
    181e:	f0 91 94 00 	lds	r31, 0x0094	; 0x800094 <F_PTR+0x1>
    1822:	09 95       	icall
				TCNT1_R=65536-(65535-(ARR2*65535));
    1824:	20 e0       	ldi	r18, 0x00	; 0
    1826:	3f ef       	ldi	r19, 0xFF	; 255
    1828:	4f e7       	ldi	r20, 0x7F	; 127
    182a:	57 e4       	ldi	r21, 0x47	; 71
    182c:	60 91 9e 00 	lds	r22, 0x009E	; 0x80009e <ARR2>
    1830:	70 91 9f 00 	lds	r23, 0x009F	; 0x80009f <ARR2+0x1>
    1834:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <ARR2+0x2>
    1838:	90 91 a1 00 	lds	r25, 0x00A1	; 0x8000a1 <ARR2+0x3>
    183c:	0e 94 3a 11 	call	0x2274	; 0x2274 <__mulsf3>
    1840:	9b 01       	movw	r18, r22
    1842:	ac 01       	movw	r20, r24
    1844:	60 e0       	ldi	r22, 0x00	; 0
    1846:	7f ef       	ldi	r23, 0xFF	; 255
    1848:	8f e7       	ldi	r24, 0x7F	; 127
    184a:	97 e4       	ldi	r25, 0x47	; 71
    184c:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <__subsf3>
    1850:	9b 01       	movw	r18, r22
    1852:	ac 01       	movw	r20, r24
    1854:	60 e0       	ldi	r22, 0x00	; 0
    1856:	70 e0       	ldi	r23, 0x00	; 0
    1858:	80 e8       	ldi	r24, 0x80	; 128
    185a:	97 e4       	ldi	r25, 0x47	; 71
    185c:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <__subsf3>
    1860:	0e 94 3a 10 	call	0x2074	; 0x2074 <__fixunssfsi>
    1864:	7d bd       	out	0x2d, r23	; 45
    1866:	6c bd       	out	0x2c, r22	; 44
				SET_BIT(TIFR_R,2);
    1868:	88 b7       	in	r24, 0x38	; 56
    186a:	84 60       	ori	r24, 0x04	; 4
    186c:	88 bf       	out	0x38, r24	; 56
			((astrTimerConfigParameters[u8GroupId].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Set_OC0))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Set_OC1))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Set_OC2))&&
			(u8GroupId<TM_GROUPS_NO)
			)
			{Error = E_OK;	
    186e:	81 e0       	ldi	r24, 0x01	; 1
    1870:	08 95       	ret
				F_PTR();
				TCNT1_R=65536-(65535-(ARR2*65535));
				SET_BIT(TIFR_R,2);
			}else
			{
				while(!GET_BIT(TIFR_R,2));
    1872:	08 b6       	in	r0, 0x38	; 56
    1874:	02 fe       	sbrs	r0, 2
    1876:	fd cf       	rjmp	.-6      	; 0x1872 <Timer_GetStatus+0x222>
				TCNT1_R=0;
    1878:	1d bc       	out	0x2d, r1	; 45
    187a:	1c bc       	out	0x2c, r1	; 44
				SET_BIT(TIFR_R,2);
    187c:	88 b7       	in	r24, 0x38	; 56
    187e:	84 60       	ori	r24, 0x04	; 4
    1880:	88 bf       	out	0x38, r24	; 56
				overflow++;
    1882:	80 91 8c 00 	lds	r24, 0x008C	; 0x80008c <overflow.1749>
    1886:	90 91 8d 00 	lds	r25, 0x008D	; 0x80008d <overflow.1749+0x1>
    188a:	a0 91 8e 00 	lds	r26, 0x008E	; 0x80008e <overflow.1749+0x2>
    188e:	b0 91 8f 00 	lds	r27, 0x008F	; 0x80008f <overflow.1749+0x3>
    1892:	01 96       	adiw	r24, 0x01	; 1
    1894:	a1 1d       	adc	r26, r1
    1896:	b1 1d       	adc	r27, r1
    1898:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <overflow.1749>
    189c:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <overflow.1749+0x1>
    18a0:	a0 93 8e 00 	sts	0x008E, r26	; 0x80008e <overflow.1749+0x2>
    18a4:	b0 93 8f 00 	sts	0x008F, r27	; 0x80008f <overflow.1749+0x3>
				if(overflow==count)
    18a8:	40 91 a2 00 	lds	r20, 0x00A2	; 0x8000a2 <count>
    18ac:	50 91 a3 00 	lds	r21, 0x00A3	; 0x8000a3 <count+0x1>
    18b0:	60 91 a4 00 	lds	r22, 0x00A4	; 0x8000a4 <count+0x2>
    18b4:	70 91 a5 00 	lds	r23, 0x00A5	; 0x8000a5 <count+0x3>
    18b8:	84 17       	cp	r24, r20
    18ba:	95 07       	cpc	r25, r21
    18bc:	a6 07       	cpc	r26, r22
    18be:	b7 07       	cpc	r27, r23
    18c0:	09 f0       	breq	.+2      	; 0x18c4 <Timer_GetStatus+0x274>
    18c2:	c4 c0       	rjmp	.+392    	; 0x1a4c <Timer_GetStatus+0x3fc>
				{
					F_PTR();
    18c4:	e0 91 93 00 	lds	r30, 0x0093	; 0x800093 <F_PTR>
    18c8:	f0 91 94 00 	lds	r31, 0x0094	; 0x800094 <F_PTR+0x1>
    18cc:	09 95       	icall
					overflow=0;
    18ce:	10 92 8c 00 	sts	0x008C, r1	; 0x80008c <overflow.1749>
    18d2:	10 92 8d 00 	sts	0x008D, r1	; 0x80008d <overflow.1749+0x1>
    18d6:	10 92 8e 00 	sts	0x008E, r1	; 0x80008e <overflow.1749+0x2>
    18da:	10 92 8f 00 	sts	0x008F, r1	; 0x80008f <overflow.1749+0x3>
			((astrTimerConfigParameters[u8GroupId].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Set_OC0))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Set_OC1))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Set_OC2))&&
			(u8GroupId<TM_GROUPS_NO)
			)
			{Error = E_OK;	
    18de:	81 e0       	ldi	r24, 0x01	; 1
    18e0:	08 95       	ret
				{
					F_PTR();
					overflow=0;
				}	
			}			
		}else if(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER2)
    18e2:	92 30       	cpi	r25, 0x02	; 2
    18e4:	09 f0       	breq	.+2      	; 0x18e8 <Timer_GetStatus+0x298>
    18e6:	b4 c0       	rjmp	.+360    	; 0x1a50 <Timer_GetStatus+0x400>
		{
			if(Flag_2==1)
    18e8:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <Flag_2>
    18ec:	81 30       	cpi	r24, 0x01	; 1
    18ee:	79 f5       	brne	.+94     	; 0x194e <Timer_GetStatus+0x2fe>
			{
				while(!GET_BIT(TIFR_R,0));
    18f0:	08 b6       	in	r0, 0x38	; 56
    18f2:	00 fe       	sbrs	r0, 0
    18f4:	fd cf       	rjmp	.-6      	; 0x18f0 <Timer_GetStatus+0x2a0>
				F_PTR();
    18f6:	e0 91 93 00 	lds	r30, 0x0093	; 0x800093 <F_PTR>
    18fa:	f0 91 94 00 	lds	r31, 0x0094	; 0x800094 <F_PTR+0x1>
    18fe:	09 95       	icall
				TCNT1_R=256-(256-(ARR2*256));
    1900:	20 e0       	ldi	r18, 0x00	; 0
    1902:	30 e0       	ldi	r19, 0x00	; 0
    1904:	40 e8       	ldi	r20, 0x80	; 128
    1906:	53 e4       	ldi	r21, 0x43	; 67
    1908:	60 91 9e 00 	lds	r22, 0x009E	; 0x80009e <ARR2>
    190c:	70 91 9f 00 	lds	r23, 0x009F	; 0x80009f <ARR2+0x1>
    1910:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <ARR2+0x2>
    1914:	90 91 a1 00 	lds	r25, 0x00A1	; 0x8000a1 <ARR2+0x3>
    1918:	0e 94 3a 11 	call	0x2274	; 0x2274 <__mulsf3>
    191c:	9b 01       	movw	r18, r22
    191e:	ac 01       	movw	r20, r24
    1920:	60 e0       	ldi	r22, 0x00	; 0
    1922:	70 e0       	ldi	r23, 0x00	; 0
    1924:	80 e8       	ldi	r24, 0x80	; 128
    1926:	93 e4       	ldi	r25, 0x43	; 67
    1928:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <__subsf3>
    192c:	9b 01       	movw	r18, r22
    192e:	ac 01       	movw	r20, r24
    1930:	60 e0       	ldi	r22, 0x00	; 0
    1932:	70 e0       	ldi	r23, 0x00	; 0
    1934:	80 e8       	ldi	r24, 0x80	; 128
    1936:	93 e4       	ldi	r25, 0x43	; 67
    1938:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <__subsf3>
    193c:	0e 94 3a 10 	call	0x2074	; 0x2074 <__fixunssfsi>
    1940:	7d bd       	out	0x2d, r23	; 45
    1942:	6c bd       	out	0x2c, r22	; 44
				SET_BIT(TIFR_R,0);	
    1944:	88 b7       	in	r24, 0x38	; 56
    1946:	81 60       	ori	r24, 0x01	; 1
    1948:	88 bf       	out	0x38, r24	; 56
			((astrTimerConfigParameters[u8GroupId].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Set_OC0))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Set_OC1))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Set_OC2))&&
			(u8GroupId<TM_GROUPS_NO)
			)
			{Error = E_OK;	
    194a:	81 e0       	ldi	r24, 0x01	; 1
    194c:	08 95       	ret
				F_PTR();
				TCNT1_R=256-(256-(ARR2*256));
				SET_BIT(TIFR_R,0);	
			}else
			{
				while(!GET_BIT(TIFR_R,6));
    194e:	08 b6       	in	r0, 0x38	; 56
    1950:	06 fe       	sbrs	r0, 6
    1952:	fd cf       	rjmp	.-6      	; 0x194e <Timer_GetStatus+0x2fe>
				TCNT2_R=0;
    1954:	14 bc       	out	0x24, r1	; 36
				SET_BIT(TIFR_R,6);
    1956:	88 b7       	in	r24, 0x38	; 56
    1958:	80 64       	ori	r24, 0x40	; 64
    195a:	88 bf       	out	0x38, r24	; 56
				overflow++;
    195c:	80 91 8c 00 	lds	r24, 0x008C	; 0x80008c <overflow.1749>
    1960:	90 91 8d 00 	lds	r25, 0x008D	; 0x80008d <overflow.1749+0x1>
    1964:	a0 91 8e 00 	lds	r26, 0x008E	; 0x80008e <overflow.1749+0x2>
    1968:	b0 91 8f 00 	lds	r27, 0x008F	; 0x80008f <overflow.1749+0x3>
    196c:	01 96       	adiw	r24, 0x01	; 1
    196e:	a1 1d       	adc	r26, r1
    1970:	b1 1d       	adc	r27, r1
    1972:	80 93 8c 00 	sts	0x008C, r24	; 0x80008c <overflow.1749>
    1976:	90 93 8d 00 	sts	0x008D, r25	; 0x80008d <overflow.1749+0x1>
    197a:	a0 93 8e 00 	sts	0x008E, r26	; 0x80008e <overflow.1749+0x2>
    197e:	b0 93 8f 00 	sts	0x008F, r27	; 0x80008f <overflow.1749+0x3>
				if(overflow==count)
    1982:	40 91 a2 00 	lds	r20, 0x00A2	; 0x8000a2 <count>
    1986:	50 91 a3 00 	lds	r21, 0x00A3	; 0x8000a3 <count+0x1>
    198a:	60 91 a4 00 	lds	r22, 0x00A4	; 0x8000a4 <count+0x2>
    198e:	70 91 a5 00 	lds	r23, 0x00A5	; 0x8000a5 <count+0x3>
    1992:	84 17       	cp	r24, r20
    1994:	95 07       	cpc	r25, r21
    1996:	a6 07       	cpc	r26, r22
    1998:	b7 07       	cpc	r27, r23
    199a:	09 f0       	breq	.+2      	; 0x199e <Timer_GetStatus+0x34e>
    199c:	5b c0       	rjmp	.+182    	; 0x1a54 <Timer_GetStatus+0x404>
				{
					F_PTR();
    199e:	e0 91 93 00 	lds	r30, 0x0093	; 0x800093 <F_PTR>
    19a2:	f0 91 94 00 	lds	r31, 0x0094	; 0x800094 <F_PTR+0x1>
    19a6:	09 95       	icall
					overflow=0;
    19a8:	10 92 8c 00 	sts	0x008C, r1	; 0x80008c <overflow.1749>
    19ac:	10 92 8d 00 	sts	0x008D, r1	; 0x80008d <overflow.1749+0x1>
    19b0:	10 92 8e 00 	sts	0x008E, r1	; 0x80008e <overflow.1749+0x2>
    19b4:	10 92 8f 00 	sts	0x008F, r1	; 0x80008f <overflow.1749+0x3>
			((astrTimerConfigParameters[u8GroupId].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Set_OC0))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Set_OC1))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Set_OC2))&&
			(u8GroupId<TM_GROUPS_NO)
			)
			{Error = E_OK;	
    19b8:	81 e0       	ldi	r24, 0x01	; 1
    19ba:	08 95       	ret
					F_PTR();
					overflow=0;
				}
			}			
		}
	}else if(astrTimerConfigParameters[u8GroupId].enuTimerMode==CTC)
    19bc:	41 30       	cpi	r20, 0x01	; 1
    19be:	09 f0       	breq	.+2      	; 0x19c2 <Timer_GetStatus+0x372>
    19c0:	4b c0       	rjmp	.+150    	; 0x1a58 <Timer_GetStatus+0x408>
	{
		if(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER0)
    19c2:	91 11       	cpse	r25, r1
    19c4:	0e c0       	rjmp	.+28     	; 0x19e2 <Timer_GetStatus+0x392>
		{
			while(!GET_BIT(TIFR_R,1));
    19c6:	08 b6       	in	r0, 0x38	; 56
    19c8:	01 fe       	sbrs	r0, 1
    19ca:	fd cf       	rjmp	.-6      	; 0x19c6 <Timer_GetStatus+0x376>
			F_PTR();
    19cc:	e0 91 93 00 	lds	r30, 0x0093	; 0x800093 <F_PTR>
    19d0:	f0 91 94 00 	lds	r31, 0x0094	; 0x800094 <F_PTR+0x1>
    19d4:	09 95       	icall
			TCNT0_R=0;
    19d6:	12 be       	out	0x32, r1	; 50
			SET_BIT(TIFR_R,1);
    19d8:	88 b7       	in	r24, 0x38	; 56
    19da:	82 60       	ori	r24, 0x02	; 2
    19dc:	88 bf       	out	0x38, r24	; 56
			((astrTimerConfigParameters[u8GroupId].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Set_OC0))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Set_OC1))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Set_OC2))&&
			(u8GroupId<TM_GROUPS_NO)
			)
			{Error = E_OK;	
    19de:	81 e0       	ldi	r24, 0x01	; 1
    19e0:	08 95       	ret
		{
			while(!GET_BIT(TIFR_R,1));
			F_PTR();
			TCNT0_R=0;
			SET_BIT(TIFR_R,1);
		}else if(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER1)
    19e2:	91 30       	cpi	r25, 0x01	; 1
    19e4:	79 f4       	brne	.+30     	; 0x1a04 <Timer_GetStatus+0x3b4>
		{
			while(!GET_BIT(TIFR_R,4));
    19e6:	08 b6       	in	r0, 0x38	; 56
    19e8:	04 fe       	sbrs	r0, 4
    19ea:	fd cf       	rjmp	.-6      	; 0x19e6 <Timer_GetStatus+0x396>
			F_PTR();
    19ec:	e0 91 93 00 	lds	r30, 0x0093	; 0x800093 <F_PTR>
    19f0:	f0 91 94 00 	lds	r31, 0x0094	; 0x800094 <F_PTR+0x1>
    19f4:	09 95       	icall
			TCNT1_R=0;
    19f6:	1d bc       	out	0x2d, r1	; 45
    19f8:	1c bc       	out	0x2c, r1	; 44
			SET_BIT(TIFR_R,4);			
    19fa:	88 b7       	in	r24, 0x38	; 56
    19fc:	80 61       	ori	r24, 0x10	; 16
    19fe:	88 bf       	out	0x38, r24	; 56
			((astrTimerConfigParameters[u8GroupId].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Set_OC0))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Set_OC1))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Set_OC2))&&
			(u8GroupId<TM_GROUPS_NO)
			)
			{Error = E_OK;	
    1a00:	81 e0       	ldi	r24, 0x01	; 1
    1a02:	08 95       	ret
		{
			while(!GET_BIT(TIFR_R,4));
			F_PTR();
			TCNT1_R=0;
			SET_BIT(TIFR_R,4);			
		}else if(astrTimerConfigParameters[u8GroupId].enuTimerModule==TIMER2)
    1a04:	92 30       	cpi	r25, 0x02	; 2
    1a06:	51 f5       	brne	.+84     	; 0x1a5c <Timer_GetStatus+0x40c>
		{
			while(!GET_BIT(TIFR_R,7));
    1a08:	08 b6       	in	r0, 0x38	; 56
    1a0a:	07 fe       	sbrs	r0, 7
    1a0c:	fd cf       	rjmp	.-6      	; 0x1a08 <Timer_GetStatus+0x3b8>
			F_PTR();
    1a0e:	e0 91 93 00 	lds	r30, 0x0093	; 0x800093 <F_PTR>
    1a12:	f0 91 94 00 	lds	r31, 0x0094	; 0x800094 <F_PTR+0x1>
    1a16:	09 95       	icall
			TCNT2_R=0;
    1a18:	14 bc       	out	0x24, r1	; 36
			SET_BIT(TIFR_R,7);			
    1a1a:	88 b7       	in	r24, 0x38	; 56
    1a1c:	80 68       	ori	r24, 0x80	; 128
    1a1e:	88 bf       	out	0x38, r24	; 56
			((astrTimerConfigParameters[u8GroupId].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Set_OC0))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Set_OC1))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Set_OC2))&&
			(u8GroupId<TM_GROUPS_NO)
			)
			{Error = E_OK;	
    1a20:	81 e0       	ldi	r24, 0x01	; 1
    1a22:	08 95       	ret
	}

	
enuErrorStatus_t Timer_GetStatus(uint8_t u8GroupId)
{
	enuErrorStatus_t Error = E_ERROR;
    1a24:	80 e0       	ldi	r24, 0x00	; 0
    1a26:	08 95       	ret
    1a28:	80 e0       	ldi	r24, 0x00	; 0
    1a2a:	08 95       	ret
    1a2c:	80 e0       	ldi	r24, 0x00	; 0
    1a2e:	08 95       	ret
    1a30:	80 e0       	ldi	r24, 0x00	; 0
    1a32:	08 95       	ret
    1a34:	80 e0       	ldi	r24, 0x00	; 0
    1a36:	08 95       	ret
    1a38:	80 e0       	ldi	r24, 0x00	; 0
    1a3a:	08 95       	ret
    1a3c:	80 e0       	ldi	r24, 0x00	; 0
    1a3e:	08 95       	ret
    1a40:	80 e0       	ldi	r24, 0x00	; 0
    1a42:	08 95       	ret
			((astrTimerConfigParameters[u8GroupId].enuCTCMode0==OC0_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Toggle_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Clear_OC0)||(astrTimerConfigParameters[u8GroupId].enuCTCMode0==Set_OC0))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode1==OC1_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Toggle_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Clear_OC1)||(astrTimerConfigParameters[u8GroupId].enuCTCMode1==Set_OC1))&&
			((astrTimerConfigParameters[u8GroupId].enuCTCMode2==OC2_Disconnected)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Toggle_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Clear_OC2)||(astrTimerConfigParameters[u8GroupId].enuCTCMode2==Set_OC2))&&
			(u8GroupId<TM_GROUPS_NO)
			)
			{Error = E_OK;	
    1a44:	81 e0       	ldi	r24, 0x01	; 1
    1a46:	08 95       	ret
    1a48:	81 e0       	ldi	r24, 0x01	; 1
    1a4a:	08 95       	ret
    1a4c:	81 e0       	ldi	r24, 0x01	; 1
    1a4e:	08 95       	ret
    1a50:	81 e0       	ldi	r24, 0x01	; 1
    1a52:	08 95       	ret
    1a54:	81 e0       	ldi	r24, 0x01	; 1
    1a56:	08 95       	ret
    1a58:	81 e0       	ldi	r24, 0x01	; 1
    1a5a:	08 95       	ret
    1a5c:	81 e0       	ldi	r24, 0x01	; 1
		{
			
		}
		}
	return Error;
}
    1a5e:	08 95       	ret

00001a60 <__vector_11>:

ISR(TIMER0_OVF_vect)
{
    1a60:	1f 92       	push	r1
    1a62:	0f 92       	push	r0
    1a64:	0f b6       	in	r0, 0x3f	; 63
    1a66:	0f 92       	push	r0
    1a68:	11 24       	eor	r1, r1
    1a6a:	2f 93       	push	r18
    1a6c:	3f 93       	push	r19
    1a6e:	4f 93       	push	r20
    1a70:	5f 93       	push	r21
    1a72:	6f 93       	push	r22
    1a74:	7f 93       	push	r23
    1a76:	8f 93       	push	r24
    1a78:	9f 93       	push	r25
    1a7a:	af 93       	push	r26
    1a7c:	bf 93       	push	r27
    1a7e:	ef 93       	push	r30
    1a80:	ff 93       	push	r31
	if(F_PTR != NULL)
    1a82:	e0 91 93 00 	lds	r30, 0x0093	; 0x800093 <F_PTR>
    1a86:	f0 91 94 00 	lds	r31, 0x0094	; 0x800094 <F_PTR+0x1>
    1a8a:	30 97       	sbiw	r30, 0x00	; 0
    1a8c:	09 f4       	brne	.+2      	; 0x1a90 <__vector_11+0x30>
    1a8e:	4e c0       	rjmp	.+156    	; 0x1b2c <__vector_11+0xcc>
	{
		if(Flag_0==0)
    1a90:	80 91 92 00 	lds	r24, 0x0092	; 0x800092 <Flag_0>
    1a94:	81 11       	cpse	r24, r1
    1a96:	30 c0       	rjmp	.+96     	; 0x1af8 <__vector_11+0x98>
		{
			static uint32_t overflow_0=0;
			if(overflow_0==count)
    1a98:	80 91 88 00 	lds	r24, 0x0088	; 0x800088 <overflow_0.1782>
    1a9c:	90 91 89 00 	lds	r25, 0x0089	; 0x800089 <overflow_0.1782+0x1>
    1aa0:	a0 91 8a 00 	lds	r26, 0x008A	; 0x80008a <overflow_0.1782+0x2>
    1aa4:	b0 91 8b 00 	lds	r27, 0x008B	; 0x80008b <overflow_0.1782+0x3>
    1aa8:	40 91 a2 00 	lds	r20, 0x00A2	; 0x8000a2 <count>
    1aac:	50 91 a3 00 	lds	r21, 0x00A3	; 0x8000a3 <count+0x1>
    1ab0:	60 91 a4 00 	lds	r22, 0x00A4	; 0x8000a4 <count+0x2>
    1ab4:	70 91 a5 00 	lds	r23, 0x00A5	; 0x8000a5 <count+0x3>
    1ab8:	84 17       	cp	r24, r20
    1aba:	95 07       	cpc	r25, r21
    1abc:	a6 07       	cpc	r26, r22
    1abe:	b7 07       	cpc	r27, r23
    1ac0:	79 f4       	brne	.+30     	; 0x1ae0 <__vector_11+0x80>
			{
				overflow_0=0;
    1ac2:	10 92 88 00 	sts	0x0088, r1	; 0x800088 <overflow_0.1782>
    1ac6:	10 92 89 00 	sts	0x0089, r1	; 0x800089 <overflow_0.1782+0x1>
    1aca:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <overflow_0.1782+0x2>
    1ace:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <overflow_0.1782+0x3>
				TCNT0_R=0;
    1ad2:	12 be       	out	0x32, r1	; 50
				F_PTR();
    1ad4:	e0 91 93 00 	lds	r30, 0x0093	; 0x800093 <F_PTR>
    1ad8:	f0 91 94 00 	lds	r31, 0x0094	; 0x800094 <F_PTR+0x1>
    1adc:	09 95       	icall
    1ade:	26 c0       	rjmp	.+76     	; 0x1b2c <__vector_11+0xcc>
			}else
			{
				overflow_0++;
    1ae0:	01 96       	adiw	r24, 0x01	; 1
    1ae2:	a1 1d       	adc	r26, r1
    1ae4:	b1 1d       	adc	r27, r1
    1ae6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <overflow_0.1782>
    1aea:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <overflow_0.1782+0x1>
    1aee:	a0 93 8a 00 	sts	0x008A, r26	; 0x80008a <overflow_0.1782+0x2>
    1af2:	b0 93 8b 00 	sts	0x008B, r27	; 0x80008b <overflow_0.1782+0x3>
    1af6:	1a c0       	rjmp	.+52     	; 0x1b2c <__vector_11+0xcc>
			}
	}else
	{
		F_PTR();
    1af8:	09 95       	icall
			TCNT0_R=(256-(ARR2*256));
    1afa:	20 e0       	ldi	r18, 0x00	; 0
    1afc:	30 e0       	ldi	r19, 0x00	; 0
    1afe:	40 e8       	ldi	r20, 0x80	; 128
    1b00:	53 e4       	ldi	r21, 0x43	; 67
    1b02:	60 91 9e 00 	lds	r22, 0x009E	; 0x80009e <ARR2>
    1b06:	70 91 9f 00 	lds	r23, 0x009F	; 0x80009f <ARR2+0x1>
    1b0a:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <ARR2+0x2>
    1b0e:	90 91 a1 00 	lds	r25, 0x00A1	; 0x8000a1 <ARR2+0x3>
    1b12:	0e 94 3a 11 	call	0x2274	; 0x2274 <__mulsf3>
    1b16:	9b 01       	movw	r18, r22
    1b18:	ac 01       	movw	r20, r24
    1b1a:	60 e0       	ldi	r22, 0x00	; 0
    1b1c:	70 e0       	ldi	r23, 0x00	; 0
    1b1e:	80 e8       	ldi	r24, 0x80	; 128
    1b20:	93 e4       	ldi	r25, 0x43	; 67
    1b22:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <__subsf3>
    1b26:	0e 94 3a 10 	call	0x2074	; 0x2074 <__fixunssfsi>
    1b2a:	62 bf       	out	0x32, r22	; 50
			//SET_BIT(TIFR_R,0);
	}
}
	}
    1b2c:	ff 91       	pop	r31
    1b2e:	ef 91       	pop	r30
    1b30:	bf 91       	pop	r27
    1b32:	af 91       	pop	r26
    1b34:	9f 91       	pop	r25
    1b36:	8f 91       	pop	r24
    1b38:	7f 91       	pop	r23
    1b3a:	6f 91       	pop	r22
    1b3c:	5f 91       	pop	r21
    1b3e:	4f 91       	pop	r20
    1b40:	3f 91       	pop	r19
    1b42:	2f 91       	pop	r18
    1b44:	0f 90       	pop	r0
    1b46:	0f be       	out	0x3f, r0	; 63
    1b48:	0f 90       	pop	r0
    1b4a:	1f 90       	pop	r1
    1b4c:	18 95       	reti

00001b4e <__vector_10>:
	
ISR(TIMER0_OC_vect)
{
    1b4e:	1f 92       	push	r1
    1b50:	0f 92       	push	r0
    1b52:	0f b6       	in	r0, 0x3f	; 63
    1b54:	0f 92       	push	r0
    1b56:	11 24       	eor	r1, r1
    1b58:	2f 93       	push	r18
    1b5a:	3f 93       	push	r19
    1b5c:	4f 93       	push	r20
    1b5e:	5f 93       	push	r21
    1b60:	6f 93       	push	r22
    1b62:	7f 93       	push	r23
    1b64:	8f 93       	push	r24
    1b66:	9f 93       	push	r25
    1b68:	af 93       	push	r26
    1b6a:	bf 93       	push	r27
    1b6c:	ef 93       	push	r30
    1b6e:	ff 93       	push	r31
	if(F_PTR != NULL)
    1b70:	e0 91 93 00 	lds	r30, 0x0093	; 0x800093 <F_PTR>
    1b74:	f0 91 94 00 	lds	r31, 0x0094	; 0x800094 <F_PTR+0x1>
    1b78:	30 97       	sbiw	r30, 0x00	; 0
    1b7a:	11 f0       	breq	.+4      	; 0x1b80 <__vector_10+0x32>
	{
			F_PTR();
    1b7c:	09 95       	icall
			TCNT0_R=0;
    1b7e:	12 be       	out	0x32, r1	; 50
	}
}
    1b80:	ff 91       	pop	r31
    1b82:	ef 91       	pop	r30
    1b84:	bf 91       	pop	r27
    1b86:	af 91       	pop	r26
    1b88:	9f 91       	pop	r25
    1b8a:	8f 91       	pop	r24
    1b8c:	7f 91       	pop	r23
    1b8e:	6f 91       	pop	r22
    1b90:	5f 91       	pop	r21
    1b92:	4f 91       	pop	r20
    1b94:	3f 91       	pop	r19
    1b96:	2f 91       	pop	r18
    1b98:	0f 90       	pop	r0
    1b9a:	0f be       	out	0x3f, r0	; 63
    1b9c:	0f 90       	pop	r0
    1b9e:	1f 90       	pop	r1
    1ba0:	18 95       	reti

00001ba2 <__vector_9>:

ISR(TIMER1_OVF_vect)
{
    1ba2:	1f 92       	push	r1
    1ba4:	0f 92       	push	r0
    1ba6:	0f b6       	in	r0, 0x3f	; 63
    1ba8:	0f 92       	push	r0
    1baa:	11 24       	eor	r1, r1
    1bac:	2f 93       	push	r18
    1bae:	3f 93       	push	r19
    1bb0:	4f 93       	push	r20
    1bb2:	5f 93       	push	r21
    1bb4:	6f 93       	push	r22
    1bb6:	7f 93       	push	r23
    1bb8:	8f 93       	push	r24
    1bba:	9f 93       	push	r25
    1bbc:	af 93       	push	r26
    1bbe:	bf 93       	push	r27
    1bc0:	ef 93       	push	r30
    1bc2:	ff 93       	push	r31
	if(F_PTR != NULL)
    1bc4:	e0 91 93 00 	lds	r30, 0x0093	; 0x800093 <F_PTR>
    1bc8:	f0 91 94 00 	lds	r31, 0x0094	; 0x800094 <F_PTR+0x1>
    1bcc:	30 97       	sbiw	r30, 0x00	; 0
    1bce:	09 f4       	brne	.+2      	; 0x1bd2 <__vector_9+0x30>
    1bd0:	48 c0       	rjmp	.+144    	; 0x1c62 <__vector_9+0xc0>
	{
		if(Flag_1==0)
    1bd2:	80 91 91 00 	lds	r24, 0x0091	; 0x800091 <Flag_1>
    1bd6:	81 11       	cpse	r24, r1
    1bd8:	31 c0       	rjmp	.+98     	; 0x1c3c <__vector_9+0x9a>
		{
			static uint32_t overflow_1=0;
			if(overflow_1==count)
    1bda:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <overflow_1.1793>
    1bde:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <overflow_1.1793+0x1>
    1be2:	a0 91 86 00 	lds	r26, 0x0086	; 0x800086 <overflow_1.1793+0x2>
    1be6:	b0 91 87 00 	lds	r27, 0x0087	; 0x800087 <overflow_1.1793+0x3>
    1bea:	40 91 a2 00 	lds	r20, 0x00A2	; 0x8000a2 <count>
    1bee:	50 91 a3 00 	lds	r21, 0x00A3	; 0x8000a3 <count+0x1>
    1bf2:	60 91 a4 00 	lds	r22, 0x00A4	; 0x8000a4 <count+0x2>
    1bf6:	70 91 a5 00 	lds	r23, 0x00A5	; 0x8000a5 <count+0x3>
    1bfa:	84 17       	cp	r24, r20
    1bfc:	95 07       	cpc	r25, r21
    1bfe:	a6 07       	cpc	r26, r22
    1c00:	b7 07       	cpc	r27, r23
    1c02:	81 f4       	brne	.+32     	; 0x1c24 <__vector_9+0x82>
			{
				overflow_1=0;
    1c04:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <overflow_1.1793>
    1c08:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <overflow_1.1793+0x1>
    1c0c:	10 92 86 00 	sts	0x0086, r1	; 0x800086 <overflow_1.1793+0x2>
    1c10:	10 92 87 00 	sts	0x0087, r1	; 0x800087 <overflow_1.1793+0x3>
				TCNT1_R=0;
    1c14:	1d bc       	out	0x2d, r1	; 45
    1c16:	1c bc       	out	0x2c, r1	; 44
				F_PTR();
    1c18:	e0 91 93 00 	lds	r30, 0x0093	; 0x800093 <F_PTR>
    1c1c:	f0 91 94 00 	lds	r31, 0x0094	; 0x800094 <F_PTR+0x1>
    1c20:	09 95       	icall
    1c22:	1f c0       	rjmp	.+62     	; 0x1c62 <__vector_9+0xc0>
			}else
			{
				overflow_1++;
    1c24:	01 96       	adiw	r24, 0x01	; 1
    1c26:	a1 1d       	adc	r26, r1
    1c28:	b1 1d       	adc	r27, r1
    1c2a:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <overflow_1.1793>
    1c2e:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <overflow_1.1793+0x1>
    1c32:	a0 93 86 00 	sts	0x0086, r26	; 0x800086 <overflow_1.1793+0x2>
    1c36:	b0 93 87 00 	sts	0x0087, r27	; 0x800087 <overflow_1.1793+0x3>
    1c3a:	13 c0       	rjmp	.+38     	; 0x1c62 <__vector_9+0xc0>
			}
		}else
		{
			F_PTR();
    1c3c:	09 95       	icall
			TCNT1_R=(65535-(ARR2));
    1c3e:	20 91 9e 00 	lds	r18, 0x009E	; 0x80009e <ARR2>
    1c42:	30 91 9f 00 	lds	r19, 0x009F	; 0x80009f <ARR2+0x1>
    1c46:	40 91 a0 00 	lds	r20, 0x00A0	; 0x8000a0 <ARR2+0x2>
    1c4a:	50 91 a1 00 	lds	r21, 0x00A1	; 0x8000a1 <ARR2+0x3>
    1c4e:	60 e0       	ldi	r22, 0x00	; 0
    1c50:	7f ef       	ldi	r23, 0xFF	; 255
    1c52:	8f e7       	ldi	r24, 0x7F	; 127
    1c54:	97 e4       	ldi	r25, 0x47	; 71
    1c56:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <__subsf3>
    1c5a:	0e 94 3a 10 	call	0x2074	; 0x2074 <__fixunssfsi>
    1c5e:	7d bd       	out	0x2d, r23	; 45
    1c60:	6c bd       	out	0x2c, r22	; 44
		}
	}
}
    1c62:	ff 91       	pop	r31
    1c64:	ef 91       	pop	r30
    1c66:	bf 91       	pop	r27
    1c68:	af 91       	pop	r26
    1c6a:	9f 91       	pop	r25
    1c6c:	8f 91       	pop	r24
    1c6e:	7f 91       	pop	r23
    1c70:	6f 91       	pop	r22
    1c72:	5f 91       	pop	r21
    1c74:	4f 91       	pop	r20
    1c76:	3f 91       	pop	r19
    1c78:	2f 91       	pop	r18
    1c7a:	0f 90       	pop	r0
    1c7c:	0f be       	out	0x3f, r0	; 63
    1c7e:	0f 90       	pop	r0
    1c80:	1f 90       	pop	r1
    1c82:	18 95       	reti

00001c84 <__vector_7>:

ISR(TIMER1_OCA_vect)
{
    1c84:	1f 92       	push	r1
    1c86:	0f 92       	push	r0
    1c88:	0f b6       	in	r0, 0x3f	; 63
    1c8a:	0f 92       	push	r0
    1c8c:	11 24       	eor	r1, r1
    1c8e:	2f 93       	push	r18
    1c90:	3f 93       	push	r19
    1c92:	4f 93       	push	r20
    1c94:	5f 93       	push	r21
    1c96:	6f 93       	push	r22
    1c98:	7f 93       	push	r23
    1c9a:	8f 93       	push	r24
    1c9c:	9f 93       	push	r25
    1c9e:	af 93       	push	r26
    1ca0:	bf 93       	push	r27
    1ca2:	ef 93       	push	r30
    1ca4:	ff 93       	push	r31
	if(F_PTR != NULL)
    1ca6:	e0 91 93 00 	lds	r30, 0x0093	; 0x800093 <F_PTR>
    1caa:	f0 91 94 00 	lds	r31, 0x0094	; 0x800094 <F_PTR+0x1>
    1cae:	30 97       	sbiw	r30, 0x00	; 0
    1cb0:	19 f0       	breq	.+6      	; 0x1cb8 <__vector_7+0x34>
	{
		F_PTR();
    1cb2:	09 95       	icall
		TCNT1_R=0;
    1cb4:	1d bc       	out	0x2d, r1	; 45
    1cb6:	1c bc       	out	0x2c, r1	; 44
	}
}
    1cb8:	ff 91       	pop	r31
    1cba:	ef 91       	pop	r30
    1cbc:	bf 91       	pop	r27
    1cbe:	af 91       	pop	r26
    1cc0:	9f 91       	pop	r25
    1cc2:	8f 91       	pop	r24
    1cc4:	7f 91       	pop	r23
    1cc6:	6f 91       	pop	r22
    1cc8:	5f 91       	pop	r21
    1cca:	4f 91       	pop	r20
    1ccc:	3f 91       	pop	r19
    1cce:	2f 91       	pop	r18
    1cd0:	0f 90       	pop	r0
    1cd2:	0f be       	out	0x3f, r0	; 63
    1cd4:	0f 90       	pop	r0
    1cd6:	1f 90       	pop	r1
    1cd8:	18 95       	reti

00001cda <__vector_5>:

ISR(TIMER2_OVF_vect)
{
    1cda:	1f 92       	push	r1
    1cdc:	0f 92       	push	r0
    1cde:	0f b6       	in	r0, 0x3f	; 63
    1ce0:	0f 92       	push	r0
    1ce2:	11 24       	eor	r1, r1
    1ce4:	2f 93       	push	r18
    1ce6:	3f 93       	push	r19
    1ce8:	4f 93       	push	r20
    1cea:	5f 93       	push	r21
    1cec:	6f 93       	push	r22
    1cee:	7f 93       	push	r23
    1cf0:	8f 93       	push	r24
    1cf2:	9f 93       	push	r25
    1cf4:	af 93       	push	r26
    1cf6:	bf 93       	push	r27
    1cf8:	ef 93       	push	r30
    1cfa:	ff 93       	push	r31
	if(F_PTR != NULL)
    1cfc:	e0 91 93 00 	lds	r30, 0x0093	; 0x800093 <F_PTR>
    1d00:	f0 91 94 00 	lds	r31, 0x0094	; 0x800094 <F_PTR+0x1>
    1d04:	30 97       	sbiw	r30, 0x00	; 0
    1d06:	09 f4       	brne	.+2      	; 0x1d0a <__vector_5+0x30>
    1d08:	4e c0       	rjmp	.+156    	; 0x1da6 <__vector_5+0xcc>
	{
		if(Flag_2==0)
    1d0a:	80 91 90 00 	lds	r24, 0x0090	; 0x800090 <Flag_2>
    1d0e:	81 11       	cpse	r24, r1
    1d10:	30 c0       	rjmp	.+96     	; 0x1d72 <__vector_5+0x98>
		{
			static uint32_t overflow_2=0;
			if(overflow_2==count)
    1d12:	80 91 80 00 	lds	r24, 0x0080	; 0x800080 <__data_end>
    1d16:	90 91 81 00 	lds	r25, 0x0081	; 0x800081 <__data_end+0x1>
    1d1a:	a0 91 82 00 	lds	r26, 0x0082	; 0x800082 <__data_end+0x2>
    1d1e:	b0 91 83 00 	lds	r27, 0x0083	; 0x800083 <__data_end+0x3>
    1d22:	40 91 a2 00 	lds	r20, 0x00A2	; 0x8000a2 <count>
    1d26:	50 91 a3 00 	lds	r21, 0x00A3	; 0x8000a3 <count+0x1>
    1d2a:	60 91 a4 00 	lds	r22, 0x00A4	; 0x8000a4 <count+0x2>
    1d2e:	70 91 a5 00 	lds	r23, 0x00A5	; 0x8000a5 <count+0x3>
    1d32:	84 17       	cp	r24, r20
    1d34:	95 07       	cpc	r25, r21
    1d36:	a6 07       	cpc	r26, r22
    1d38:	b7 07       	cpc	r27, r23
    1d3a:	79 f4       	brne	.+30     	; 0x1d5a <__vector_5+0x80>
			{
				overflow_2=0;
    1d3c:	10 92 80 00 	sts	0x0080, r1	; 0x800080 <__data_end>
    1d40:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__data_end+0x1>
    1d44:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__data_end+0x2>
    1d48:	10 92 83 00 	sts	0x0083, r1	; 0x800083 <__data_end+0x3>
				TCNT2_R=0;
    1d4c:	14 bc       	out	0x24, r1	; 36
				F_PTR();
    1d4e:	e0 91 93 00 	lds	r30, 0x0093	; 0x800093 <F_PTR>
    1d52:	f0 91 94 00 	lds	r31, 0x0094	; 0x800094 <F_PTR+0x1>
    1d56:	09 95       	icall
    1d58:	26 c0       	rjmp	.+76     	; 0x1da6 <__vector_5+0xcc>
			}else
			{
				overflow_2++;
    1d5a:	01 96       	adiw	r24, 0x01	; 1
    1d5c:	a1 1d       	adc	r26, r1
    1d5e:	b1 1d       	adc	r27, r1
    1d60:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__data_end>
    1d64:	90 93 81 00 	sts	0x0081, r25	; 0x800081 <__data_end+0x1>
    1d68:	a0 93 82 00 	sts	0x0082, r26	; 0x800082 <__data_end+0x2>
    1d6c:	b0 93 83 00 	sts	0x0083, r27	; 0x800083 <__data_end+0x3>
    1d70:	1a c0       	rjmp	.+52     	; 0x1da6 <__vector_5+0xcc>
			}
		}else
		{
			F_PTR();
    1d72:	09 95       	icall
			TCNT2_R=(256-(ARR2*256));
    1d74:	20 e0       	ldi	r18, 0x00	; 0
    1d76:	30 e0       	ldi	r19, 0x00	; 0
    1d78:	40 e8       	ldi	r20, 0x80	; 128
    1d7a:	53 e4       	ldi	r21, 0x43	; 67
    1d7c:	60 91 9e 00 	lds	r22, 0x009E	; 0x80009e <ARR2>
    1d80:	70 91 9f 00 	lds	r23, 0x009F	; 0x80009f <ARR2+0x1>
    1d84:	80 91 a0 00 	lds	r24, 0x00A0	; 0x8000a0 <ARR2+0x2>
    1d88:	90 91 a1 00 	lds	r25, 0x00A1	; 0x8000a1 <ARR2+0x3>
    1d8c:	0e 94 3a 11 	call	0x2274	; 0x2274 <__mulsf3>
    1d90:	9b 01       	movw	r18, r22
    1d92:	ac 01       	movw	r20, r24
    1d94:	60 e0       	ldi	r22, 0x00	; 0
    1d96:	70 e0       	ldi	r23, 0x00	; 0
    1d98:	80 e8       	ldi	r24, 0x80	; 128
    1d9a:	93 e4       	ldi	r25, 0x43	; 67
    1d9c:	0e 94 5b 0f 	call	0x1eb6	; 0x1eb6 <__subsf3>
    1da0:	0e 94 3a 10 	call	0x2074	; 0x2074 <__fixunssfsi>
    1da4:	64 bd       	out	0x24, r22	; 36
			//SET_BIT(TIFR_R,0);
		}
	}	
}
    1da6:	ff 91       	pop	r31
    1da8:	ef 91       	pop	r30
    1daa:	bf 91       	pop	r27
    1dac:	af 91       	pop	r26
    1dae:	9f 91       	pop	r25
    1db0:	8f 91       	pop	r24
    1db2:	7f 91       	pop	r23
    1db4:	6f 91       	pop	r22
    1db6:	5f 91       	pop	r21
    1db8:	4f 91       	pop	r20
    1dba:	3f 91       	pop	r19
    1dbc:	2f 91       	pop	r18
    1dbe:	0f 90       	pop	r0
    1dc0:	0f be       	out	0x3f, r0	; 63
    1dc2:	0f 90       	pop	r0
    1dc4:	1f 90       	pop	r1
    1dc6:	18 95       	reti

00001dc8 <__vector_4>:

ISR(TIMER2_COMP_vect)
{
    1dc8:	1f 92       	push	r1
    1dca:	0f 92       	push	r0
    1dcc:	0f b6       	in	r0, 0x3f	; 63
    1dce:	0f 92       	push	r0
    1dd0:	11 24       	eor	r1, r1
    1dd2:	2f 93       	push	r18
    1dd4:	3f 93       	push	r19
    1dd6:	4f 93       	push	r20
    1dd8:	5f 93       	push	r21
    1dda:	6f 93       	push	r22
    1ddc:	7f 93       	push	r23
    1dde:	8f 93       	push	r24
    1de0:	9f 93       	push	r25
    1de2:	af 93       	push	r26
    1de4:	bf 93       	push	r27
    1de6:	ef 93       	push	r30
    1de8:	ff 93       	push	r31
	if(F_PTR != NULL)
    1dea:	e0 91 93 00 	lds	r30, 0x0093	; 0x800093 <F_PTR>
    1dee:	f0 91 94 00 	lds	r31, 0x0094	; 0x800094 <F_PTR+0x1>
    1df2:	30 97       	sbiw	r30, 0x00	; 0
    1df4:	11 f0       	breq	.+4      	; 0x1dfa <__vector_4+0x32>
	{
		F_PTR();
    1df6:	09 95       	icall
		TCNT2_R=0;
    1df8:	14 bc       	out	0x24, r1	; 36
	}	
}
    1dfa:	ff 91       	pop	r31
    1dfc:	ef 91       	pop	r30
    1dfe:	bf 91       	pop	r27
    1e00:	af 91       	pop	r26
    1e02:	9f 91       	pop	r25
    1e04:	8f 91       	pop	r24
    1e06:	7f 91       	pop	r23
    1e08:	6f 91       	pop	r22
    1e0a:	5f 91       	pop	r21
    1e0c:	4f 91       	pop	r20
    1e0e:	3f 91       	pop	r19
    1e10:	2f 91       	pop	r18
    1e12:	0f 90       	pop	r0
    1e14:	0f be       	out	0x3f, r0	; 63
    1e16:	0f 90       	pop	r0
    1e18:	1f 90       	pop	r1
    1e1a:	18 95       	reti

00001e1c <UART_Init>:
	if(GET_BIT(UCSRA_R,RXC_B))
	{
		*pu16Data=UDR_R;
	}
	return gError;
}
    1e1c:	10 bc       	out	0x20, r1	; 32
    1e1e:	83 e3       	ldi	r24, 0x33	; 51
    1e20:	89 b9       	out	0x09, r24	; 9
    1e22:	88 e1       	ldi	r24, 0x18	; 24
    1e24:	8a b9       	out	0x0a, r24	; 10
    1e26:	80 b5       	in	r24, 0x20	; 32
    1e28:	84 60       	ori	r24, 0x04	; 4
    1e2a:	80 bd       	out	0x20, r24	; 32
    1e2c:	80 b5       	in	r24, 0x20	; 32
    1e2e:	82 60       	ori	r24, 0x02	; 2
    1e30:	80 bd       	out	0x20, r24	; 32
    1e32:	80 b5       	in	r24, 0x20	; 32
    1e34:	8f 7d       	andi	r24, 0xDF	; 223
    1e36:	80 bd       	out	0x20, r24	; 32
    1e38:	80 b5       	in	r24, 0x20	; 32
    1e3a:	8f 7e       	andi	r24, 0xEF	; 239
    1e3c:	80 bd       	out	0x20, r24	; 32
    1e3e:	80 b5       	in	r24, 0x20	; 32
    1e40:	87 7f       	andi	r24, 0xF7	; 247
    1e42:	80 bd       	out	0x20, r24	; 32
    1e44:	81 e0       	ldi	r24, 0x01	; 1
    1e46:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <gError>
    1e4a:	08 95       	ret

00001e4c <UART_SendData>:
    1e4c:	98 2f       	mov	r25, r24
    1e4e:	80 91 95 00 	lds	r24, 0x0095	; 0x800095 <gError>
    1e52:	88 23       	and	r24, r24
    1e54:	41 f0       	breq	.+16     	; 0x1e66 <UART_SendData+0x1a>
    1e56:	81 e0       	ldi	r24, 0x01	; 1
    1e58:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <gError>
    1e5c:	5d 9b       	sbis	0x0b, 5	; 11
    1e5e:	fe cf       	rjmp	.-4      	; 0x1e5c <UART_SendData+0x10>
    1e60:	9c b9       	out	0x0c, r25	; 12
    1e62:	80 91 95 00 	lds	r24, 0x0095	; 0x800095 <gError>
    1e66:	08 95       	ret

00001e68 <UART_SendString>:
* Parameters (out): None
* Return Value    : enuErrorStatus_t - For error handling 
* Description     : Sending a string with UART
*************************************************************/
enuErrorStatus_t UART_SendString(uint8_t* pu8String)
{
    1e68:	ef 92       	push	r14
    1e6a:	ff 92       	push	r15
    1e6c:	0f 93       	push	r16
    1e6e:	1f 93       	push	r17
    1e70:	cf 93       	push	r28
    1e72:	df 93       	push	r29
    1e74:	7c 01       	movw	r14, r24
	if(gError==E_ERROR)
    1e76:	80 91 95 00 	lds	r24, 0x0095	; 0x800095 <gError>
    1e7a:	88 23       	and	r24, r24
    1e7c:	a9 f0       	breq	.+42     	; 0x1ea8 <UART_SendString+0x40>
	{
		return E_ERROR;
	}
	gError=E_OK;
    1e7e:	81 e0       	ldi	r24, 0x01	; 1
    1e80:	80 93 95 00 	sts	0x0095, r24	; 0x800095 <gError>
    1e84:	e7 01       	movw	r28, r14
    1e86:	8f ef       	ldi	r24, 0xFF	; 255
    1e88:	e8 0e       	add	r14, r24
    1e8a:	f1 1c       	adc	r15, r1
    1e8c:	8e 01       	movw	r16, r28
	uint8_t i=0;
	for(i=0;i<MAX_LEN;i++)
	{
		UART_SendData(pu8String[i]);
    1e8e:	89 91       	ld	r24, Y+
    1e90:	90 e0       	ldi	r25, 0x00	; 0
    1e92:	0e 94 26 0f 	call	0x1e4c	; 0x1e4c <UART_SendData>
		if(pu8String[i]==0)
    1e96:	f8 01       	movw	r30, r16
    1e98:	90 81       	ld	r25, Z
    1e9a:	99 23       	and	r25, r25
    1e9c:	19 f0       	breq	.+6      	; 0x1ea4 <UART_SendString+0x3c>
	{
		return E_ERROR;
	}
	gError=E_OK;
	uint8_t i=0;
	for(i=0;i<MAX_LEN;i++)
    1e9e:	ce 15       	cp	r28, r14
    1ea0:	df 05       	cpc	r29, r15
    1ea2:	a1 f7       	brne	.-24     	; 0x1e8c <UART_SendString+0x24>
		if(pu8String[i]==0)
		{
			break;
		}		
	}
	return gError;
    1ea4:	80 91 95 00 	lds	r24, 0x0095	; 0x800095 <gError>
}
    1ea8:	df 91       	pop	r29
    1eaa:	cf 91       	pop	r28
    1eac:	1f 91       	pop	r17
    1eae:	0f 91       	pop	r16
    1eb0:	ff 90       	pop	r15
    1eb2:	ef 90       	pop	r14
    1eb4:	08 95       	ret

00001eb6 <__subsf3>:
    1eb6:	50 58       	subi	r21, 0x80	; 128

00001eb8 <__addsf3>:
    1eb8:	bb 27       	eor	r27, r27
    1eba:	aa 27       	eor	r26, r26
    1ebc:	0e 94 73 0f 	call	0x1ee6	; 0x1ee6 <__addsf3x>
    1ec0:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <__fp_round>
    1ec4:	0e 94 ed 10 	call	0x21da	; 0x21da <__fp_pscA>
    1ec8:	38 f0       	brcs	.+14     	; 0x1ed8 <__addsf3+0x20>
    1eca:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <__fp_pscB>
    1ece:	20 f0       	brcs	.+8      	; 0x1ed8 <__addsf3+0x20>
    1ed0:	39 f4       	brne	.+14     	; 0x1ee0 <__addsf3+0x28>
    1ed2:	9f 3f       	cpi	r25, 0xFF	; 255
    1ed4:	19 f4       	brne	.+6      	; 0x1edc <__addsf3+0x24>
    1ed6:	26 f4       	brtc	.+8      	; 0x1ee0 <__addsf3+0x28>
    1ed8:	0c 94 ea 10 	jmp	0x21d4	; 0x21d4 <__fp_nan>
    1edc:	0e f4       	brtc	.+2      	; 0x1ee0 <__addsf3+0x28>
    1ede:	e0 95       	com	r30
    1ee0:	e7 fb       	bst	r30, 7
    1ee2:	0c 94 e4 10 	jmp	0x21c8	; 0x21c8 <__fp_inf>

00001ee6 <__addsf3x>:
    1ee6:	e9 2f       	mov	r30, r25
    1ee8:	0e 94 0c 11 	call	0x2218	; 0x2218 <__fp_split3>
    1eec:	58 f3       	brcs	.-42     	; 0x1ec4 <__addsf3+0xc>
    1eee:	ba 17       	cp	r27, r26
    1ef0:	62 07       	cpc	r22, r18
    1ef2:	73 07       	cpc	r23, r19
    1ef4:	84 07       	cpc	r24, r20
    1ef6:	95 07       	cpc	r25, r21
    1ef8:	20 f0       	brcs	.+8      	; 0x1f02 <__addsf3x+0x1c>
    1efa:	79 f4       	brne	.+30     	; 0x1f1a <__addsf3x+0x34>
    1efc:	a6 f5       	brtc	.+104    	; 0x1f66 <__addsf3x+0x80>
    1efe:	0c 94 2e 11 	jmp	0x225c	; 0x225c <__fp_zero>
    1f02:	0e f4       	brtc	.+2      	; 0x1f06 <__addsf3x+0x20>
    1f04:	e0 95       	com	r30
    1f06:	0b 2e       	mov	r0, r27
    1f08:	ba 2f       	mov	r27, r26
    1f0a:	a0 2d       	mov	r26, r0
    1f0c:	0b 01       	movw	r0, r22
    1f0e:	b9 01       	movw	r22, r18
    1f10:	90 01       	movw	r18, r0
    1f12:	0c 01       	movw	r0, r24
    1f14:	ca 01       	movw	r24, r20
    1f16:	a0 01       	movw	r20, r0
    1f18:	11 24       	eor	r1, r1
    1f1a:	ff 27       	eor	r31, r31
    1f1c:	59 1b       	sub	r21, r25
    1f1e:	99 f0       	breq	.+38     	; 0x1f46 <__addsf3x+0x60>
    1f20:	59 3f       	cpi	r21, 0xF9	; 249
    1f22:	50 f4       	brcc	.+20     	; 0x1f38 <__addsf3x+0x52>
    1f24:	50 3e       	cpi	r21, 0xE0	; 224
    1f26:	68 f1       	brcs	.+90     	; 0x1f82 <__addsf3x+0x9c>
    1f28:	1a 16       	cp	r1, r26
    1f2a:	f0 40       	sbci	r31, 0x00	; 0
    1f2c:	a2 2f       	mov	r26, r18
    1f2e:	23 2f       	mov	r18, r19
    1f30:	34 2f       	mov	r19, r20
    1f32:	44 27       	eor	r20, r20
    1f34:	58 5f       	subi	r21, 0xF8	; 248
    1f36:	f3 cf       	rjmp	.-26     	; 0x1f1e <__addsf3x+0x38>
    1f38:	46 95       	lsr	r20
    1f3a:	37 95       	ror	r19
    1f3c:	27 95       	ror	r18
    1f3e:	a7 95       	ror	r26
    1f40:	f0 40       	sbci	r31, 0x00	; 0
    1f42:	53 95       	inc	r21
    1f44:	c9 f7       	brne	.-14     	; 0x1f38 <__addsf3x+0x52>
    1f46:	7e f4       	brtc	.+30     	; 0x1f66 <__addsf3x+0x80>
    1f48:	1f 16       	cp	r1, r31
    1f4a:	ba 0b       	sbc	r27, r26
    1f4c:	62 0b       	sbc	r22, r18
    1f4e:	73 0b       	sbc	r23, r19
    1f50:	84 0b       	sbc	r24, r20
    1f52:	ba f0       	brmi	.+46     	; 0x1f82 <__addsf3x+0x9c>
    1f54:	91 50       	subi	r25, 0x01	; 1
    1f56:	a1 f0       	breq	.+40     	; 0x1f80 <__addsf3x+0x9a>
    1f58:	ff 0f       	add	r31, r31
    1f5a:	bb 1f       	adc	r27, r27
    1f5c:	66 1f       	adc	r22, r22
    1f5e:	77 1f       	adc	r23, r23
    1f60:	88 1f       	adc	r24, r24
    1f62:	c2 f7       	brpl	.-16     	; 0x1f54 <__addsf3x+0x6e>
    1f64:	0e c0       	rjmp	.+28     	; 0x1f82 <__addsf3x+0x9c>
    1f66:	ba 0f       	add	r27, r26
    1f68:	62 1f       	adc	r22, r18
    1f6a:	73 1f       	adc	r23, r19
    1f6c:	84 1f       	adc	r24, r20
    1f6e:	48 f4       	brcc	.+18     	; 0x1f82 <__addsf3x+0x9c>
    1f70:	87 95       	ror	r24
    1f72:	77 95       	ror	r23
    1f74:	67 95       	ror	r22
    1f76:	b7 95       	ror	r27
    1f78:	f7 95       	ror	r31
    1f7a:	9e 3f       	cpi	r25, 0xFE	; 254
    1f7c:	08 f0       	brcs	.+2      	; 0x1f80 <__addsf3x+0x9a>
    1f7e:	b0 cf       	rjmp	.-160    	; 0x1ee0 <__addsf3+0x28>
    1f80:	93 95       	inc	r25
    1f82:	88 0f       	add	r24, r24
    1f84:	08 f0       	brcs	.+2      	; 0x1f88 <__addsf3x+0xa2>
    1f86:	99 27       	eor	r25, r25
    1f88:	ee 0f       	add	r30, r30
    1f8a:	97 95       	ror	r25
    1f8c:	87 95       	ror	r24
    1f8e:	08 95       	ret

00001f90 <__divsf3>:
    1f90:	0e 94 dc 0f 	call	0x1fb8	; 0x1fb8 <__divsf3x>
    1f94:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <__fp_round>
    1f98:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <__fp_pscB>
    1f9c:	58 f0       	brcs	.+22     	; 0x1fb4 <__divsf3+0x24>
    1f9e:	0e 94 ed 10 	call	0x21da	; 0x21da <__fp_pscA>
    1fa2:	40 f0       	brcs	.+16     	; 0x1fb4 <__divsf3+0x24>
    1fa4:	29 f4       	brne	.+10     	; 0x1fb0 <__divsf3+0x20>
    1fa6:	5f 3f       	cpi	r21, 0xFF	; 255
    1fa8:	29 f0       	breq	.+10     	; 0x1fb4 <__divsf3+0x24>
    1faa:	0c 94 e4 10 	jmp	0x21c8	; 0x21c8 <__fp_inf>
    1fae:	51 11       	cpse	r21, r1
    1fb0:	0c 94 2f 11 	jmp	0x225e	; 0x225e <__fp_szero>
    1fb4:	0c 94 ea 10 	jmp	0x21d4	; 0x21d4 <__fp_nan>

00001fb8 <__divsf3x>:
    1fb8:	0e 94 0c 11 	call	0x2218	; 0x2218 <__fp_split3>
    1fbc:	68 f3       	brcs	.-38     	; 0x1f98 <__divsf3+0x8>

00001fbe <__divsf3_pse>:
    1fbe:	99 23       	and	r25, r25
    1fc0:	b1 f3       	breq	.-20     	; 0x1fae <__divsf3+0x1e>
    1fc2:	55 23       	and	r21, r21
    1fc4:	91 f3       	breq	.-28     	; 0x1faa <__divsf3+0x1a>
    1fc6:	95 1b       	sub	r25, r21
    1fc8:	55 0b       	sbc	r21, r21
    1fca:	bb 27       	eor	r27, r27
    1fcc:	aa 27       	eor	r26, r26
    1fce:	62 17       	cp	r22, r18
    1fd0:	73 07       	cpc	r23, r19
    1fd2:	84 07       	cpc	r24, r20
    1fd4:	38 f0       	brcs	.+14     	; 0x1fe4 <__divsf3_pse+0x26>
    1fd6:	9f 5f       	subi	r25, 0xFF	; 255
    1fd8:	5f 4f       	sbci	r21, 0xFF	; 255
    1fda:	22 0f       	add	r18, r18
    1fdc:	33 1f       	adc	r19, r19
    1fde:	44 1f       	adc	r20, r20
    1fe0:	aa 1f       	adc	r26, r26
    1fe2:	a9 f3       	breq	.-22     	; 0x1fce <__divsf3_pse+0x10>
    1fe4:	35 d0       	rcall	.+106    	; 0x2050 <__divsf3_pse+0x92>
    1fe6:	0e 2e       	mov	r0, r30
    1fe8:	3a f0       	brmi	.+14     	; 0x1ff8 <__divsf3_pse+0x3a>
    1fea:	e0 e8       	ldi	r30, 0x80	; 128
    1fec:	32 d0       	rcall	.+100    	; 0x2052 <__divsf3_pse+0x94>
    1fee:	91 50       	subi	r25, 0x01	; 1
    1ff0:	50 40       	sbci	r21, 0x00	; 0
    1ff2:	e6 95       	lsr	r30
    1ff4:	00 1c       	adc	r0, r0
    1ff6:	ca f7       	brpl	.-14     	; 0x1fea <__divsf3_pse+0x2c>
    1ff8:	2b d0       	rcall	.+86     	; 0x2050 <__divsf3_pse+0x92>
    1ffa:	fe 2f       	mov	r31, r30
    1ffc:	29 d0       	rcall	.+82     	; 0x2050 <__divsf3_pse+0x92>
    1ffe:	66 0f       	add	r22, r22
    2000:	77 1f       	adc	r23, r23
    2002:	88 1f       	adc	r24, r24
    2004:	bb 1f       	adc	r27, r27
    2006:	26 17       	cp	r18, r22
    2008:	37 07       	cpc	r19, r23
    200a:	48 07       	cpc	r20, r24
    200c:	ab 07       	cpc	r26, r27
    200e:	b0 e8       	ldi	r27, 0x80	; 128
    2010:	09 f0       	breq	.+2      	; 0x2014 <__divsf3_pse+0x56>
    2012:	bb 0b       	sbc	r27, r27
    2014:	80 2d       	mov	r24, r0
    2016:	bf 01       	movw	r22, r30
    2018:	ff 27       	eor	r31, r31
    201a:	93 58       	subi	r25, 0x83	; 131
    201c:	5f 4f       	sbci	r21, 0xFF	; 255
    201e:	3a f0       	brmi	.+14     	; 0x202e <__divsf3_pse+0x70>
    2020:	9e 3f       	cpi	r25, 0xFE	; 254
    2022:	51 05       	cpc	r21, r1
    2024:	78 f0       	brcs	.+30     	; 0x2044 <__divsf3_pse+0x86>
    2026:	0c 94 e4 10 	jmp	0x21c8	; 0x21c8 <__fp_inf>
    202a:	0c 94 2f 11 	jmp	0x225e	; 0x225e <__fp_szero>
    202e:	5f 3f       	cpi	r21, 0xFF	; 255
    2030:	e4 f3       	brlt	.-8      	; 0x202a <__divsf3_pse+0x6c>
    2032:	98 3e       	cpi	r25, 0xE8	; 232
    2034:	d4 f3       	brlt	.-12     	; 0x202a <__divsf3_pse+0x6c>
    2036:	86 95       	lsr	r24
    2038:	77 95       	ror	r23
    203a:	67 95       	ror	r22
    203c:	b7 95       	ror	r27
    203e:	f7 95       	ror	r31
    2040:	9f 5f       	subi	r25, 0xFF	; 255
    2042:	c9 f7       	brne	.-14     	; 0x2036 <__divsf3_pse+0x78>
    2044:	88 0f       	add	r24, r24
    2046:	91 1d       	adc	r25, r1
    2048:	96 95       	lsr	r25
    204a:	87 95       	ror	r24
    204c:	97 f9       	bld	r25, 7
    204e:	08 95       	ret
    2050:	e1 e0       	ldi	r30, 0x01	; 1
    2052:	66 0f       	add	r22, r22
    2054:	77 1f       	adc	r23, r23
    2056:	88 1f       	adc	r24, r24
    2058:	bb 1f       	adc	r27, r27
    205a:	62 17       	cp	r22, r18
    205c:	73 07       	cpc	r23, r19
    205e:	84 07       	cpc	r24, r20
    2060:	ba 07       	cpc	r27, r26
    2062:	20 f0       	brcs	.+8      	; 0x206c <__divsf3_pse+0xae>
    2064:	62 1b       	sub	r22, r18
    2066:	73 0b       	sbc	r23, r19
    2068:	84 0b       	sbc	r24, r20
    206a:	ba 0b       	sbc	r27, r26
    206c:	ee 1f       	adc	r30, r30
    206e:	88 f7       	brcc	.-30     	; 0x2052 <__divsf3_pse+0x94>
    2070:	e0 95       	com	r30
    2072:	08 95       	ret

00002074 <__fixunssfsi>:
    2074:	0e 94 14 11 	call	0x2228	; 0x2228 <__fp_splitA>
    2078:	88 f0       	brcs	.+34     	; 0x209c <__fixunssfsi+0x28>
    207a:	9f 57       	subi	r25, 0x7F	; 127
    207c:	98 f0       	brcs	.+38     	; 0x20a4 <__fixunssfsi+0x30>
    207e:	b9 2f       	mov	r27, r25
    2080:	99 27       	eor	r25, r25
    2082:	b7 51       	subi	r27, 0x17	; 23
    2084:	b0 f0       	brcs	.+44     	; 0x20b2 <__fixunssfsi+0x3e>
    2086:	e1 f0       	breq	.+56     	; 0x20c0 <__fixunssfsi+0x4c>
    2088:	66 0f       	add	r22, r22
    208a:	77 1f       	adc	r23, r23
    208c:	88 1f       	adc	r24, r24
    208e:	99 1f       	adc	r25, r25
    2090:	1a f0       	brmi	.+6      	; 0x2098 <__fixunssfsi+0x24>
    2092:	ba 95       	dec	r27
    2094:	c9 f7       	brne	.-14     	; 0x2088 <__fixunssfsi+0x14>
    2096:	14 c0       	rjmp	.+40     	; 0x20c0 <__fixunssfsi+0x4c>
    2098:	b1 30       	cpi	r27, 0x01	; 1
    209a:	91 f0       	breq	.+36     	; 0x20c0 <__fixunssfsi+0x4c>
    209c:	0e 94 2e 11 	call	0x225c	; 0x225c <__fp_zero>
    20a0:	b1 e0       	ldi	r27, 0x01	; 1
    20a2:	08 95       	ret
    20a4:	0c 94 2e 11 	jmp	0x225c	; 0x225c <__fp_zero>
    20a8:	67 2f       	mov	r22, r23
    20aa:	78 2f       	mov	r23, r24
    20ac:	88 27       	eor	r24, r24
    20ae:	b8 5f       	subi	r27, 0xF8	; 248
    20b0:	39 f0       	breq	.+14     	; 0x20c0 <__fixunssfsi+0x4c>
    20b2:	b9 3f       	cpi	r27, 0xF9	; 249
    20b4:	cc f3       	brlt	.-14     	; 0x20a8 <__fixunssfsi+0x34>
    20b6:	86 95       	lsr	r24
    20b8:	77 95       	ror	r23
    20ba:	67 95       	ror	r22
    20bc:	b3 95       	inc	r27
    20be:	d9 f7       	brne	.-10     	; 0x20b6 <__fixunssfsi+0x42>
    20c0:	3e f4       	brtc	.+14     	; 0x20d0 <__fixunssfsi+0x5c>
    20c2:	90 95       	com	r25
    20c4:	80 95       	com	r24
    20c6:	70 95       	com	r23
    20c8:	61 95       	neg	r22
    20ca:	7f 4f       	sbci	r23, 0xFF	; 255
    20cc:	8f 4f       	sbci	r24, 0xFF	; 255
    20ce:	9f 4f       	sbci	r25, 0xFF	; 255
    20d0:	08 95       	ret

000020d2 <__floatunsisf>:
    20d2:	e8 94       	clt
    20d4:	09 c0       	rjmp	.+18     	; 0x20e8 <__floatsisf+0x12>

000020d6 <__floatsisf>:
    20d6:	97 fb       	bst	r25, 7
    20d8:	3e f4       	brtc	.+14     	; 0x20e8 <__floatsisf+0x12>
    20da:	90 95       	com	r25
    20dc:	80 95       	com	r24
    20de:	70 95       	com	r23
    20e0:	61 95       	neg	r22
    20e2:	7f 4f       	sbci	r23, 0xFF	; 255
    20e4:	8f 4f       	sbci	r24, 0xFF	; 255
    20e6:	9f 4f       	sbci	r25, 0xFF	; 255
    20e8:	99 23       	and	r25, r25
    20ea:	a9 f0       	breq	.+42     	; 0x2116 <__floatsisf+0x40>
    20ec:	f9 2f       	mov	r31, r25
    20ee:	96 e9       	ldi	r25, 0x96	; 150
    20f0:	bb 27       	eor	r27, r27
    20f2:	93 95       	inc	r25
    20f4:	f6 95       	lsr	r31
    20f6:	87 95       	ror	r24
    20f8:	77 95       	ror	r23
    20fa:	67 95       	ror	r22
    20fc:	b7 95       	ror	r27
    20fe:	f1 11       	cpse	r31, r1
    2100:	f8 cf       	rjmp	.-16     	; 0x20f2 <__floatsisf+0x1c>
    2102:	fa f4       	brpl	.+62     	; 0x2142 <__floatsisf+0x6c>
    2104:	bb 0f       	add	r27, r27
    2106:	11 f4       	brne	.+4      	; 0x210c <__floatsisf+0x36>
    2108:	60 ff       	sbrs	r22, 0
    210a:	1b c0       	rjmp	.+54     	; 0x2142 <__floatsisf+0x6c>
    210c:	6f 5f       	subi	r22, 0xFF	; 255
    210e:	7f 4f       	sbci	r23, 0xFF	; 255
    2110:	8f 4f       	sbci	r24, 0xFF	; 255
    2112:	9f 4f       	sbci	r25, 0xFF	; 255
    2114:	16 c0       	rjmp	.+44     	; 0x2142 <__floatsisf+0x6c>
    2116:	88 23       	and	r24, r24
    2118:	11 f0       	breq	.+4      	; 0x211e <__floatsisf+0x48>
    211a:	96 e9       	ldi	r25, 0x96	; 150
    211c:	11 c0       	rjmp	.+34     	; 0x2140 <__floatsisf+0x6a>
    211e:	77 23       	and	r23, r23
    2120:	21 f0       	breq	.+8      	; 0x212a <__floatsisf+0x54>
    2122:	9e e8       	ldi	r25, 0x8E	; 142
    2124:	87 2f       	mov	r24, r23
    2126:	76 2f       	mov	r23, r22
    2128:	05 c0       	rjmp	.+10     	; 0x2134 <__floatsisf+0x5e>
    212a:	66 23       	and	r22, r22
    212c:	71 f0       	breq	.+28     	; 0x214a <__floatsisf+0x74>
    212e:	96 e8       	ldi	r25, 0x86	; 134
    2130:	86 2f       	mov	r24, r22
    2132:	70 e0       	ldi	r23, 0x00	; 0
    2134:	60 e0       	ldi	r22, 0x00	; 0
    2136:	2a f0       	brmi	.+10     	; 0x2142 <__floatsisf+0x6c>
    2138:	9a 95       	dec	r25
    213a:	66 0f       	add	r22, r22
    213c:	77 1f       	adc	r23, r23
    213e:	88 1f       	adc	r24, r24
    2140:	da f7       	brpl	.-10     	; 0x2138 <__floatsisf+0x62>
    2142:	88 0f       	add	r24, r24
    2144:	96 95       	lsr	r25
    2146:	87 95       	ror	r24
    2148:	97 f9       	bld	r25, 7
    214a:	08 95       	ret

0000214c <__floatundisf>:
    214c:	e8 94       	clt

0000214e <__fp_di2sf>:
    214e:	f9 2f       	mov	r31, r25
    2150:	96 eb       	ldi	r25, 0xB6	; 182
    2152:	ff 23       	and	r31, r31
    2154:	81 f0       	breq	.+32     	; 0x2176 <__fp_di2sf+0x28>
    2156:	12 16       	cp	r1, r18
    2158:	13 06       	cpc	r1, r19
    215a:	14 06       	cpc	r1, r20
    215c:	44 0b       	sbc	r20, r20
    215e:	93 95       	inc	r25
    2160:	f6 95       	lsr	r31
    2162:	87 95       	ror	r24
    2164:	77 95       	ror	r23
    2166:	67 95       	ror	r22
    2168:	57 95       	ror	r21
    216a:	40 40       	sbci	r20, 0x00	; 0
    216c:	ff 23       	and	r31, r31
    216e:	b9 f7       	brne	.-18     	; 0x215e <__fp_di2sf+0x10>
    2170:	1b c0       	rjmp	.+54     	; 0x21a8 <__fp_di2sf+0x5a>
    2172:	99 27       	eor	r25, r25
    2174:	08 95       	ret
    2176:	88 23       	and	r24, r24
    2178:	51 f4       	brne	.+20     	; 0x218e <__fp_di2sf+0x40>
    217a:	98 50       	subi	r25, 0x08	; 8
    217c:	d2 f7       	brpl	.-12     	; 0x2172 <__fp_di2sf+0x24>
    217e:	87 2b       	or	r24, r23
    2180:	76 2f       	mov	r23, r22
    2182:	65 2f       	mov	r22, r21
    2184:	54 2f       	mov	r21, r20
    2186:	43 2f       	mov	r20, r19
    2188:	32 2f       	mov	r19, r18
    218a:	20 e0       	ldi	r18, 0x00	; 0
    218c:	b1 f3       	breq	.-20     	; 0x217a <__fp_di2sf+0x2c>
    218e:	12 16       	cp	r1, r18
    2190:	13 06       	cpc	r1, r19
    2192:	14 06       	cpc	r1, r20
    2194:	44 0b       	sbc	r20, r20
    2196:	88 23       	and	r24, r24
    2198:	3a f0       	brmi	.+14     	; 0x21a8 <__fp_di2sf+0x5a>
    219a:	9a 95       	dec	r25
    219c:	44 0f       	add	r20, r20
    219e:	55 1f       	adc	r21, r21
    21a0:	66 1f       	adc	r22, r22
    21a2:	77 1f       	adc	r23, r23
    21a4:	88 1f       	adc	r24, r24
    21a6:	ca f7       	brpl	.-14     	; 0x219a <__fp_di2sf+0x4c>
    21a8:	55 23       	and	r21, r21
    21aa:	4a f4       	brpl	.+18     	; 0x21be <__fp_di2sf+0x70>
    21ac:	44 0f       	add	r20, r20
    21ae:	55 1f       	adc	r21, r21
    21b0:	11 f4       	brne	.+4      	; 0x21b6 <__fp_di2sf+0x68>
    21b2:	60 ff       	sbrs	r22, 0
    21b4:	04 c0       	rjmp	.+8      	; 0x21be <__fp_di2sf+0x70>
    21b6:	6f 5f       	subi	r22, 0xFF	; 255
    21b8:	7f 4f       	sbci	r23, 0xFF	; 255
    21ba:	8f 4f       	sbci	r24, 0xFF	; 255
    21bc:	9f 4f       	sbci	r25, 0xFF	; 255
    21be:	88 0f       	add	r24, r24
    21c0:	96 95       	lsr	r25
    21c2:	87 95       	ror	r24
    21c4:	97 f9       	bld	r25, 7
    21c6:	08 95       	ret

000021c8 <__fp_inf>:
    21c8:	97 f9       	bld	r25, 7
    21ca:	9f 67       	ori	r25, 0x7F	; 127
    21cc:	80 e8       	ldi	r24, 0x80	; 128
    21ce:	70 e0       	ldi	r23, 0x00	; 0
    21d0:	60 e0       	ldi	r22, 0x00	; 0
    21d2:	08 95       	ret

000021d4 <__fp_nan>:
    21d4:	9f ef       	ldi	r25, 0xFF	; 255
    21d6:	80 ec       	ldi	r24, 0xC0	; 192
    21d8:	08 95       	ret

000021da <__fp_pscA>:
    21da:	00 24       	eor	r0, r0
    21dc:	0a 94       	dec	r0
    21de:	16 16       	cp	r1, r22
    21e0:	17 06       	cpc	r1, r23
    21e2:	18 06       	cpc	r1, r24
    21e4:	09 06       	cpc	r0, r25
    21e6:	08 95       	ret

000021e8 <__fp_pscB>:
    21e8:	00 24       	eor	r0, r0
    21ea:	0a 94       	dec	r0
    21ec:	12 16       	cp	r1, r18
    21ee:	13 06       	cpc	r1, r19
    21f0:	14 06       	cpc	r1, r20
    21f2:	05 06       	cpc	r0, r21
    21f4:	08 95       	ret

000021f6 <__fp_round>:
    21f6:	09 2e       	mov	r0, r25
    21f8:	03 94       	inc	r0
    21fa:	00 0c       	add	r0, r0
    21fc:	11 f4       	brne	.+4      	; 0x2202 <__fp_round+0xc>
    21fe:	88 23       	and	r24, r24
    2200:	52 f0       	brmi	.+20     	; 0x2216 <__fp_round+0x20>
    2202:	bb 0f       	add	r27, r27
    2204:	40 f4       	brcc	.+16     	; 0x2216 <__fp_round+0x20>
    2206:	bf 2b       	or	r27, r31
    2208:	11 f4       	brne	.+4      	; 0x220e <__fp_round+0x18>
    220a:	60 ff       	sbrs	r22, 0
    220c:	04 c0       	rjmp	.+8      	; 0x2216 <__fp_round+0x20>
    220e:	6f 5f       	subi	r22, 0xFF	; 255
    2210:	7f 4f       	sbci	r23, 0xFF	; 255
    2212:	8f 4f       	sbci	r24, 0xFF	; 255
    2214:	9f 4f       	sbci	r25, 0xFF	; 255
    2216:	08 95       	ret

00002218 <__fp_split3>:
    2218:	57 fd       	sbrc	r21, 7
    221a:	90 58       	subi	r25, 0x80	; 128
    221c:	44 0f       	add	r20, r20
    221e:	55 1f       	adc	r21, r21
    2220:	59 f0       	breq	.+22     	; 0x2238 <__fp_splitA+0x10>
    2222:	5f 3f       	cpi	r21, 0xFF	; 255
    2224:	71 f0       	breq	.+28     	; 0x2242 <__fp_splitA+0x1a>
    2226:	47 95       	ror	r20

00002228 <__fp_splitA>:
    2228:	88 0f       	add	r24, r24
    222a:	97 fb       	bst	r25, 7
    222c:	99 1f       	adc	r25, r25
    222e:	61 f0       	breq	.+24     	; 0x2248 <__fp_splitA+0x20>
    2230:	9f 3f       	cpi	r25, 0xFF	; 255
    2232:	79 f0       	breq	.+30     	; 0x2252 <__fp_splitA+0x2a>
    2234:	87 95       	ror	r24
    2236:	08 95       	ret
    2238:	12 16       	cp	r1, r18
    223a:	13 06       	cpc	r1, r19
    223c:	14 06       	cpc	r1, r20
    223e:	55 1f       	adc	r21, r21
    2240:	f2 cf       	rjmp	.-28     	; 0x2226 <__fp_split3+0xe>
    2242:	46 95       	lsr	r20
    2244:	f1 df       	rcall	.-30     	; 0x2228 <__fp_splitA>
    2246:	08 c0       	rjmp	.+16     	; 0x2258 <__fp_splitA+0x30>
    2248:	16 16       	cp	r1, r22
    224a:	17 06       	cpc	r1, r23
    224c:	18 06       	cpc	r1, r24
    224e:	99 1f       	adc	r25, r25
    2250:	f1 cf       	rjmp	.-30     	; 0x2234 <__fp_splitA+0xc>
    2252:	86 95       	lsr	r24
    2254:	71 05       	cpc	r23, r1
    2256:	61 05       	cpc	r22, r1
    2258:	08 94       	sec
    225a:	08 95       	ret

0000225c <__fp_zero>:
    225c:	e8 94       	clt

0000225e <__fp_szero>:
    225e:	bb 27       	eor	r27, r27
    2260:	66 27       	eor	r22, r22
    2262:	77 27       	eor	r23, r23
    2264:	cb 01       	movw	r24, r22
    2266:	97 f9       	bld	r25, 7
    2268:	08 95       	ret

0000226a <__gesf2>:
    226a:	0e 94 a7 11 	call	0x234e	; 0x234e <__fp_cmp>
    226e:	08 f4       	brcc	.+2      	; 0x2272 <__gesf2+0x8>
    2270:	8f ef       	ldi	r24, 0xFF	; 255
    2272:	08 95       	ret

00002274 <__mulsf3>:
    2274:	0e 94 4d 11 	call	0x229a	; 0x229a <__mulsf3x>
    2278:	0c 94 fb 10 	jmp	0x21f6	; 0x21f6 <__fp_round>
    227c:	0e 94 ed 10 	call	0x21da	; 0x21da <__fp_pscA>
    2280:	38 f0       	brcs	.+14     	; 0x2290 <__mulsf3+0x1c>
    2282:	0e 94 f4 10 	call	0x21e8	; 0x21e8 <__fp_pscB>
    2286:	20 f0       	brcs	.+8      	; 0x2290 <__mulsf3+0x1c>
    2288:	95 23       	and	r25, r21
    228a:	11 f0       	breq	.+4      	; 0x2290 <__mulsf3+0x1c>
    228c:	0c 94 e4 10 	jmp	0x21c8	; 0x21c8 <__fp_inf>
    2290:	0c 94 ea 10 	jmp	0x21d4	; 0x21d4 <__fp_nan>
    2294:	11 24       	eor	r1, r1
    2296:	0c 94 2f 11 	jmp	0x225e	; 0x225e <__fp_szero>

0000229a <__mulsf3x>:
    229a:	0e 94 0c 11 	call	0x2218	; 0x2218 <__fp_split3>
    229e:	70 f3       	brcs	.-36     	; 0x227c <__mulsf3+0x8>

000022a0 <__mulsf3_pse>:
    22a0:	95 9f       	mul	r25, r21
    22a2:	c1 f3       	breq	.-16     	; 0x2294 <__mulsf3+0x20>
    22a4:	95 0f       	add	r25, r21
    22a6:	50 e0       	ldi	r21, 0x00	; 0
    22a8:	55 1f       	adc	r21, r21
    22aa:	62 9f       	mul	r22, r18
    22ac:	f0 01       	movw	r30, r0
    22ae:	72 9f       	mul	r23, r18
    22b0:	bb 27       	eor	r27, r27
    22b2:	f0 0d       	add	r31, r0
    22b4:	b1 1d       	adc	r27, r1
    22b6:	63 9f       	mul	r22, r19
    22b8:	aa 27       	eor	r26, r26
    22ba:	f0 0d       	add	r31, r0
    22bc:	b1 1d       	adc	r27, r1
    22be:	aa 1f       	adc	r26, r26
    22c0:	64 9f       	mul	r22, r20
    22c2:	66 27       	eor	r22, r22
    22c4:	b0 0d       	add	r27, r0
    22c6:	a1 1d       	adc	r26, r1
    22c8:	66 1f       	adc	r22, r22
    22ca:	82 9f       	mul	r24, r18
    22cc:	22 27       	eor	r18, r18
    22ce:	b0 0d       	add	r27, r0
    22d0:	a1 1d       	adc	r26, r1
    22d2:	62 1f       	adc	r22, r18
    22d4:	73 9f       	mul	r23, r19
    22d6:	b0 0d       	add	r27, r0
    22d8:	a1 1d       	adc	r26, r1
    22da:	62 1f       	adc	r22, r18
    22dc:	83 9f       	mul	r24, r19
    22de:	a0 0d       	add	r26, r0
    22e0:	61 1d       	adc	r22, r1
    22e2:	22 1f       	adc	r18, r18
    22e4:	74 9f       	mul	r23, r20
    22e6:	33 27       	eor	r19, r19
    22e8:	a0 0d       	add	r26, r0
    22ea:	61 1d       	adc	r22, r1
    22ec:	23 1f       	adc	r18, r19
    22ee:	84 9f       	mul	r24, r20
    22f0:	60 0d       	add	r22, r0
    22f2:	21 1d       	adc	r18, r1
    22f4:	82 2f       	mov	r24, r18
    22f6:	76 2f       	mov	r23, r22
    22f8:	6a 2f       	mov	r22, r26
    22fa:	11 24       	eor	r1, r1
    22fc:	9f 57       	subi	r25, 0x7F	; 127
    22fe:	50 40       	sbci	r21, 0x00	; 0
    2300:	9a f0       	brmi	.+38     	; 0x2328 <__mulsf3_pse+0x88>
    2302:	f1 f0       	breq	.+60     	; 0x2340 <__mulsf3_pse+0xa0>
    2304:	88 23       	and	r24, r24
    2306:	4a f0       	brmi	.+18     	; 0x231a <__mulsf3_pse+0x7a>
    2308:	ee 0f       	add	r30, r30
    230a:	ff 1f       	adc	r31, r31
    230c:	bb 1f       	adc	r27, r27
    230e:	66 1f       	adc	r22, r22
    2310:	77 1f       	adc	r23, r23
    2312:	88 1f       	adc	r24, r24
    2314:	91 50       	subi	r25, 0x01	; 1
    2316:	50 40       	sbci	r21, 0x00	; 0
    2318:	a9 f7       	brne	.-22     	; 0x2304 <__mulsf3_pse+0x64>
    231a:	9e 3f       	cpi	r25, 0xFE	; 254
    231c:	51 05       	cpc	r21, r1
    231e:	80 f0       	brcs	.+32     	; 0x2340 <__mulsf3_pse+0xa0>
    2320:	0c 94 e4 10 	jmp	0x21c8	; 0x21c8 <__fp_inf>
    2324:	0c 94 2f 11 	jmp	0x225e	; 0x225e <__fp_szero>
    2328:	5f 3f       	cpi	r21, 0xFF	; 255
    232a:	e4 f3       	brlt	.-8      	; 0x2324 <__mulsf3_pse+0x84>
    232c:	98 3e       	cpi	r25, 0xE8	; 232
    232e:	d4 f3       	brlt	.-12     	; 0x2324 <__mulsf3_pse+0x84>
    2330:	86 95       	lsr	r24
    2332:	77 95       	ror	r23
    2334:	67 95       	ror	r22
    2336:	b7 95       	ror	r27
    2338:	f7 95       	ror	r31
    233a:	e7 95       	ror	r30
    233c:	9f 5f       	subi	r25, 0xFF	; 255
    233e:	c1 f7       	brne	.-16     	; 0x2330 <__mulsf3_pse+0x90>
    2340:	fe 2b       	or	r31, r30
    2342:	88 0f       	add	r24, r24
    2344:	91 1d       	adc	r25, r1
    2346:	96 95       	lsr	r25
    2348:	87 95       	ror	r24
    234a:	97 f9       	bld	r25, 7
    234c:	08 95       	ret

0000234e <__fp_cmp>:
    234e:	99 0f       	add	r25, r25
    2350:	00 08       	sbc	r0, r0
    2352:	55 0f       	add	r21, r21
    2354:	aa 0b       	sbc	r26, r26
    2356:	e0 e8       	ldi	r30, 0x80	; 128
    2358:	fe ef       	ldi	r31, 0xFE	; 254
    235a:	16 16       	cp	r1, r22
    235c:	17 06       	cpc	r1, r23
    235e:	e8 07       	cpc	r30, r24
    2360:	f9 07       	cpc	r31, r25
    2362:	c0 f0       	brcs	.+48     	; 0x2394 <__fp_cmp+0x46>
    2364:	12 16       	cp	r1, r18
    2366:	13 06       	cpc	r1, r19
    2368:	e4 07       	cpc	r30, r20
    236a:	f5 07       	cpc	r31, r21
    236c:	98 f0       	brcs	.+38     	; 0x2394 <__fp_cmp+0x46>
    236e:	62 1b       	sub	r22, r18
    2370:	73 0b       	sbc	r23, r19
    2372:	84 0b       	sbc	r24, r20
    2374:	95 0b       	sbc	r25, r21
    2376:	39 f4       	brne	.+14     	; 0x2386 <__fp_cmp+0x38>
    2378:	0a 26       	eor	r0, r26
    237a:	61 f0       	breq	.+24     	; 0x2394 <__fp_cmp+0x46>
    237c:	23 2b       	or	r18, r19
    237e:	24 2b       	or	r18, r20
    2380:	25 2b       	or	r18, r21
    2382:	21 f4       	brne	.+8      	; 0x238c <__fp_cmp+0x3e>
    2384:	08 95       	ret
    2386:	0a 26       	eor	r0, r26
    2388:	09 f4       	brne	.+2      	; 0x238c <__fp_cmp+0x3e>
    238a:	a1 40       	sbci	r26, 0x01	; 1
    238c:	a6 95       	lsr	r26
    238e:	8f ef       	ldi	r24, 0xFF	; 255
    2390:	81 1d       	adc	r24, r1
    2392:	81 1d       	adc	r24, r1
    2394:	08 95       	ret

00002396 <__mulsi3>:
    2396:	db 01       	movw	r26, r22
    2398:	8f 93       	push	r24
    239a:	9f 93       	push	r25
    239c:	0e 94 03 12 	call	0x2406	; 0x2406 <__muluhisi3>
    23a0:	bf 91       	pop	r27
    23a2:	af 91       	pop	r26
    23a4:	a2 9f       	mul	r26, r18
    23a6:	80 0d       	add	r24, r0
    23a8:	91 1d       	adc	r25, r1
    23aa:	a3 9f       	mul	r26, r19
    23ac:	90 0d       	add	r25, r0
    23ae:	b2 9f       	mul	r27, r18
    23b0:	90 0d       	add	r25, r0
    23b2:	11 24       	eor	r1, r1
    23b4:	08 95       	ret

000023b6 <__udivmodsi4>:
    23b6:	a1 e2       	ldi	r26, 0x21	; 33
    23b8:	1a 2e       	mov	r1, r26
    23ba:	aa 1b       	sub	r26, r26
    23bc:	bb 1b       	sub	r27, r27
    23be:	fd 01       	movw	r30, r26
    23c0:	0d c0       	rjmp	.+26     	; 0x23dc <__udivmodsi4_ep>

000023c2 <__udivmodsi4_loop>:
    23c2:	aa 1f       	adc	r26, r26
    23c4:	bb 1f       	adc	r27, r27
    23c6:	ee 1f       	adc	r30, r30
    23c8:	ff 1f       	adc	r31, r31
    23ca:	a2 17       	cp	r26, r18
    23cc:	b3 07       	cpc	r27, r19
    23ce:	e4 07       	cpc	r30, r20
    23d0:	f5 07       	cpc	r31, r21
    23d2:	20 f0       	brcs	.+8      	; 0x23dc <__udivmodsi4_ep>
    23d4:	a2 1b       	sub	r26, r18
    23d6:	b3 0b       	sbc	r27, r19
    23d8:	e4 0b       	sbc	r30, r20
    23da:	f5 0b       	sbc	r31, r21

000023dc <__udivmodsi4_ep>:
    23dc:	66 1f       	adc	r22, r22
    23de:	77 1f       	adc	r23, r23
    23e0:	88 1f       	adc	r24, r24
    23e2:	99 1f       	adc	r25, r25
    23e4:	1a 94       	dec	r1
    23e6:	69 f7       	brne	.-38     	; 0x23c2 <__udivmodsi4_loop>
    23e8:	60 95       	com	r22
    23ea:	70 95       	com	r23
    23ec:	80 95       	com	r24
    23ee:	90 95       	com	r25
    23f0:	9b 01       	movw	r18, r22
    23f2:	ac 01       	movw	r20, r24
    23f4:	bd 01       	movw	r22, r26
    23f6:	cf 01       	movw	r24, r30
    23f8:	08 95       	ret

000023fa <__tablejump2__>:
    23fa:	ee 0f       	add	r30, r30
    23fc:	ff 1f       	adc	r31, r31
    23fe:	05 90       	lpm	r0, Z+
    2400:	f4 91       	lpm	r31, Z
    2402:	e0 2d       	mov	r30, r0
    2404:	09 94       	ijmp

00002406 <__muluhisi3>:
    2406:	0e 94 c6 12 	call	0x258c	; 0x258c <__umulhisi3>
    240a:	a5 9f       	mul	r26, r21
    240c:	90 0d       	add	r25, r0
    240e:	b4 9f       	mul	r27, r20
    2410:	90 0d       	add	r25, r0
    2412:	a4 9f       	mul	r26, r20
    2414:	80 0d       	add	r24, r0
    2416:	91 1d       	adc	r25, r1
    2418:	11 24       	eor	r1, r1
    241a:	08 95       	ret

0000241c <__muldi3>:
    241c:	df 93       	push	r29
    241e:	cf 93       	push	r28
    2420:	1f 93       	push	r17
    2422:	0f 93       	push	r16
    2424:	9a 9d       	mul	r25, r10
    2426:	f0 2d       	mov	r31, r0
    2428:	21 9f       	mul	r18, r17
    242a:	f0 0d       	add	r31, r0
    242c:	8b 9d       	mul	r24, r11
    242e:	f0 0d       	add	r31, r0
    2430:	8a 9d       	mul	r24, r10
    2432:	e0 2d       	mov	r30, r0
    2434:	f1 0d       	add	r31, r1
    2436:	03 9f       	mul	r16, r19
    2438:	f0 0d       	add	r31, r0
    243a:	02 9f       	mul	r16, r18
    243c:	e0 0d       	add	r30, r0
    243e:	f1 1d       	adc	r31, r1
    2440:	4e 9d       	mul	r20, r14
    2442:	e0 0d       	add	r30, r0
    2444:	f1 1d       	adc	r31, r1
    2446:	5e 9d       	mul	r21, r14
    2448:	f0 0d       	add	r31, r0
    244a:	4f 9d       	mul	r20, r15
    244c:	f0 0d       	add	r31, r0
    244e:	7f 93       	push	r23
    2450:	6f 93       	push	r22
    2452:	bf 92       	push	r11
    2454:	af 92       	push	r10
    2456:	5f 93       	push	r21
    2458:	4f 93       	push	r20
    245a:	d5 01       	movw	r26, r10
    245c:	0e 94 c6 12 	call	0x258c	; 0x258c <__umulhisi3>
    2460:	8b 01       	movw	r16, r22
    2462:	ac 01       	movw	r20, r24
    2464:	d7 01       	movw	r26, r14
    2466:	0e 94 c6 12 	call	0x258c	; 0x258c <__umulhisi3>
    246a:	eb 01       	movw	r28, r22
    246c:	e8 0f       	add	r30, r24
    246e:	f9 1f       	adc	r31, r25
    2470:	d6 01       	movw	r26, r12
    2472:	0e 94 5e 12 	call	0x24bc	; 0x24bc <__muldi3_6>
    2476:	2f 91       	pop	r18
    2478:	3f 91       	pop	r19
    247a:	d6 01       	movw	r26, r12
    247c:	0e 94 c6 12 	call	0x258c	; 0x258c <__umulhisi3>
    2480:	c6 0f       	add	r28, r22
    2482:	d7 1f       	adc	r29, r23
    2484:	e8 1f       	adc	r30, r24
    2486:	f9 1f       	adc	r31, r25
    2488:	af 91       	pop	r26
    248a:	bf 91       	pop	r27
    248c:	0e 94 5e 12 	call	0x24bc	; 0x24bc <__muldi3_6>
    2490:	2f 91       	pop	r18
    2492:	3f 91       	pop	r19
    2494:	0e 94 c6 12 	call	0x258c	; 0x258c <__umulhisi3>
    2498:	c6 0f       	add	r28, r22
    249a:	d7 1f       	adc	r29, r23
    249c:	e8 1f       	adc	r30, r24
    249e:	f9 1f       	adc	r31, r25
    24a0:	d6 01       	movw	r26, r12
    24a2:	0e 94 c6 12 	call	0x258c	; 0x258c <__umulhisi3>
    24a6:	e6 0f       	add	r30, r22
    24a8:	f7 1f       	adc	r31, r23
    24aa:	98 01       	movw	r18, r16
    24ac:	be 01       	movw	r22, r28
    24ae:	cf 01       	movw	r24, r30
    24b0:	11 24       	eor	r1, r1
    24b2:	0f 91       	pop	r16
    24b4:	1f 91       	pop	r17
    24b6:	cf 91       	pop	r28
    24b8:	df 91       	pop	r29
    24ba:	08 95       	ret

000024bc <__muldi3_6>:
    24bc:	0e 94 c6 12 	call	0x258c	; 0x258c <__umulhisi3>
    24c0:	46 0f       	add	r20, r22
    24c2:	57 1f       	adc	r21, r23
    24c4:	c8 1f       	adc	r28, r24
    24c6:	d9 1f       	adc	r29, r25
    24c8:	08 f4       	brcc	.+2      	; 0x24cc <__muldi3_6+0x10>
    24ca:	31 96       	adiw	r30, 0x01	; 1
    24cc:	08 95       	ret

000024ce <__umoddi3>:
    24ce:	68 94       	set
    24d0:	01 c0       	rjmp	.+2      	; 0x24d4 <__udivdi3_umoddi3>

000024d2 <__udivdi3>:
    24d2:	e8 94       	clt

000024d4 <__udivdi3_umoddi3>:
    24d4:	8f 92       	push	r8
    24d6:	9f 92       	push	r9
    24d8:	cf 93       	push	r28
    24da:	df 93       	push	r29
    24dc:	0e 94 75 12 	call	0x24ea	; 0x24ea <__udivmod64>
    24e0:	df 91       	pop	r29
    24e2:	cf 91       	pop	r28
    24e4:	9f 90       	pop	r9
    24e6:	8f 90       	pop	r8
    24e8:	08 95       	ret

000024ea <__udivmod64>:
    24ea:	88 24       	eor	r8, r8
    24ec:	99 24       	eor	r9, r9
    24ee:	f4 01       	movw	r30, r8
    24f0:	e4 01       	movw	r28, r8
    24f2:	b0 e4       	ldi	r27, 0x40	; 64
    24f4:	9f 93       	push	r25
    24f6:	aa 27       	eor	r26, r26
    24f8:	9a 15       	cp	r25, r10
    24fa:	8b 04       	cpc	r8, r11
    24fc:	9c 04       	cpc	r9, r12
    24fe:	ed 05       	cpc	r30, r13
    2500:	fe 05       	cpc	r31, r14
    2502:	cf 05       	cpc	r28, r15
    2504:	d0 07       	cpc	r29, r16
    2506:	a1 07       	cpc	r26, r17
    2508:	98 f4       	brcc	.+38     	; 0x2530 <__udivmod64+0x46>
    250a:	ad 2f       	mov	r26, r29
    250c:	dc 2f       	mov	r29, r28
    250e:	cf 2f       	mov	r28, r31
    2510:	fe 2f       	mov	r31, r30
    2512:	e9 2d       	mov	r30, r9
    2514:	98 2c       	mov	r9, r8
    2516:	89 2e       	mov	r8, r25
    2518:	98 2f       	mov	r25, r24
    251a:	87 2f       	mov	r24, r23
    251c:	76 2f       	mov	r23, r22
    251e:	65 2f       	mov	r22, r21
    2520:	54 2f       	mov	r21, r20
    2522:	43 2f       	mov	r20, r19
    2524:	32 2f       	mov	r19, r18
    2526:	22 27       	eor	r18, r18
    2528:	b8 50       	subi	r27, 0x08	; 8
    252a:	31 f7       	brne	.-52     	; 0x24f8 <__udivmod64+0xe>
    252c:	bf 91       	pop	r27
    252e:	27 c0       	rjmp	.+78     	; 0x257e <__udivmod64+0x94>
    2530:	1b 2e       	mov	r1, r27
    2532:	bf 91       	pop	r27
    2534:	bb 27       	eor	r27, r27
    2536:	22 0f       	add	r18, r18
    2538:	33 1f       	adc	r19, r19
    253a:	44 1f       	adc	r20, r20
    253c:	55 1f       	adc	r21, r21
    253e:	66 1f       	adc	r22, r22
    2540:	77 1f       	adc	r23, r23
    2542:	88 1f       	adc	r24, r24
    2544:	99 1f       	adc	r25, r25
    2546:	88 1c       	adc	r8, r8
    2548:	99 1c       	adc	r9, r9
    254a:	ee 1f       	adc	r30, r30
    254c:	ff 1f       	adc	r31, r31
    254e:	cc 1f       	adc	r28, r28
    2550:	dd 1f       	adc	r29, r29
    2552:	aa 1f       	adc	r26, r26
    2554:	bb 1f       	adc	r27, r27
    2556:	8a 14       	cp	r8, r10
    2558:	9b 04       	cpc	r9, r11
    255a:	ec 05       	cpc	r30, r12
    255c:	fd 05       	cpc	r31, r13
    255e:	ce 05       	cpc	r28, r14
    2560:	df 05       	cpc	r29, r15
    2562:	a0 07       	cpc	r26, r16
    2564:	b1 07       	cpc	r27, r17
    2566:	48 f0       	brcs	.+18     	; 0x257a <__udivmod64+0x90>
    2568:	8a 18       	sub	r8, r10
    256a:	9b 08       	sbc	r9, r11
    256c:	ec 09       	sbc	r30, r12
    256e:	fd 09       	sbc	r31, r13
    2570:	ce 09       	sbc	r28, r14
    2572:	df 09       	sbc	r29, r15
    2574:	a0 0b       	sbc	r26, r16
    2576:	b1 0b       	sbc	r27, r17
    2578:	21 60       	ori	r18, 0x01	; 1
    257a:	1a 94       	dec	r1
    257c:	e1 f6       	brne	.-72     	; 0x2536 <__udivmod64+0x4c>
    257e:	2e f4       	brtc	.+10     	; 0x258a <__udivmod64+0xa0>
    2580:	94 01       	movw	r18, r8
    2582:	af 01       	movw	r20, r30
    2584:	be 01       	movw	r22, r28
    2586:	cd 01       	movw	r24, r26
    2588:	00 0c       	add	r0, r0
    258a:	08 95       	ret

0000258c <__umulhisi3>:
    258c:	a2 9f       	mul	r26, r18
    258e:	b0 01       	movw	r22, r0
    2590:	b3 9f       	mul	r27, r19
    2592:	c0 01       	movw	r24, r0
    2594:	a3 9f       	mul	r26, r19
    2596:	70 0d       	add	r23, r0
    2598:	81 1d       	adc	r24, r1
    259a:	11 24       	eor	r1, r1
    259c:	91 1d       	adc	r25, r1
    259e:	b2 9f       	mul	r27, r18
    25a0:	70 0d       	add	r23, r0
    25a2:	81 1d       	adc	r24, r1
    25a4:	11 24       	eor	r1, r1
    25a6:	91 1d       	adc	r25, r1
    25a8:	08 95       	ret

000025aa <_exit>:
    25aa:	f8 94       	cli

000025ac <__stop_program>:
    25ac:	ff cf       	rjmp	.-2      	; 0x25ac <__stop_program>
